{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:59:54 GMT", "package": "opencode-ai", "version": "0.1.0a35", "json": {"info": {"author": null, "author_email": "Opencode <support@sst.dev>", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed"], "description": "# Opencode Python API library\n\n<!-- prettier-ignore -->\n[![PyPI version](https://img.shields.io/pypi/v/opencode-ai.svg?label=pypi%20(stable))](https://pypi.org/project/opencode-ai/)\n\nThe Opencode Python library provides convenient access to the Opencode REST API from any Python 3.8+\napplication. The library includes type definitions for all request params and response fields,\nand offers both synchronous and asynchronous clients powered by [httpx](https://github.com/encode/httpx).\n\nIt is generated with [Stainless](https://www.stainless.com/).\n\n## Documentation\n\nThe REST API documentation can be found on [opencode.ai](https://opencode.ai/docs). The full API of this library can be found in [api.md](https://github.com/sst/opencode-sdk-python/tree/main/api.md).\n\n## Installation\n\n```sh\n# install from PyPI\npip install --pre opencode-ai\n```\n\n## Usage\n\nThe full API of this library can be found in [api.md](https://github.com/sst/opencode-sdk-python/tree/main/api.md).\n\n```python\nfrom opencode_ai import Opencode\n\nclient = Opencode()\n\nsessions = client.session.list()\n```\n\n## Async usage\n\nSimply import `AsyncOpencode` instead of `Opencode` and use `await` with each API call:\n\n```python\nimport asyncio\nfrom opencode_ai import AsyncOpencode\n\nclient = AsyncOpencode()\n\n\nasync def main() -> None:\n    sessions = await client.session.list()\n\n\nasyncio.run(main())\n```\n\nFunctionality between the synchronous and asynchronous clients is otherwise identical.\n\n### With aiohttp\n\nBy default, the async client uses `httpx` for HTTP requests. However, for improved concurrency performance you may also use `aiohttp` as the HTTP backend.\n\nYou can enable this by installing `aiohttp`:\n\n```sh\n# install from PyPI\npip install --pre opencode-ai[aiohttp]\n```\n\nThen you can enable it by instantiating the client with `http_client=DefaultAioHttpClient()`:\n\n```python\nimport asyncio\nfrom opencode_ai import DefaultAioHttpClient\nfrom opencode_ai import AsyncOpencode\n\n\nasync def main() -> None:\n    async with AsyncOpencode(\n        http_client=DefaultAioHttpClient(),\n    ) as client:\n        sessions = await client.session.list()\n\n\nasyncio.run(main())\n```\n\n## Streaming responses\n\nWe provide support for streaming responses using Server Side Events (SSE).\n\n```python\nfrom opencode_ai import Opencode\n\nclient = Opencode()\n\nstream = client.event.list()\nfor events in stream:\n    print(events)\n```\n\nThe async client uses the exact same interface.\n\n```python\nfrom opencode_ai import AsyncOpencode\n\nclient = AsyncOpencode()\n\nstream = await client.event.list()\nasync for events in stream:\n    print(events)\n```\n\n## Using types\n\nNested request parameters are [TypedDicts](https://docs.python.org/3/library/typing.html#typing.TypedDict). Responses are [Pydantic models](https://docs.pydantic.dev) which also provide helper methods for things like:\n\n- Serializing back into JSON, `model.to_json()`\n- Converting to a dictionary, `model.to_dict()`\n\nTyped requests and responses provide autocomplete and documentation within your editor. If you would like to see type errors in VS Code to help catch bugs earlier, set `python.analysis.typeCheckingMode` to `basic`.\n\n## Handling errors\n\nWhen the library is unable to connect to the API (for example, due to network connection problems or a timeout), a subclass of `opencode_ai.APIConnectionError` is raised.\n\nWhen the API returns a non-success status code (that is, 4xx or 5xx\nresponse), a subclass of `opencode_ai.APIStatusError` is raised, containing `status_code` and `response` properties.\n\nAll errors inherit from `opencode_ai.APIError`.\n\n```python\nimport opencode_ai\nfrom opencode_ai import Opencode\n\nclient = Opencode()\n\ntry:\n    client.session.list()\nexcept opencode_ai.APIConnectionError as e:\n    print(\"The server could not be reached\")\n    print(e.__cause__)  # an underlying Exception, likely raised within httpx.\nexcept opencode_ai.RateLimitError as e:\n    print(\"A 429 status code was received; we should back off a bit.\")\nexcept opencode_ai.APIStatusError as e:\n    print(\"Another non-200-range status code was received\")\n    print(e.status_code)\n    print(e.response)\n```\n\nError codes are as follows:\n\n| Status Code | Error Type                 |\n| ----------- | -------------------------- |\n| 400         | `BadRequestError`          |\n| 401         | `AuthenticationError`      |\n| 403         | `PermissionDeniedError`    |\n| 404         | `NotFoundError`            |\n| 422         | `UnprocessableEntityError` |\n| 429         | `RateLimitError`           |\n| >=500       | `InternalServerError`      |\n| N/A         | `APIConnectionError`       |\n\n### Retries\n\nCertain errors are automatically retried 2 times by default, with a short exponential backoff.\nConnection errors (for example, due to a network connectivity problem), 408 Request Timeout, 409 Conflict,\n429 Rate Limit, and >=500 Internal errors are all retried by default.\n\nYou can use the `max_retries` option to configure or disable retry settings:\n\n```python\nfrom opencode_ai import Opencode\n\n# Configure the default for all requests:\nclient = Opencode(\n    # default is 2\n    max_retries=0,\n)\n\n# Or, configure per-request:\nclient.with_options(max_retries=5).session.list()\n```\n\n### Timeouts\n\nBy default requests time out after 1 minute. You can configure this with a `timeout` option,\nwhich accepts a float or an [`httpx.Timeout`](https://www.python-httpx.org/advanced/timeouts/#fine-tuning-the-configuration) object:\n\n```python\nfrom opencode_ai import Opencode\n\n# Configure the default for all requests:\nclient = Opencode(\n    # 20 seconds (default is 1 minute)\n    timeout=20.0,\n)\n\n# More granular control:\nclient = Opencode(\n    timeout=httpx.Timeout(60.0, read=5.0, write=10.0, connect=2.0),\n)\n\n# Override per-request:\nclient.with_options(timeout=5.0).session.list()\n```\n\nOn timeout, an `APITimeoutError` is thrown.\n\nNote that requests that time out are [retried twice by default](https://github.com/sst/opencode-sdk-python/tree/main/#retries).\n\n## Advanced\n\n### Logging\n\nWe use the standard library [`logging`](https://docs.python.org/3/library/logging.html) module.\n\nYou can enable logging by setting the environment variable `OPENCODE_LOG` to `info`.\n\n```shell\n$ export OPENCODE_LOG=info\n```\n\nOr to `debug` for more verbose logging.\n\n### How to tell whether `None` means `null` or missing\n\nIn an API response, a field may be explicitly `null`, or missing entirely; in either case, its value is `None` in this library. You can differentiate the two cases with `.model_fields_set`:\n\n```py\nif response.my_field is None:\n  if 'my_field' not in response.model_fields_set:\n    print('Got json like {}, without a \"my_field\" key present at all.')\n  else:\n    print('Got json like {\"my_field\": null}.')\n```\n\n### Accessing raw response data (e.g. headers)\n\nThe \"raw\" Response object can be accessed by prefixing `.with_raw_response.` to any HTTP method call, e.g.,\n\n```py\nfrom opencode_ai import Opencode\n\nclient = Opencode()\nresponse = client.session.with_raw_response.list()\nprint(response.headers.get('X-My-Header'))\n\nsession = response.parse()  # get the object that `session.list()` would have returned\nprint(session)\n```\n\nThese methods return an [`APIResponse`](https://github.com/sst/opencode-sdk-python/tree/main/src/opencode_ai/_response.py) object.\n\nThe async client returns an [`AsyncAPIResponse`](https://github.com/sst/opencode-sdk-python/tree/main/src/opencode_ai/_response.py) with the same structure, the only difference being `await`able methods for reading the response content.\n\n#### `.with_streaming_response`\n\nThe above interface eagerly reads the full response body when you make the request, which may not always be what you want.\n\nTo stream the response body, use `.with_streaming_response` instead, which requires a context manager and only reads the response body once you call `.read()`, `.text()`, `.json()`, `.iter_bytes()`, `.iter_text()`, `.iter_lines()` or `.parse()`. In the async client, these are async methods.\n\n```python\nwith client.session.with_streaming_response.list() as response:\n    print(response.headers.get(\"X-My-Header\"))\n\n    for line in response.iter_lines():\n        print(line)\n```\n\nThe context manager is required so that the response will reliably be closed.\n\n### Making custom/undocumented requests\n\nThis library is typed for convenient access to the documented API.\n\nIf you need to access undocumented endpoints, params, or response properties, the library can still be used.\n\n#### Undocumented endpoints\n\nTo make requests to undocumented endpoints, you can make requests using `client.get`, `client.post`, and other\nhttp verbs. Options on the client will be respected (such as retries) when making this request.\n\n```py\nimport httpx\n\nresponse = client.post(\n    \"/foo\",\n    cast_to=httpx.Response,\n    body={\"my_param\": True},\n)\n\nprint(response.headers.get(\"x-foo\"))\n```\n\n#### Undocumented request params\n\nIf you want to explicitly send an extra param, you can do so with the `extra_query`, `extra_body`, and `extra_headers` request\noptions.\n\n#### Undocumented response properties\n\nTo access undocumented response properties, you can access the extra fields like `response.unknown_prop`. You\ncan also get all the extra fields on the Pydantic model as a dict with\n[`response.model_extra`](https://docs.pydantic.dev/latest/api/base_model/#pydantic.BaseModel.model_extra).\n\n### Configuring the HTTP client\n\nYou can directly override the [httpx client](https://www.python-httpx.org/api/#client) to customize it for your use case, including:\n\n- Support for [proxies](https://www.python-httpx.org/advanced/proxies/)\n- Custom [transports](https://www.python-httpx.org/advanced/transports/)\n- Additional [advanced](https://www.python-httpx.org/advanced/clients/) functionality\n\n```python\nimport httpx\nfrom opencode_ai import Opencode, DefaultHttpxClient\n\nclient = Opencode(\n    # Or use the `OPENCODE_BASE_URL` env var\n    base_url=\"http://my.test.server.example.com:8083\",\n    http_client=DefaultHttpxClient(\n        proxy=\"http://my.test.proxy.example.com\",\n        transport=httpx.HTTPTransport(local_address=\"0.0.0.0\"),\n    ),\n)\n```\n\nYou can also customize the client on a per-request basis by using `with_options()`:\n\n```python\nclient.with_options(http_client=DefaultHttpxClient(...))\n```\n\n### Managing HTTP resources\n\nBy default the library closes underlying HTTP connections whenever the client is [garbage collected](https://docs.python.org/3/reference/datamodel.html#object.__del__). You can manually close the client using the `.close()` method if desired, or with a context manager that closes when exiting.\n\n```py\nfrom opencode_ai import Opencode\n\nwith Opencode() as client:\n  # make requests here\n  ...\n\n# HTTP client is now closed\n```\n\n## Versioning\n\nThis package generally follows [SemVer](https://semver.org/spec/v2.0.0.html) conventions, though certain backwards-incompatible changes may be released as minor versions:\n\n1. Changes that only affect static types, without breaking runtime behavior.\n2. Changes to library internals which are technically public but not intended or documented for external use. _(Please open a GitHub issue to let us know if you are relying on such internals.)_\n3. Changes that we do not expect to impact the vast majority of users in practice.\n\nWe take backwards-compatibility seriously and work hard to ensure you can rely on a smooth upgrade experience.\n\nWe are keen for your feedback; please open an [issue](https://www.github.com/sst/opencode-sdk-python/issues) with questions, bugs, or suggestions.\n\n### Determining the installed version\n\nIf you've upgraded to the latest version but aren't seeing any new features you were expecting then your python environment is likely still using an older version.\n\nYou can determine the version that is being used at runtime with:\n\n```py\nimport opencode_ai\nprint(opencode_ai.__version__)\n```\n\n## Requirements\n\nPython 3.8 or higher.\n\n## Contributing\n\nSee [the contributing documentation](https://github.com/sst/opencode-sdk-python/tree/main/./CONTRIBUTING.md).\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "MIT", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "opencode-ai", "package_url": "https://pypi.org/project/opencode-ai/", "platform": null, "project_url": "https://pypi.org/project/opencode-ai/", "project_urls": {"Homepage": "https://github.com/sst/opencode-sdk-python", "Repository": "https://github.com/sst/opencode-sdk-python"}, "provides_extra": ["aiohttp"], "release_url": "https://pypi.org/project/opencode-ai/0.1.0a35/", "requires_dist": ["anyio<5,>=3.5.0", "distro<2,>=1.7.0", "httpx<1,>=0.23.0", "pydantic<3,>=1.9.0", "sniffio", "typing-extensions<5,>=4.10", "aiohttp; extra == \"aiohttp\"", "httpx-aiohttp>=0.1.8; extra == \"aiohttp\""], "requires_python": ">=3.8", "summary": "The official Python library for the opencode API", "version": "0.1.0a35", "yanked": false, "yanked_reason": null}, "last_serial": 30395214, "urls": [{"comment_text": "", "digests": {"blake2b_256": "ed2d77d0f91a01495c3543fe786cbe9f3ee0fb549e6b3887dce8c0c0d95e997f", "md5": "93149c4e9dd746880fe04c7586b4f22f", "sha256": "4b04b358c73952462d9e075d8cd7509d58fb45a83b235e8cd2172d375266fe63"}, "downloads": -1, "filename": "opencode_ai-0.1.0a35-py3-none-any.whl", "has_sig": false, "md5_digest": "93149c4e9dd746880fe04c7586b4f22f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 110196, "upload_time": "2025-07-29T02:59:54", "upload_time_iso_8601": "2025-07-29T02:59:54.039038Z", "url": "https://files.pythonhosted.org/packages/ed/2d/77d0f91a01495c3543fe786cbe9f3ee0fb549e6b3887dce8c0c0d95e997f/opencode_ai-0.1.0a35-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "54008ef32e2365d778bdbcbee959d647865041ffa8227cb2f9f23687668aa4f6", "md5": "e5f4a0bfdc36e1d13be87a5f806e3fd9", "sha256": "84f1632abb5ec14fa933386962fb3da179c49c19283c95b90b447b670d7ea67a"}, "downloads": -1, "filename": "opencode_ai-0.1.0a35.tar.gz", "has_sig": false, "md5_digest": "e5f4a0bfdc36e1d13be87a5f806e3fd9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 107526, "upload_time": "2025-07-29T02:59:55", "upload_time_iso_8601": "2025-07-29T02:59:55.322325Z", "url": "https://files.pythonhosted.org/packages/54/00/8ef32e2365d778bdbcbee959d647865041ffa8227cb2f9f23687668aa4f6/opencode_ai-0.1.0a35.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:58:36 GMT", "package": "Spec7plot", "version": "1.2.5", "json": {"info": {"author": "Won-Hyeong Lee", "author_email": "wohy1220@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12"], "description": "", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Home-Page", "Keywords", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/Yicircle/Spec7plot", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "Spec7plot", "package_url": "https://pypi.org/project/Spec7plot/", "platform": null, "project_url": "https://pypi.org/project/Spec7plot/", "project_urls": {"Homepage": "https://github.com/Yicircle/Spec7plot"}, "provides_extra": null, "release_url": "https://pypi.org/project/Spec7plot/1.2.5/", "requires_dist": ["numpy", "astropy", "matplotlib", "seaborn", "pathlib", "photutils", "reproject"], "requires_python": ">=3.10", "summary": "Spectral figure plotting package for 7-Dimensional Telescope users by Won-Hyeong Lee", "version": "1.2.5", "yanked": false, "yanked_reason": null}, "last_serial": 30395211, "urls": [{"comment_text": null, "digests": {"blake2b_256": "386388d6cbe2e9869e3537602be1aeb85911dc0acda663ea4a05d8e0d868b652", "md5": "6f6ff672c1fc8aa7de53338c72a72c5a", "sha256": "fee3094dd78cb296b8e9d229688083a52e43a1c64fc788f227c22a6b6c78a4ae"}, "downloads": -1, "filename": "Spec7plot-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "6f6ff672c1fc8aa7de53338c72a72c5a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 17442, "upload_time": "2025-07-29T02:58:36", "upload_time_iso_8601": "2025-07-29T02:58:36.884936Z", "url": "https://files.pythonhosted.org/packages/38/63/88d6cbe2e9869e3537602be1aeb85911dc0acda663ea4a05d8e0d868b652/Spec7plot-1.2.5-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "9106b1e0ae6586fb6b97574bc378bceee546d6f4e808153132ef16c228376abb", "md5": "a5be6e1184058d24f7852748eda01665", "sha256": "9c3a998e14a92c2412b8c40ea44167f5bbccbb48b25fb45ad200f73760a55308"}, "downloads": -1, "filename": "spec7plot-1.2.5.tar.gz", "has_sig": false, "md5_digest": "a5be6e1184058d24f7852748eda01665", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 10110, "upload_time": "2025-07-29T02:58:41", "upload_time_iso_8601": "2025-07-29T02:58:41.288369Z", "url": "https://files.pythonhosted.org/packages/91/06/b1e0ae6586fb6b97574bc378bceee546d6f4e808153132ef16c228376abb/spec7plot-1.2.5.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:58:09 GMT", "package": "gcpds-cv-pykit", "version": "0.1.0.42", "json": {"info": {"author": "GCPDS Team", "author_email": "gcpds_man@unal.edu.co", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Image Processing", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# GCPDS Computer Vision Python Kit\r\n\r\nA comprehensive toolkit for computer vision and segmentation tasks, developed by the GCPDS Team. This package provides state-of-the-art tools for training, evaluating, and deploying segmentation models with support for various architectures, loss functions, and performance metrics.\r\n\r\n## \ud83d\ude80 Features\r\n\r\n- **Segmentation Models**: Support for UNet, ResUNet, DeepLabV3Plus, and FCN architectures\r\n- **Multiple Loss Functions**: DICE, Cross Entropy, Focal Loss, and Tversky Loss\r\n- **Performance Evaluation**: Comprehensive metrics including Dice, Jaccard, Sensitivity, and Specificity\r\n- **Training Pipeline**: Complete training workflow with validation and monitoring\r\n- **Data Loading**: Efficient data loading utilities for segmentation tasks\r\n- **Experiment Tracking**: Integration with Weights & Biases (wandb)\r\n- **Mixed Precision Training**: Automatic Mixed Precision (AMP) support for faster training\r\n- **Dataset Management**: Built-in Kaggle dataset download and preparation utilities\r\n- **Visualization Tools**: Random sample visualization utilities for dataset exploration\r\n- **Memory Management**: Efficient memory handling and cleanup utilities\r\n\r\n## \ud83d\udccb Requirements\r\n\r\n- Python >= 3.8\r\n- PyTorch >= 2.0.0\r\n- CUDA-compatible GPU (recommended)\r\n\r\n## \ud83d\udd27 Installation\r\n\r\n### From PyPI\r\n```bash\r\npip install gcpds-cv-pykit\r\n```\r\n\r\n### From Source\r\n```bash\r\ngit clone https://github.com/UN-GCPDS/gcpds-cv-pykit.git\r\ncd gcpds-cv-pykit\r\npip install -e .\r\n```\r\n\r\n### Development Installation\r\n```bash\r\ngit clone https://github.com/UN-GCPDS/gcpds-cv-pykit.git\r\ncd gcpds-cv-pykit\r\npip install -e \".[dev,docs]\"\r\n```\r\n\r\n## \ud83d\udce6 Dependencies\r\n\r\n### Core Dependencies\r\n- `torch>=2.0.0` - Deep learning framework\r\n- `torchvision>=0.15.0` - Computer vision utilities\r\n- `numpy>=1.21.0` - Numerical computing\r\n- `opencv-python>=4.6.0` - Image processing\r\n- `matplotlib>=3.5.0` - Plotting and visualization\r\n- `wandb>=0.15.0` - Experiment tracking\r\n- `tqdm>=4.64.0` - Progress bars\r\n- `Pillow>=9.0.0` - Image handling\r\n- `scipy>=1.9.0` - Scientific computing\r\n- `pandas>=1.4.0` - Data manipulation\r\n- `kagglehub` - Kaggle dataset downloads\r\n\r\n### Optional Dependencies\r\n- **Development**: `pytest>=7.0.0`, `pytest-cov>=4.0.0`, `black>=22.0.0`, `flake8>=5.0.0`, `isort>=5.10.0`\r\n- **Documentation**: `sphinx>=5.0.0`, `sphinx-rtd-theme>=1.0.0`\r\n\r\n## \ud83c\udfd7\ufe0f Project Structure\r\n\r\n```\r\ngcpds_cv_pykit/\r\n\u251c\u2500\u2500 baseline/\r\n\u2502   \u251c\u2500\u2500 trainers/           # Training utilities\r\n\u2502   \u2502   \u251c\u2500\u2500 trainer.py      # Main training class\r\n\u2502   \u2502   \u2514\u2500\u2500 __init__.py\r\n\u2502   \u251c\u2500\u2500 models/             # Model architectures\r\n\u2502   \u2502   \u251c\u2500\u2500 UNet.py         # U-Net implementation\r\n\u2502   \u2502   \u251c\u2500\u2500 ResUNet.py      # Residual U-Net\r\n\u2502   \u2502   \u251c\u2500\u2500 DeepLabV3Plus.py # DeepLab v3+ implementation\r\n\u2502   \u2502   \u251c\u2500\u2500 FCN.py          # Fully Convolutional Network\r\n\u2502   \u2502   \u2514\u2500\u2500 __init__.py\r\n\u2502   \u251c\u2500\u2500 losses/             # Loss functions\r\n\u2502   \u2502   \u251c\u2500\u2500 DICE.py         # DICE loss implementation\r\n\u2502   \u2502   \u251c\u2500\u2500 CrossEntropy.py # Cross entropy loss\r\n\u2502   \u2502   \u251c\u2500\u2500 Focal.py        # Focal loss implementation\r\n\u2502   \u2502   \u251c\u2500\u2500 Tversky.py      # Tversky loss implementation\r\n\u2502   \u2502   \u2514\u2500\u2500 __init__.py\r\n\u2502   \u251c\u2500\u2500 dataloaders/        # Data loading utilities\r\n\u2502   \u2502   \u251c\u2500\u2500 dataloader.py   # Custom data loading implementations\r\n\u2502   \u2502   \u2514\u2500\u2500 __init__.py\r\n\u2502   \u2514\u2500\u2500 performance_model.py # Model evaluation and performance metrics\r\n\u251c\u2500\u2500 crowd/                  # Crowd-specific implementations (under development)\r\n\u251c\u2500\u2500 datasets/               # Dataset utilities and Kaggle integration\r\n\u2502   \u251c\u2500\u2500 datasets.py         # Kaggle dataset download and preparation\r\n\u2502   \u2514\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 visuals/               # Visualization tools\r\n\u2502   \u251c\u2500\u2500 random_sample_visualizations.py  # Dataset visualization utilities\r\n\u2502   \u2514\u2500\u2500 __init__.py\r\n\u251c\u2500\u2500 _version.py            # Version information\r\n\u2514\u2500\u2500 __init__.py\r\n```\r\n\r\n## \ud83d\ude80 Quick Start\r\n\r\n### Dataset Download and Preparation\r\n\r\n```python\r\nfrom gcpds_cv_pykit.datasets import download_and_prepare_dataset\r\n\r\n# Download a Kaggle dataset\r\ndataset_path = download_and_prepare_dataset('username/dataset-name/versions/1')\r\nprint(f\"Dataset prepared at: {dataset_path}\")\r\n```\r\n\r\n### Dataset Visualization\r\n\r\n```python\r\nfrom gcpds_cv_pykit.visuals import random_sample_visualization\r\nfrom torch.utils.data import DataLoader\r\n\r\n# Visualize random samples from your dataset\r\nrandom_sample_visualization(\r\n    dataset=your_dataloader,\r\n    num_classes=2,\r\n    single_class=None,  # Show all classes\r\n    max_classes_to_show=7,\r\n    type=\"baseline\"\r\n)\r\n```\r\n\r\n### Model Training\r\n\r\n```python\r\nfrom gcpds_cv_pykit.baseline.trainers import Trainer\r\nfrom gcpds_cv_pykit.baseline.models import UNet\r\n\r\n# Initialize model\r\nmodel = UNet(in_channels=3, out_channels=2, pretrained=True)\r\n\r\n# Configure training\r\nconfig = {\r\n    'Device': 'cuda',\r\n    'Loss Function': 'DICE',\r\n    'Number of classes': 2,\r\n    'Learning Rate': 0.001,\r\n    'Epochs': 100,\r\n    'Batch Size': 8,\r\n    # ... other configuration parameters\r\n}\r\n\r\n# Initialize trainer\r\ntrainer = Trainer(\r\n    model=model,\r\n    train_dataset=train_dataloader,\r\n    val_dataset=val_dataloader,\r\n    config=config\r\n)\r\n\r\n# Start training\r\ntrainer.train()\r\n```\r\n\r\n### Model Performance Evaluation\r\n\r\n```python\r\nfrom gcpds_cv_pykit.baseline import PerformanceModels\r\n\r\n# Evaluate trained model\r\nconfig = {\r\n    'Device': 'cuda',\r\n    'Loss Function': 'DICE',\r\n    'Number of classes': 2,\r\n    # ... other configuration parameters\r\n}\r\n\r\nevaluator = PerformanceModels(\r\n    model=trained_model,\r\n    test_dataset=test_dataloader,\r\n    config=config\r\n)\r\n```\r\n\r\n## \ud83d\udcca Supported Models\r\n\r\nThe toolkit provides several state-of-the-art segmentation model architectures, all with ResNet34 backbone support:\r\n\r\n### **UNet**\r\n- **Architecture**: Classic U-Net with ResNet34 encoder\r\n- **Features**:\r\n  - Skip connections for precise localization\r\n  - Pretrained ResNet34 backbone support\r\n  - Configurable encoder/decoder channels\r\n  - Optional final activation functions (sigmoid, softmax, tanh)\r\n  - Bilinear interpolation for upsampling\r\n- **Use Case**: General-purpose segmentation tasks\r\n\r\n### **ResUNet**\r\n- **Architecture**: Residual U-Net with ResNet34 backbone\r\n- **Features**:\r\n  - Enhanced skip connections with residual blocks\r\n  - ResNet34 pretrained encoder\r\n  - Improved gradient flow through residual connections\r\n  - Batch normalization and ReLU activations\r\n- **Use Case**: Complex segmentation tasks requiring deeper feature learning\r\n\r\n### **DeepLabV3Plus**\r\n- **Architecture**: DeepLab v3+ with Atrous Spatial Pyramid Pooling (ASPP)\r\n- **Features**:\r\n  - ASPP module for multi-scale feature extraction\r\n  - Separable convolutions for efficiency\r\n  - ResNet34 backbone with dilated convolutions\r\n  - Low-level feature fusion\r\n  - Configurable atrous rates\r\n- **Use Case**: High-resolution segmentation with multi-scale context\r\n\r\n### **FCN (Fully Convolutional Network)**\r\n- **Architecture**: FCN with ResNet34 backbone\r\n- **Features**:\r\n  - Multi-scale skip connections (FCN-8s, FCN-16s, FCN-32s style)\r\n  - Transposed convolutions for upsampling\r\n  - ResNet34 pretrained encoder\r\n  - Feature fusion at multiple scales\r\n- **Use Case**: Semantic segmentation with multi-scale feature integration\r\n\r\n### **Common Model Features**\r\n- **Backbone**: ResNet34 with ImageNet pretrained weights\r\n- **Input Channels**: Configurable (default: 3 for RGB)\r\n- **Output Channels**: Configurable number of classes\r\n- **Activation Functions**: Support for sigmoid, softmax, tanh, or none\r\n- **Mixed Precision**: Compatible with AMP training\r\n- **Memory Efficient**: Optimized for GPU memory usage\r\n\r\n### **Model Usage Example**\r\n```python\r\nfrom gcpds_cv_pykit.baseline.models import UNet, ResUNet, DeepLabV3Plus, FCN\r\n\r\n# UNet with default settings\r\nmodel = UNet(\r\n    in_channels=3,\r\n    out_channels=2,  # Binary segmentation\r\n    pretrained=True,\r\n    final_activation='sigmoid'\r\n)\r\n\r\n# DeepLabV3Plus for multi-class segmentation\r\nmodel = DeepLabV3Plus(\r\n    in_channels=3,\r\n    out_channels=5,  # 5-class segmentation\r\n    pretrained=True,\r\n    final_activation='softmax'\r\n)\r\n\r\n# ResUNet for complex segmentation\r\nmodel = ResUNet(\r\n    in_channels=3,\r\n    out_channels=1,\r\n    pretrained=True\r\n)\r\n\r\n# FCN for semantic segmentation\r\nmodel = FCN(\r\n    in_channels=3,\r\n    out_channels=10,\r\n    pretrained=True,\r\n    final_activation='softmax'\r\n)\r\n```\r\n\r\n## \ud83c\udfaf Loss Functions\r\n\r\nThe following loss functions are available through the baseline.losses module:\r\n\r\n- **DICE Loss**: Optimized for segmentation tasks with class imbalance\r\n- **Cross Entropy**: Standard classification loss for multi-class segmentation\r\n- **Focal Loss**: Addresses class imbalance by focusing on hard examples\r\n- **Tversky Loss**: Generalization of Dice loss with configurable precision/recall balance\r\n\r\n### **Loss Function Usage**\r\n```python\r\nfrom gcpds_cv_pykit.baseline.losses import DICELoss, CrossEntropyLoss, FocalLoss, TverskyLoss\r\n\r\n# DICE Loss for binary segmentation\r\ndice_loss = DICELoss()\r\n\r\n# Cross Entropy for multi-class segmentation\r\nce_loss = CrossEntropyLoss()\r\n\r\n# Focal Loss for handling class imbalance\r\nfocal_loss = FocalLoss(alpha=0.25, gamma=2.0)\r\n\r\n# Tversky Loss with custom alpha/beta\r\ntversky_loss = TverskyLoss(alpha=0.3, beta=0.7)\r\n```\r\n\r\n## \ud83d\udcc8 Metrics\r\n\r\nThe toolkit provides comprehensive evaluation metrics through the PerformanceModels class:\r\n\r\n- **Dice Coefficient**: Overlap-based similarity measure\r\n- **Jaccard Index (IoU)**: Intersection over Union\r\n- **Sensitivity (Recall)**: True positive rate\r\n- **Specificity**: True negative rate\r\n\r\nAll metrics are calculated both globally and per-class with detailed statistical analysis.\r\n\r\n## \ud83d\udd27 Configuration\r\n\r\nThe toolkit uses dictionary-based configuration. Key parameters include:\r\n\r\n```python\r\nconfig = {\r\n    # Model Configuration\r\n    'Model': 'UNet',\r\n    'Backbone': 'resnet34',\r\n    'Pretrained': True,\r\n    'Number of classes': 2,\r\n    'Input size': [3, 256, 256],\r\n    \r\n    # Training Configuration\r\n    'Loss Function': 'DICE',\r\n    'Optimizer': 'Adam',\r\n    'Learning Rate': 0.001,\r\n    'Epochs': 100,\r\n    'Batch Size': 8,\r\n    \r\n    # Advanced Options\r\n    'AMP': True,  # Automatic Mixed Precision\r\n    'Device': 'cuda',\r\n    'Wandb monitoring': ['api_key', 'project_name', 'run_name']\r\n}\r\n```\r\n\r\n## \ud83d\udcca Experiment Tracking\r\n\r\nIntegration with Weights & Biases for experiment tracking:\r\n\r\n```python\r\nconfig['Wandb monitoring'] = [\r\n    'your_wandb_api_key',\r\n    'your_project_name',\r\n    'experiment_name'\r\n]\r\n```\r\n\r\n## \ud83c\udfa8 Visualization\r\n\r\nBuilt-in visualization tools for:\r\n- Random dataset sample visualization\r\n- Multi-class segmentation mask display\r\n- Training/validation curves (through wandb integration)\r\n- Model predictions vs ground truth\r\n\r\nExample usage:\r\n```python\r\nfrom gcpds_cv_pykit.visuals import random_sample_visualization\r\n\r\n# Visualize a single class\r\nrandom_sample_visualization(\r\n    dataset=dataloader,\r\n    num_classes=5,\r\n    single_class=1,  # Show only class 1\r\n    type=\"baseline\"\r\n)\r\n\r\n# Visualize multiple classes\r\nrandom_sample_visualization(\r\n    dataset=dataloader,\r\n    num_classes=5,\r\n    max_classes_to_show=3,\r\n    type=\"baseline\"\r\n)\r\n```\r\n\r\n## \ud83e\uddea Testing\r\n\r\nRun the test suite:\r\n\r\n```bash\r\n# Run all tests\r\npytest\r\n\r\n# Run with coverage\r\npytest --cov=gcpds_cv_pykit\r\n\r\n# Run specific test file\r\npytest tests/test_models.py\r\n```\r\n\r\n## \ud83d\udcda Documentation\r\n\r\nBuild documentation locally:\r\n\r\n```bash\r\ncd docs\r\nmake html\r\n```\r\n\r\n## \ud83e\udd1d Contributing\r\n\r\nWe welcome contributions! Please follow these steps:\r\n\r\n1. Fork the repository\r\n2. Create a feature branch (`git checkout -b feature/amazing-feature`)\r\n3. Commit your changes (`git commit -m 'Add amazing feature'`)\r\n4. Push to the branch (`git push origin feature/amazing-feature`)\r\n5. Open a Pull Request\r\n\r\n### Development Setup\r\n\r\n```bash\r\n# Clone the repository\r\ngit clone https://github.com/UN-GCPDS/gcpds-cv-pykit.git\r\ncd gcpds-cv-pykit\r\n\r\n# Install in development mode\r\npip install -e \".[dev]\"\r\n\r\n# Run code formatting\r\nblack gcpds_cv_pykit/\r\nisort gcpds_cv_pykit/\r\n\r\n# Run linting\r\nflake8 gcpds_cv_pykit/\r\n```\r\n\r\n## \ud83d\udcc4 License\r\n\r\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\r\n\r\n## \ud83d\udc65 Authors\r\n\r\n- **GCPDS Team** - [gcpds_man@unal.edu.co](mailto:gcpds_man@unal.edu.co)\r\n\r\n## \ud83d\ude4f Acknowledgments\r\n\r\n- PyTorch team for the excellent deep learning framework\r\n- The computer vision community for inspiration and best practices\r\n- Kaggle for providing accessible datasets through kagglehub\r\n- Contributors and users of this toolkit\r\n\r\n## \ud83d\udcde Support\r\n\r\n- **Issues**: [GitHub Issues](https://github.com/UN-GCPDS/gcpds-cv-pykit/issues)\r\n- **Documentation**: [Read the Docs](https://gcpds-cv-pykit.readthedocs.io/)\r\n- **Email**: gcpds_man@unal.edu.co\r\n\r\n## \ud83d\udd04 Changelog\r\n\r\n### Version 0.1.0.39 (Current)\r\n- Complete segmentation model implementations (UNet, ResUNet, DeepLabV3Plus, FCN)\r\n- Full loss function suite (DICE, CrossEntropy, Focal, Tversky)\r\n- Training pipeline with Trainer class\r\n- Data loading utilities for segmentation tasks\r\n- Dataset download and preparation utilities via Kaggle integration\r\n- Random sample visualization tools for dataset exploration\r\n- Performance evaluation framework with comprehensive metrics\r\n- Mixed precision training support\r\n- Weights & Biases integration for experiment tracking\r\n\r\n### Upcoming Features\r\n- Additional model architectures (Attention U-Net, U-Net++)\r\n- Advanced data augmentation utilities\r\n- Model ensemble capabilities\r\n- Extended visualization and analysis tools\r\n- Pre-trained model zoo\r\n\r\n---\r\n\r\n**Note**: This project is actively maintained and regularly updated. The API is stable for the current feature set. Please check the documentation and changelog for the latest updates and new features.\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/UN-GCPDS/gcpds-cv-pykit", "keywords": "computer vision, segmentation, deep learning, pytorch, unet, medical imaging, image processing, machine learning, artificial intelligence", "license": "MIT", "license_expression": null, "license_files": null, "maintainer": "GCPDS Team", "maintainer_email": "gcpds_man@unal.edu.co", "name": "gcpds-cv-pykit", "package_url": "https://pypi.org/project/gcpds-cv-pykit/", "platform": "any", "project_url": "https://pypi.org/project/gcpds-cv-pykit/", "project_urls": {"Bug Reports": "https://github.com/UN-GCPDS/gcpds-cv-pykit/issues", "Documentation": "https://gcpds-cv-pykit.readthedocs.io/", "Homepage": "https://github.com/UN-GCPDS/gcpds-cv-pykit", "Source": "https://github.com/UN-GCPDS/gcpds-cv-pykit"}, "provides_extra": ["all", "dev", "docs", "jupyter"], "release_url": "https://pypi.org/project/gcpds-cv-pykit/0.1.0.42/", "requires_dist": ["torch>=2.0.0", "torchvision>=0.15.0", "numpy>=1.21.0", "tqdm>=4.64.0", "matplotlib>=3.5.0", "wandb>=0.15.0", "opencv-python>=4.6.0", "Pillow>=9.0.0", "scipy>=1.9.0", "pandas>=1.4.0", "pytest>=7.0.0; extra == \"all\"", "pytest-cov>=4.0.0; extra == \"all\"", "black>=22.0.0; extra == \"all\"", "flake8>=5.0.0; extra == \"all\"", "isort>=5.10.0; extra == \"all\"", "pre-commit>=2.20.0; extra == \"all\"", "sphinx>=5.0.0; extra == \"all\"", "sphinx-rtd-theme>=1.0.0; extra == \"all\"", "sphinx-autodoc-typehints>=1.19.0; extra == \"all\"", "myst-parser>=0.18.0; extra == \"all\"", "jupyter>=1.0.0; extra == \"all\"", "ipywidgets>=8.0.0; extra == \"all\"", "notebook>=6.4.0; extra == \"all\"", "pytest>=7.0.0; extra == \"dev\"", "pytest-cov>=4.0.0; extra == \"dev\"", "black>=22.0.0; extra == \"dev\"", "flake8>=5.0.0; extra == \"dev\"", "isort>=5.10.0; extra == \"dev\"", "pre-commit>=2.20.0; extra == \"dev\"", "sphinx>=5.0.0; extra == \"docs\"", "sphinx-rtd-theme>=1.0.0; extra == \"docs\"", "sphinx-autodoc-typehints>=1.19.0; extra == \"docs\"", "myst-parser>=0.18.0; extra == \"docs\"", "jupyter>=1.0.0; extra == \"jupyter\"", "ipywidgets>=8.0.0; extra == \"jupyter\"", "notebook>=6.4.0; extra == \"jupyter\""], "requires_python": ">=3.8", "summary": "A comprehensive toolkit for computer vision and segmentation tasks", "version": "0.1.0.42", "yanked": false, "yanked_reason": null}, "last_serial": 30395205, "urls": [{"comment_text": null, "digests": {"blake2b_256": "9097947fee54d52cfba8b718dfab16b1e1c16840c3ace7b9ff0d7c280d70dd73", "md5": "95b49fd79dbc26076fd5332565342f77", "sha256": "469548cac0fc85df3e294f10161c73562a36263db89e04190ec94d83c0ccd48d"}, "downloads": -1, "filename": "gcpds_cv_pykit-0.1.0.42-py3-none-any.whl", "has_sig": false, "md5_digest": "95b49fd79dbc26076fd5332565342f77", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 43771, "upload_time": "2025-07-29T02:58:09", "upload_time_iso_8601": "2025-07-29T02:58:09.667464Z", "url": "https://files.pythonhosted.org/packages/90/97/947fee54d52cfba8b718dfab16b1e1c16840c3ace7b9ff0d7c280d70dd73/gcpds_cv_pykit-0.1.0.42-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "9c3c8b338a322094e0e456ead754d32eac691d2382793374807c0de4ad1ca2a1", "md5": "39f773d087f1c1798d0a535498df8d33", "sha256": "37d085868944890b919d4169a8352a606de247179b16256789d02eb358a2fe1c"}, "downloads": -1, "filename": "gcpds-cv-pykit-0.1.0.42.tar.gz", "has_sig": false, "md5_digest": "39f773d087f1c1798d0a535498df8d33", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 38689, "upload_time": "2025-07-29T02:58:11", "upload_time_iso_8601": "2025-07-29T02:58:11.154981Z", "url": "https://files.pythonhosted.org/packages/9c/3c/8b338a322094e0e456ead754d32eac691d2382793374807c0de4ad1ca2a1/gcpds-cv-pykit-0.1.0.42.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:58:04 GMT", "package": "easypymanager", "version": "1.1.0", "json": {"info": {"author": "sysucai", "author_email": "411703730@qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# EasyPyManager - Python Tool Manager\r\n\r\nEasyPyManager is a GUI application for managing and executing Python scripts(.py/.pyc/.pyd/.so) files. It automatically extracts script metadata and provides features like grouping, searching, and dependency installation.\r\n\r\n## Key Features\r\n\r\nImport and manage Python scripts (.py/.pyc/.pyd/.so)\r\nAutomatic metadata extraction or manual input (name, version, description)\r\nGroup management for scripts\r\nReal-time search functionality\r\nCustomizable Python and pip commands\r\nOne-click dependency installation\r\nWHL file installation support\r\nDrag-and-drop file import\r\nRun scripts via double-click or right-click menu\r\n\r\n## Installation\r\n\r\n1. Ensure Python 3.7+ and pyqt5 are installed\r\n2. Clone or download this project\r\n3. Install:\r\n   pip install easypymanager\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "easypymanager", "package_url": "https://pypi.org/project/easypymanager/", "platform": "Any platform -- don't need Windows", "project_url": "https://pypi.org/project/easypymanager/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/easypymanager/1.1.0/", "requires_dist": ["pyqt5>=0.0.1"], "requires_python": ">=3.7", "summary": "EasyPyManager is a GUI application for managing and executing Python scripts.", "version": "1.1.0", "yanked": false, "yanked_reason": null}, "last_serial": 30395202, "urls": [{"comment_text": "", "digests": {"blake2b_256": "0f82ebd63dc91376b190ae4df4652d19b0a004c5fcba4a18ee987c1e69b5fbd4", "md5": "cd88e7fc63956dc3919e902dd3b7df66", "sha256": "1dbb388c7705a3354d12e876874dc43c76ada3d234b9edb0556c15afa0172c9a"}, "downloads": -1, "filename": "easypymanager-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cd88e7fc63956dc3919e902dd3b7df66", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 11403, "upload_time": "2025-07-29T02:58:04", "upload_time_iso_8601": "2025-07-29T02:58:04.705353Z", "url": "https://files.pythonhosted.org/packages/0f/82/ebd63dc91376b190ae4df4652d19b0a004c5fcba4a18ee987c1e69b5fbd4/easypymanager-1.1.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:57:58 GMT", "package": "singlestore-mcp-server", "version": "0.4.4", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# SingleStore MCP Server\n\n[![MIT Licence](https://img.shields.io/badge/License-MIT-yellow.svg)](https://github.com/singlestore-labs/mcp-server-singlestore/blob/main/LICENSE) [![PyPI](https://img.shields.io/pypi/v/singlestore-mcp-server)](https://pypi.org/project/singlestore-mcp-server/) [![Downloads](https://static.pepy.tech/badge/singlestore-mcp-server)](https://pepy.tech/project/singlestore-mcp-server)\n\n[Model Context Protocol]((https://modelcontextprotocol.io/introduction)) (MCP) is a standardized protocol designed to manage context between large language models (LLMs) and external systems. This repository provides an installer and an MCP Server for Singlestore, enabling seamless integration.\n\nWith MCP, you can use Claude Desktop, Cursor, or any compatible MCP client to interact with SingleStore using natural language, making it easier to perform complex operations effortlessly.\n\n\ud83d\udca1 **Pro Tip**: Not sure what the MCP server can do? Just call the `/help` prompt in your chat!\n\n## Requirements\n\n- Python >= v3.11.0\n- [uvx](https://docs.astral.sh/uv/guides/tools/) installed on your python environment\n- Claude Desktop, Cursor, or another supported LLM client\n\n## Client Setup\n\n### 1. Init Command\n\nThe simplest way to set up the MCP server is to use the initialization command:\n\n```bash\nuvx singlestore-mcp-server init\n```\n\nThis command will:\n\n1. Automatically locate the configuration file for your platform\n2. Create or update the configuration to include the SingleStore MCP server\n3. Configure browser-based OAuth authentication\n4. Provide instructions for starting the server\n\nTo specify a client (e.g., `claude` or `cursor`), use the `--client` flag:\n\n```bash\nuvx singlestore-mcp-server init --client=<client>\n```\n\n### 2. Installing via Smithery\n\nTo install `mcp-server-singlestore` automatically via [Smithery](https://smithery.ai/server/@singlestore-labs/mcp-server-singlestore):\n\n```bash\nnpx -y @smithery/cli install @singlestore-labs/mcp-server-singlestore --client=<client>\n```\n\nReplace `<client>` with `claude` or `cursor` as needed.\n\n### 3. Manual Configuration\n\n#### Claude Desktop and Cursor\n\n1. Add the following configuration to your client configuration file. Check the client's configuration file here:\n\n- [Claude Desktop](https://modelcontextprotocol.io/quickstart/user)\n- [Cursor](https://docs.cursor.com/context/model-context-protocol#configuration-locations)\n\n  ```json\n  {\n    \"mcpServers\": {\n     \"singlestore-mcp-server\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"singlestore-mcp-server\",\n        \"start\"\n      ]\n     }\n    }\n  }\n  ```\n\n   **No API keys, tokens, or environment variables required!** The server automatically handles authentication via browser OAuth when started.\n\n### 4. Using Docker\n\n#### Building the Docker Image\n\nTo build the Docker image for the MCP server, run the following command in the project root:\n\n```bash\ndocker build -t mcp-server-singlestore .\n```\n\n#### Running the Docker Container\n\nTo run the Docker container, use the following command:\n\n```bash\ndocker run -d \\\n  -p 8000:8000 \\\n  -e MCP_API_KEY=\"your_api_key_here\" \\\n  -it \\\n  --name mcp-server \\\n  mcp-server-singlestore\n```\n\nNote: An API key is needed when using Docker because the OAuth flow isn't supported locally for servers running in a Docker container. We're working with the Docker team to enable OAuth for local servers in the future. For better security, we recommend using Docker Desktop to configure the S2 MCP server\u2014see [this blog post](https://www.docker.com/blog/docker-mcp-catalog-secure-way-to-discover-and-run-mcp-servers/) for details on Docker's new MCP Catalog.\n\n\n2. Restart your client after making changes to the configuration.\n\n## Components\n\n### Tools\n\nThe server implements the following tools:\n\n- **workspace_groups_info**: Retrieve details about the workspace groups accessible to the user\n  - No arguments required\n  - Returns details of the workspace groups\n- **workspaces_info**: Retrieve details about the workspaces in a specific workspace group\n  - Arguments: `workspaceGroupID` (string)\n  - Returns details of the workspaces\n- **organization_info**: Retrieve details about the user's current organization\n  - No arguments required\n  - Returns details of the organization\n- **list_of_regions**: Retrieve a list of all regions that support workspaces for the user\n  - No arguments required\n  - Returns a list of regions\n- **execute_sql**: Execute SQL operations on a connected workspace\n  - Arguments: `workspace_group_identifier`, `workspace_identifier`, `username`, `password`, `database`, `sql_query`\n  - Returns the results of the SQL query in a structured format\n- **list_virtual_workspaces**: List all starter workspaces accessible to the user\n  - No arguments required\n  - Returns details of available starter workspaces\n- **create_virtual_workspace**: Create a new starter workspace with a user\n  - Arguments:\n    - `name`: Name of the starter workspace\n    - `database_name`: Name of the database to create\n    - `username`: Username for accessing the workspace\n    - `password`: Password for the user\n    - `workspace_group`: Object containing `name` (optional) and `cellID` (mandatory)\n  - Returns details of the created workspace and user\n- **execute_sql_on_virtual_workspace**: Execute SQL operations on a virtual workspace\n  - Arguments: `virtual_workspace_id`, `username`, `password`, `sql_query`\n  - Returns the results of the SQL query in a structured format including data, row count, columns, and status\n- **list_notebook_samples**: List all notebook samples available in SingleStore Spaces\n  - No arguments required\n  - Returns details of available notebook samples\n- **create_notebook**: Create a new notebook in the user's personal space\n  - Arguments: `notebook_name`, `content` (optional)\n  - Returns details of the created notebook\n- **list_personal_files**: List all files in the user's personal space\n  - No arguments required\n  - Returns details of all files in the user's personal space\n- **create_scheduled_job**: Create a new scheduled job to run a notebook\n  - Arguments:\n    - `name`: Name for the job\n    - `notebook_path`: Path to the notebook to execute\n    - `schedule_mode`: Once or Recurring\n    - `execution_interval_minutes`: Minutes between executions (optional)\n    - `start_at`: When to start the job (optional)\n    - `description`: Description of the job (optional)\n    - `create_snapshot`: Whether to create notebook snapshots (optional)\n    - `runtime_name`: Name of the runtime environment\n    - `parameters`: Parameters for the job (optional)\n    - `target_config`: Target configuration for the job (optional)\n  - Returns details of the created job\n- **get_job_details**: Get details about a specific job\n  - Arguments: `job_id`\n  - Returns detailed information about the specified job\n- **list_job_executions**: List execution history for a specific job\n  - Arguments: `job_id`, `start` (optional), `end` (optional)\n  - Returns execution history for the specified job\n\n## Development\n\n### Prerequisites\n\n- Python >= 3.11\n- [uv](https://docs.astral.sh/uv/) for dependency management\n\n### Setup\n\n1. Clone the repository:\n\n```bash\ngit clone https://github.com/singlestore-labs/mcp-server-singlestore.git\ncd mcp-server-singlestore\n```\n\n1. Install dependencies:\n\n```bash\nuv sync --dev\n```\n\n1. Set up pre-commit hooks (optional but recommended):\n\n```bash\nuv run pre-commit install\n```\n\n### Development Workflow\n\n```bash\n# Quick quality checks (fast feedback)\n./scripts/check.sh\n\n# Run tests independently\n./scripts/test.sh\n\n# Comprehensive validation (before PRs)\n./scripts/check-all.sh\n\n# Create and publish releases\n./scripts/release.sh\n```\n\n### Running Tests\n\n```bash\n# Run test suite with coverage\n./scripts/test.sh\n\n# Or use pytest directly\nuv run pytest\nuv run pytest --cov=src --cov-report=html\n```\n\n### Code Quality\n\nWe use [Ruff](https://docs.astral.sh/ruff/) for both linting and formatting:\n\n```bash\n# Format code\nuv run ruff format src/ tests/\n\n# Lint code\nuv run ruff check src/ tests/\n\n# Lint and fix issues automatically\nuv run ruff check --fix src/ tests/\n```\n\n### Release Process\n\nReleases are managed through git tags and automated PyPI publication:\n\n1. **Create release**: `./scripts/release.sh` (interactive tool)\n2. **Automatic publication**: Triggered by pushing version tags\n3. **No manual PyPI uploads** - fully automated pipeline\n\nSee [`scripts/dev-workflow.md`](scripts/dev-workflow.md) for detailed workflow documentation.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "singlestore-mcp-server", "package_url": "https://pypi.org/project/singlestore-mcp-server/", "platform": null, "project_url": "https://pypi.org/project/singlestore-mcp-server/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/singlestore-mcp-server/0.4.4/", "requires_dist": ["jsonschema>=4.0.0", "mcp>=1.10.1", "nbformat>=5.10.4", "pydantic-settings>=2.9.1", "segment-analytics-python>=2.3.4", "singlestoredb>=1.14.2", "starlette>=0.46.2"], "requires_python": ">=3.10", "summary": "SingleStore MCP server", "version": "0.4.4", "yanked": false, "yanked_reason": null}, "last_serial": 30395200, "urls": [{"comment_text": null, "digests": {"blake2b_256": "097ead6aa238af9ec487a990cd45be2e7e0eb116ceeefddf5a8b4c85484fd903", "md5": "5fb200da745d360a1af0cf75da62d9f6", "sha256": "ee69a42964f804e02cabe53418bd345d0e2b99889c775944186167768c982ff3"}, "downloads": -1, "filename": "singlestore_mcp_server-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "5fb200da745d360a1af0cf75da62d9f6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 80387, "upload_time": "2025-07-29T02:57:58", "upload_time_iso_8601": "2025-07-29T02:57:58.383745Z", "url": "https://files.pythonhosted.org/packages/09/7e/ad6aa238af9ec487a990cd45be2e7e0eb116ceeefddf5a8b4c85484fd903/singlestore_mcp_server-0.4.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "1a612595621bd63ccec94f08d905717d8b9ca08ac135b9ba0a4c472f7a5e6f02", "md5": "d92f8dba537d13d5f8ea5cc609890414", "sha256": "56e61a0feee22fe994c16ba9547a79ab649aeffa13ceed09b4bf308c28b9ce06"}, "downloads": -1, "filename": "singlestore_mcp_server-0.4.4.tar.gz", "has_sig": false, "md5_digest": "d92f8dba537d13d5f8ea5cc609890414", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 149807, "upload_time": "2025-07-29T02:57:59", "upload_time_iso_8601": "2025-07-29T02:57:59.757569Z", "url": "https://files.pythonhosted.org/packages/1a/61/2595621bd63ccec94f08d905717d8b9ca08ac135b9ba0a4c472f7a5e6f02/singlestore_mcp_server-0.4.4.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:57:20 GMT", "package": "odoo-addon-hr-contract-reference", "version": "18.0.1.0.0.3", "json": {"info": {"author": "Michael Telahun Makonnen, Fekete Mihai (Forest and Biomass Services Romania), Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n=====================\nHR Contract Reference\n=====================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:dccba71ae4b648f5f9fa5ba390a6d20ea0d734f9b0954df3bfb30b5525754493\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fhr-lightgray.png?logo=github\n    :target: https://github.com/OCA/hr/tree/18.0/hr_contract_reference\n    :alt: OCA/hr\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/hr-18-0/hr-18-0-hr_contract_reference\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/hr&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module was written to extend the functionality of employees\ncontracts to support sequence of contract reference which will be\ngenerated automatically from the sequence predefined.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nConfiguration\n=============\n\nIf you want to modify the format of the sequence, go to Settings ->\nTechnical -> Sequences & Identifiers -> Sequences and search for the\n\"Contract Reference\" sequence, where you modify its prefix and numbering\nformats.\n\nUsage\n=====\n\nWhen you will create a new employee contract, the field reference will\nbe assigned automatically with the next number of the predefined\nsequence.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/hr/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/hr/issues/new?body=module:%20hr_contract_reference%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* Michael Telahun Makonnen\n* Fekete Mihai (Forest and Biomass Services Romania)\n\nContributors\n------------\n\n- Michael Telahun Makonnen <mmakonnen@gmail.com>\n- Fekete Mihai <feketemihai@gmail.com>\n- Denis Leemann <denis.leemann@camptocamp.com>\n- Serpent Consulting Services Pvt. Ltd. <support@serpentcs.com>\n- Nikul Chaudhary <nikulchaudhary2112@gmail.com>\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/hr <https://github.com/OCA/hr/tree/18.0/hr_contract_reference>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/hr", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-hr-contract-reference", "package_url": "https://pypi.org/project/odoo-addon-hr-contract-reference/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-hr-contract-reference/", "project_urls": {"Homepage": "https://github.com/OCA/hr"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-hr-contract-reference/18.0.1.0.0.3/", "requires_dist": ["odoo==18.0.*"], "requires_python": ">=3.10", "summary": "HR Contract Reference", "version": "18.0.1.0.0.3", "yanked": false, "yanked_reason": null}, "last_serial": 30395197, "urls": [{"comment_text": "", "digests": {"blake2b_256": "e8b211eb8c4a4f26b40b1322e8a7e05d118027dc6d2cffe3204db3df515e1211", "md5": "fa6d940e1f09b665df1ac5991ec3802c", "sha256": "6319860f6d45c923541a5c8a5015a83b6b9458507917089931d87d0bbf43417d"}, "downloads": -1, "filename": "odoo_addon_hr_contract_reference-18.0.1.0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "fa6d940e1f09b665df1ac5991ec3802c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 34152, "upload_time": "2025-07-29T02:57:20", "upload_time_iso_8601": "2025-07-29T02:57:20.238157Z", "url": "https://files.pythonhosted.org/packages/e8/b2/11eb8c4a4f26b40b1322e8a7e05d118027dc6d2cffe3204db3df515e1211/odoo_addon_hr_contract_reference-18.0.1.0.0.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:57:10 GMT", "package": "MaixPy", "version": "4.11.1", "json": {"info": {"author": "Sipeed", "author_email": "support@sipeed.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Embedded Systems"], "description": "MaixPy (v4)\n======\n\n<div align=\"center\">\n\n![](https://wiki.sipeed.com/maixpy/static/image/maixpy_banner.png)\n\n**Let's Sipeed up, Maximize AI's power!**\n\n**MaixPy** (v4): Easily create AI projects with Python on edge device\n\n<h3>\n    <a href=\"https://wiki.sipeed.com/maixpy/doc/en/index.html\"> Quick Start </a> |\n    <a href=\"https://wiki.sipeed.com/maixpy/en/index.html\"> Documentation </a> |\n    <a href=\"https://wiki.sipeed.com/maixpy/api/index.html\"> API </a> |\n    <a href=\"https://wiki.sipeed.com/maixcam-pro\"> Hardware </a>\n</h3>\n\n[![GitHub Repo stars](https://img.shields.io/github/stars/sipeed/MaixPy?style=social)](https://github.com/sipeed/MaixPy/stargazers)\n[![Apache 2.0](https://img.shields.io/badge/license-Apache%20v2.0-orange.svg)](\"https://github.com/sipeed/MaixPy/blob/main/LICENSE.md)\n[![PyPI](https://img.shields.io/pypi/v/maixpy.svg)](https://pypi.python.org/pypi/maixpy/)\n[![PyPI - Downloads](https://img.shields.io/pypi/dm/maixpy?label=pypi%20downloads)](https://pypi.org/project/maixpy/)\n![GitHub repo size](https://img.shields.io/github/repo-size/sipeed/maixpy) \n[![Build MaixCAM](https://github.com/sipeed/MaixPy/actions/workflows/build_maixcam.yml/badge.svg)](https://github.com/sipeed/MaixPy/actions/workflows/build_maixcam.yml)\n[![Trigger wiki](https://github.com/sipeed/MaixPy/actions/workflows/trigger_wiki.yml/badge.svg)](https://github.com/sipeed/MaixPy/actions/workflows/trigger_wiki.yml)\n\nEnglish | [\u4e2d\u6587](./README_ZH.md)\n\n</div>\n\n![MaixCAM](https://wiki.sipeed.com/maixpy/static/image/maixcams.png)\n\n\n## Feature Overview\n\nMaixPy offers simple Python programming combined with powerful edge computing hardware. Integrated hardware peripheral operations, video streaming, AI vision algorithms, and audio algorithms etc. With its plug-and-play design, MaixPy enables you to quickly implement your intelligent projects.\n\nAdditionally, MaixPy provides the MaixVision IDE, MaixHub online training platform, detailed documentation, and even a C/C++ SDK with identical APIs, ensuring seamless development and production deployment.\n\nHere is a partial video demonstration of the features. For more documentation, please visit the **official website: [wiki.sipeed.com/maixpy/](https://wiki.sipeed.com/maixpy/)**\n\n> If you like this project, please click **Star** on the top right of the [MaixPy Project](https://github.com/sipeed/maixpy) to encourage us to develop more exciting content!\n\n[![](./docs/static/image/maixcam_play.jpg)](https://www.youtube.com/watch?v=qV1lw0UVUYI)\n\n\n## Concise and Efficient Code (API) Design\n\nWith MaixPy you can easily create **AI vision project** within **10 lines of code**:\n\n```python\nfrom maix import camera, display, image, nn\n\nclassifier = nn.Classifier(model=\"/root/models/mobilenetv2.mud\")\ncam = camera.Camera(classifier.input_width(), classifier.input_height(), classifier.input_format())\ndisp = display.Display()\n\nwhile 1:\n    img = cam.read()\n    res = classifier.classify(img)\n    max_idx, max_prob = res[0]\n    msg = f\"{max_prob:5.2f}: {classifier.labels[max_idx]}\"\n    img.draw_string(10, 10, msg, image.COLOR_RED)\n    disp.show(img)\n```\n\nResult:\n![](https://wiki.sipeed.com/maixpy/static/video/classifier.gif)\n\n## Edge(embeded) friendly\n\nSimply use hardware **peripheral** like serial port:\n\n```python\nfrom maix import uart\n\ndevices = uart.list_devices()\n\nserial = uart.UART(devices[0], 115200)\nserial.write_str(\"hello world\")\nprint(\"received:\", serial.read(timeout = 2000))\n```\n\n## MaixVision workstation\n\nWe also provide a handy **[MaixVision](https://wiki.sipeed.com/en/maixvision)** workstation software to make development easier and faster:\n\n<video playsinline controls muted preload src=\"https://github.com/sipeed/MaixPy/assets/8625829/1168a282-d7c2-45bc-9ffb-c00de1ca24f5\" type=\"video/mp4\">\nMaixVision\n</video>\n\n## MaixHub online platform\n\n**[MaixHub](https://maixhub.com)** provide free online AI train service, one click to train AI model and deploy to MaixCAM even you have no AI knowledge and expensive training equipment.\n\n![MaixHub](https://wiki.sipeed.com/maixpy/static/image/maixhub.jpg)\n\n\n## Hardware platform MaixCAM\n\nAnd we provide two powerful hardware platform **[MaixCAM](https://wiki.sipeed.com/maixcam)** and **[MaixCAM-Pro](https://wiki.sipeed.com/maixcam-pro)**, with datasheet register level open.\n\n![MaixCAM](https://wiki.sipeed.com/maixpy/static/image/maixcams.png)\n\n| CPU | NPU | Memory |\n| --- | --- | ------- |\n| - 1GHz RISC-V(Linux)<br>- 700MHz RISCV-V(RTOS)<br>- 25~300MHz 8051(LowPower) | 1Tops@INT8 NPU, support BF16<br>support YOLOv5 YOLOv8 etc.| 256MB DDR3 |\n\n| Connecting | Peripheral | MultiMedia | Buy |\n| ----------- | ----- | --- | ---- |\n|  USB2.0/WiFi6/BLE5.4 | IIC/PWM/SPI/UART/WDT/ADC | - 4M Camera<br>- 2.3\" 552x368 Touchscreen<br>- H.264/H.265/MJPEG codec | [Sipeed Official Store](https://wiki.sipeed.com/store) |\n\n\n## Who are using MaixPy?\n\n* **AI Algorithm Engineer** who want to deploy your AI model to embedded devices.\n> MaixPy provide easy-to-use API to access NPU, and docs to help you develop your AI model.\n* **STEM** teacher who wants to teach AI and embedded devices to students.\n> MaixPy provide easy-to-use API, PC tools, online AI train service ... Let you focus on teaching AI, not the hardware and complicated software usage.\n* **Maker** who want to make some cool projects but don't want to learn complicated hardware and software.\n> MaixPy provide Python API, so all you need is learn basic Python syntax, and MaixPy's API is so easy to use, you can make your project even in a few minutes.\n* **Engineer** who want to make some projects but want a prototype as soon as possible.\n> MaixPy is easy to build projects, and provide corresponding C++ SDK, so you can directly use MaixPy to deploy or transfer Python code to C++ in a few minutes.\n* **Students** who want to learn AI, embedded development.\n> We provide many docs and tutorials, and lot of open source code, to help you find learning route, and grow up step by step. From simple Python programming to `Vision`, `AI`, `Audio`, `Linux`, `RTOS` etc.\n* **Enterprise** who want to develop AI vision products but have no time or engineers to develop complicated embedded system.\n> Use MaixPy even graphic programming to develop your products with no more employees and time. For example, add a AI QA system to your production line, or add a AI security monitor to your office as your demand.\n* **Contestants** who want to win the competition.\n> MaixPy integrate many functions and easy to use, fasten your work to win the competition in limited time. There are already many contestants win the competition with MaixPy.\n\n\n## Performance comparison\n\nK210 and v831 are outdated, they have many limitations in memory, performance, NPU operators missing etc.<br>\nNo matter you are using them or new comer, it's recommended to upgrade to MaixCAM and MaixPy v4.<br>\n\nHere's the comparison between them:\n\n| Feature | Maix-I K210 | Maix-II v831 | MaixCAM |\n| ------- | ----------- | ------------ | ------- |\n| CPU | 400MHz RISC-V x2 | 800MHz ARM7 | **1GHz RISC-V(Linux)<br>700MHz RISC-V(RTOS)<br>25~300MHz 8051(Low Power)** |\n| Memory | 6MB SRAM | 64MB DDR2 | **256MB DDR3** |\n| NPU | 0.25Tops@INT8<br>official says 1T but... | 0.25Tops@INT8 | **1Tops@INT8** |\n| Encoder | \u2716 | 1080p@30fps | **2K@30fps** |\n| Screen | 2.4\" 320x240 | 1.3\" 240x240 | **2.28\" 552x368** / 5\" 1280x720 / 7\" 1280x800 / 10\u201c 1280x800|\n| TouchScreen | \u2716 | \u2716 | **2.3\" 552x368** |\n| Camera | 30W | 200W | **500W** |\n| WiFi   | 2.4G | 2.4G | **WiFi6** 2.4G/5G |\n| USB    | \u2716    | **USB2.0** | **USB2.0** |\n| Eth    | \u2716    | 100M(Optional)   | 100M(Optional) |\n| SD Interface | SPI | **SDIO** | **SDIO** |\n| BLE    | \u2716    | \u2716      | **BLE5.4** |\n| OS     | RTOS | Tina Linux | **Linux + RTOS** |\n| Language | C / C++ / MicroPython | C / C++ / **Python3** | C / **C++ / Python3** |\n| Software | MaixPy | MaixPy3 | **MaixCDK + MaixPy v4 + opencv + numpy + ...**|\n| PC software | MaixPy IDE | MaixPy3 IDE | **MaixVision** Workstation |\n| Docs   | \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f |  \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f   |  \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f |\n| Online AI train | \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f |  \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f |  \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f |\n| Official APPs   | \u2b50\ufe0f\u2b50\ufe0f   |  \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f   |  \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f |\n| AI classify(224x224) | MobileNetv1 50fps<br>MobileNetv2 \u2716<br>Resnet \u2716 | MobileNet \u2716<br>Resnet18 20fps<br>Resnet50 \u2716| MobileNetv2 **130fps**<br>Resnet18 **62fps**<br>Resnet50 **28fps** |\n| AI detect(NPU forward part)   | YOLOv2(224x224) 15fps |  YOLOv2(224x224) 15fps |  **YOLOv5s(224x224) 100fps<br>YOLOv5s(320x256) 70fps<br>YOLOv5s(640x640) 15fps<br>YOLOv8n(640x640) 23fps<br>YOLO11n(224x224)175fps<br>YOLO11n(320x224)120fps<br>YOLO11n(320x320)95fps<br>YOLO11n(640x640)23fps**|\n| Ease of use     | \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f |  \u2b50\ufe0f\u2b50\ufe0f\u2b50\ufe0f   |  \ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f\ud83c\udf1f |\n\n## Maix Ecosystem\n\nMaixPy not only a Python SDK, but have a whole ecosystem, including hardware, software, tools, docs, even cloud platform etc.\nSee the picture below:\n\n![](https://wiki.sipeed.com/maixpy/static/image/maix_ecosystem.png)\n\n\n## What difference between MaixPy v1, MaixPy3 and MaixPy v4?\n\n* MaixPy v1 use MicroPython programming language, only support Sipeed Maix-I K210 series hardware, have limited third-party packages.\n* MaixPy3 is designed for Sipeed Maix-II-Dock v831, not a long-term support version.\n* MaixPy v4 use Python programming language, so there's much package we can use directly. MaixPy v4 support new hardware platforms of Sipeed, it's a long-term support version, the future's hardware platforms will support this version. MaixPy v4 have a MaixPy-v1 compatible API, so you can quickly migrate your MaixPy v1 project to MaixPy v4.\n\n(MaixPy v4 Will not support Maix-I K210 series, if you are using Maix-I K210 series, it's recommended to upgrade hardware platform to use this to get more features and better performance.)\n\n## Compile Source Code\n\nIf you want to compile MaixPy firmware from source code, refer to [Build MaixPy source code](https://wiki.sipeed.com/maixpy/doc/en/source_code/build.html) page.\n\n\n## License\n\nAll files in this repository are under the terms of the [Apache License 2.0 Sipeed Ltd.](./LICENSE) except the third-party libraries or have their own license.\n\n\n## Community\n\n* Project sharing: [maixhub.com/share](https://maixhub.com/share)\n* App sharing: [maixhub.com/app](https://maixhub.com/app)\n* Discussion: [maixhub.com/discussion](https://maixhub.com/discussion)\n* QQ group: 862340358\n* Telegram: [t.me/maixpy](https://t.me/maixpy)\n* Github issues: [github.com/sipeed/maixpy/issues](https://github.com/sipeed/maixpy/issues)\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "Keywords", "License", "License-File", "Summary"], "home_page": "https://github.com/Sipeed/MaixPy", "keywords": "Machine vision, AI vision, IOT, AIOT, Edge computing", "license": "Apache 2.0", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "MaixPy", "package_url": "https://pypi.org/project/MaixPy/", "platform": null, "project_url": "https://pypi.org/project/MaixPy/", "project_urls": {"Homepage": "https://github.com/Sipeed/MaixPy"}, "provides_extra": null, "release_url": "https://pypi.org/project/MaixPy/4.11.1/", "requires_dist": null, "requires_python": null, "summary": "Sipeed Maix Vision Python SDK", "version": "4.11.1", "yanked": false, "yanked_reason": null}, "last_serial": 30395210, "urls": [{"comment_text": null, "digests": {"blake2b_256": "5003e412e45c1c792d60cfd7f4da02e3ffb7cc92e57da6f435301f79b4964818", "md5": "6bb5bb809c131fbc5b76aad3933f5113", "sha256": "dfd89c4a1770e51b5b2754aa36bf76c47482d9209afb3c62cc6218707e72aee0"}, "downloads": -1, "filename": "maixpy-4.11.1-cp310-cp310-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "6bb5bb809c131fbc5b76aad3933f5113", "packagetype": "bdist_wheel", "python_version": "cp310", "requires_python": null, "size": 4069358, "upload_time": "2025-07-29T02:57:10", "upload_time_iso_8601": "2025-07-29T02:57:10.683257Z", "url": "https://files.pythonhosted.org/packages/50/03/e412e45c1c792d60cfd7f4da02e3ffb7cc92e57da6f435301f79b4964818/maixpy-4.11.1-cp310-cp310-manylinux2014_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "8f438e586d0792d850b60588e81742a3a483f219847faa0ceab5e2b7bf4eb4da", "md5": "511eafac9f0e694819ce2cbcffb7b502", "sha256": "6e7fc97ffe3e4051b7afbe8504dd42105c85c48681c8bbf7d786c5c2cdf8124f"}, "downloads": -1, "filename": "maixpy-4.11.1-cp312-cp312-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "511eafac9f0e694819ce2cbcffb7b502", "packagetype": "bdist_wheel", "python_version": "cp312", "requires_python": null, "size": 4070971, "upload_time": "2025-07-29T02:57:15", "upload_time_iso_8601": "2025-07-29T02:57:15.414681Z", "url": "https://files.pythonhosted.org/packages/8f/43/8e586d0792d850b60588e81742a3a483f219847faa0ceab5e2b7bf4eb4da/maixpy-4.11.1-cp312-cp312-manylinux2014_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "0c2cfe72c9e8a837ab83ff558054d2c6b4256da76efe25953854812021367588", "md5": "25365379bb8fb04163093268904acf99", "sha256": "e533c94e704a961f2640bd9229555d2fc8498ad94737915211412218cda77765"}, "downloads": -1, "filename": "maixpy-4.11.1-cp313-cp313-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "25365379bb8fb04163093268904acf99", "packagetype": "bdist_wheel", "python_version": "cp313", "requires_python": null, "size": 4070976, "upload_time": "2025-07-29T02:58:36", "upload_time_iso_8601": "2025-07-29T02:58:36.975218Z", "url": "https://files.pythonhosted.org/packages/0c/2c/fe72c9e8a837ab83ff558054d2c6b4256da76efe25953854812021367588/maixpy-4.11.1-cp313-cp313-manylinux2014_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "0d397bbecd9410c378862eea7a9b6acc6a5c0311364e656355781496b777a4c5", "md5": "851a6ee49d4951187fd7cd8189239bee", "sha256": "ee02d1e6f9e7802535fab3b0556cb456963cbf47da36b3d77e8e4dbd39892384"}, "downloads": -1, "filename": "maixpy-4.11.1-cp38-cp38-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "851a6ee49d4951187fd7cd8189239bee", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 4068876, "upload_time": "2025-07-29T02:58:39", "upload_time_iso_8601": "2025-07-29T02:58:39.404506Z", "url": "https://files.pythonhosted.org/packages/0d/39/7bbecd9410c378862eea7a9b6acc6a5c0311364e656355781496b777a4c5/maixpy-4.11.1-cp38-cp38-manylinux2014_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "03b6a74769c1e04f36909a1e21645417d25f0c5ffdb7e4383d2ae14391c8b0ce", "md5": "363c10dc3340e6a0a1adc2710acdec1b", "sha256": "764a787cffc953648f12a522317f913e9f7060eb7182aef1ed84491b8bbabfc9"}, "downloads": -1, "filename": "maixpy-4.11.1-cp39-cp39-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "363c10dc3340e6a0a1adc2710acdec1b", "packagetype": "bdist_wheel", "python_version": "cp39", "requires_python": null, "size": 4069777, "upload_time": "2025-07-29T02:58:22", "upload_time_iso_8601": "2025-07-29T02:58:22.826200Z", "url": "https://files.pythonhosted.org/packages/03/b6/a74769c1e04f36909a1e21645417d25f0c5ffdb7e4383d2ae14391c8b0ce/maixpy-4.11.1-cp39-cp39-manylinux2014_x86_64.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:55:53 GMT", "package": "odoo-addon-helpdesk-mgmt", "version": "18.0.1.7.0.4", "json": {"info": {"author": "AdaptiveCity, Tecnativa, ForgeFlow, C2i Change 2 Improve, Domatix, Factor Libre, SDi Soluciones, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n===================\nHelpdesk Management\n===================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:0cb6078667b8e94ad8c7d480fb49c35050097ea0a64b0445818235c9ef27a647\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Production%2FStable-green.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Production/Stable\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fhelpdesk-lightgray.png?logo=github\n    :target: https://github.com/OCA/helpdesk/tree/18.0/helpdesk_mgmt\n    :alt: OCA/helpdesk\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/helpdesk-18-0/helpdesk-18-0-helpdesk_mgmt\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/helpdesk&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module adds Helpdesk functionality in Odoo.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nConfiguration\n=============\n\nTo configure this module, you need to:\n\n1. Edit or create new channels.\n2. Edit or create new categories.\n3. Edit or create new stages.\n4. Edit or create new teams.\n5. Edit or create new tags.\n\nChannels\n--------\n\n1. Go to *Helpdesk > Configuration > Channels* to edit or create new\n   channels.\n2. Edit or create a channel.\n3. Set the name for the channel.\n4. You can also Activate or Deactivate channels.\n\n|image1|\n\nCategories\n----------\n\n1. Go to *Helpdesk > Configuration > Categories* to edit or create new\n   categories.\n2. Edit or create a new category.\n3. Set the name for the category.\n4. You can also Activate or Deactivate categories.\n\n|image2|\n\nStages\n------\n\n1. Go to *Helpdesk > Configuration > Stages* to edit or create new\n   stages.\n2. Edit or create a new stage.\n3. Set the name for the stage.\n4. Set the sequence order for the stage.\n5. You can select an Email template.\n6. Mark the Unattended checkbox if the stage contains unattended\n   tickets.\n7. Mark the Closed checkbox if the stage contains closed tickets.\n8. You can add a description for the stage.\n9. You can also Activate or Deactivate stages.\n\n|image3|\n\nYou can also sort the stage sequence if you move up or down the stages\nin the list view.\n\nTeams\n-----\n\n1. Go to *Helpdesk > Configuration > Teams* to edit or create new teams.\n2. Edit or create a new team.\n3. Set the name for the team.\n4. Add the teams members.\n5. You can also Activate or Deactivate teams.\n\n|image4|\n\nTags\n----\n\n1. Go to *Helpdesk > Configuration > Ticket Tags* to edit or create new\n   tags.\n2. Edit or create a new tag.\n3. Set the name for the tag.\n4. Set the color index for the tag.\n5. You can also Activate or Deactivate tags.\n\n|image5|\n\nPermissions\n-----------\n\nThere are restrictions to read tickets according to the user's\npermissions set in Helpdesk.\n\n1. *User: Personal tickets*: User is able to see their tickets (those\n   that are assigned to their user) or those that are no team nor user\n   is assigned.\n2. *User: Team tickets*: User is able to see all the tickets that are\n   assigned to the teams to which he/she belongs or the tickets that are\n   not assigned to any team nor user.\n3. *User*: User is able to see all the tickets.\n\n.. |image1| image:: https://raw.githubusercontent.com/OCA/helpdesk/18.0/helpdesk_mgmt/static/description/Channels.PNG\n.. |image2| image:: https://raw.githubusercontent.com/OCA/helpdesk/18.0/helpdesk_mgmt/static/description/Categories.PNG\n.. |image3| image:: https://raw.githubusercontent.com/OCA/helpdesk/18.0/helpdesk_mgmt/static/description/Stages.PNG\n.. |image4| image:: https://raw.githubusercontent.com/OCA/helpdesk/18.0/helpdesk_mgmt/static/description/Teams.PNG\n.. |image5| image:: https://raw.githubusercontent.com/OCA/helpdesk/18.0/helpdesk_mgmt/static/description/Tags.PNG\n\nUsage\n=====\n\n1. Go to *Helpdesk* or *Helpdesk > Dashboard* to see the tickets\n   dashboard\n2. In the Kanban view, click in the kanban card of a team to see their\n   tickets and create new ones.\n\n|Tickets_Kanban|\n\nTo create a new ticket from the kanban view:\n\n1. Press *Create* button or click on the plus icon at the top of the\n   column of a stage.\n2. Set the name or subject for the ticket.\n3. Select the team that will manage the ticket.\n4. You can select a user to assign the ticket.\n5. Set the priority of the ticket.\n6. Select the partner, and you can also set the partner name and email.\n7. You can select a category and set tags for the ticket.\n8. Add a description.\n9. You can also attach files to the ticket.\n\n|Tickets01| |Tickets02|\n\n.. |Tickets_Kanban| image:: https://raw.githubusercontent.com/OCA/helpdesk/18.0/helpdesk_mgmt/static/description/Tickets_Kanban.PNG\n.. |Tickets01| image:: https://raw.githubusercontent.com/OCA/helpdesk/18.0/helpdesk_mgmt/static/description/Tickets01.PNG\n.. |Tickets02| image:: https://raw.githubusercontent.com/OCA/helpdesk/18.0/helpdesk_mgmt/static/description/Tickets02.PNG\n\nKnown issues / Roadmap\n======================\n\n- Add a tour feature similar to what the ``project`` module defines to\n  discover projects / tasks.\n- Update portal tests defined in ``tests/test_portal.py`` to rely on\n  tour specs (in JS) in order to replicate the navigation behavior of\n  portal users.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/helpdesk/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/helpdesk/issues/new?body=module:%20helpdesk_mgmt%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* AdaptiveCity\n* Tecnativa\n* ForgeFlow\n* C2i Change 2 Improve\n* Domatix\n* Factor Libre\n* SDi Soluciones\n\nContributors\n------------\n\n- `Domatix <https://www.domatix.com>`__:\n\n  - Carlos Mart\u00ednez\n  - Catalin Airimitoaie\n  - \u00c1lvaro L\u00f3pez\n  - Samuel Calvo\n\n- `Adaptive City <https://www.adaptivecity.com>`__:\n\n  - Aitor Bouzas\n\n- `SDi Soluciones, S.L. <https://www.sdi.es>`__:\n\n  - Oscar Soto\n  - Jorge Luis Quinteros\n\n- `C2i Change 2 improve <http://www.c2i.es>`__:\n\n  - Eduardo Magdalena <emagdalena@c2i.es>\n\n- `Factor Libre <https://factorlibre.com>`__:\n\n  - Mar\u00eda Alhambra\n  - Daniel Cano\n\n- `Tecnativa <https://www.tecnativa.com>`__:\n\n  - Pedro M. Baeza\n  - V\u00edctor Mart\u00ednez\n  - Carolina Fernandez\n  - Carlos Roca\n\n- `ID42 Sistemas <https://www.id42.com.br>`__:\n\n  - Marcel Savegnago\n  - Eduardo Apar\u00edcio\n\n- `Obertix <https://www.obertix.net>`__:\n\n  - Vicent Cubells\n\n- `Solvos <https://www.solvos.es>`__:\n\n  - David Alonso\n  - Dante Pereyra\n\n- `XCG Consulting <https://xcg-consulting.fr>`__:\n\n  - Houz\u00e9fa Abbasbhay\n\n- `Kencove <https://kencove.com>`__:\n\n  - Mohamed Alkobrosli\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/helpdesk <https://github.com/OCA/helpdesk/tree/18.0/helpdesk_mgmt>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/helpdesk", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-helpdesk-mgmt", "package_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmt/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmt/", "project_urls": {"Homepage": "https://github.com/OCA/helpdesk"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmt/18.0.1.7.0.4/", "requires_dist": ["odoo==18.0.*"], "requires_python": ">=3.10", "summary": "Helpdesk", "version": "18.0.1.7.0.4", "yanked": false, "yanked_reason": null}, "last_serial": 30395192, "urls": [{"comment_text": "", "digests": {"blake2b_256": "137a2a4c895ec2d13d3e2c92bf0ece916efa61270d3cd51686ca5443215b03b9", "md5": "83f7ff09f2e87456c0ea8ebf2ce2d45a", "sha256": "c2df121946a2f1097832f4e43b872272dab7de221e4ad68e00812e421175b5a1"}, "downloads": -1, "filename": "odoo_addon_helpdesk_mgmt-18.0.1.7.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "83f7ff09f2e87456c0ea8ebf2ce2d45a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 595414, "upload_time": "2025-07-29T02:55:53", "upload_time_iso_8601": "2025-07-29T02:55:53.692688Z", "url": "https://files.pythonhosted.org/packages/13/7a/2a4c895ec2d13d3e2c92bf0ece916efa61270d3cd51686ca5443215b03b9/odoo_addon_helpdesk_mgmt-18.0.1.7.0.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:55:48 GMT", "package": "odoo-addon-helpdesk-mgmtsystem-nonconformity", "version": "17.0.1.0.0.3", "json": {"info": {"author": "Tecnativa, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 17.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n===================================\nHelpdesk Management - Nonconformity\n===================================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:8da7d927e3720b6e589a68cba852dc00150dc1aa4b2f974185887524b78ce914\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fhelpdesk-lightgray.png?logo=github\n    :target: https://github.com/OCA/helpdesk/tree/17.0/helpdesk_mgmtsystem_nonconformity\n    :alt: OCA/helpdesk\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/helpdesk-17-0/helpdesk-17-0-helpdesk_mgmtsystem_nonconformity\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/helpdesk&target_branch=17.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module allows you to create a nonconformity from a helpdesk ticket,\nand keeps it linked.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/helpdesk/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/helpdesk/issues/new?body=module:%20helpdesk_mgmtsystem_nonconformity%0Aversion:%2017.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* Tecnativa\n\nContributors\n------------\n\n- `Tecnativa <https://www.tecnativa.com>`__:\n\n  - V\u00edctor Mart\u00ednez\n  - Pedro M. Baeza\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-victoralmau| image:: https://github.com/victoralmau.png?size=40px\n    :target: https://github.com/victoralmau\n    :alt: victoralmau\n\nCurrent `maintainer <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-victoralmau| \n\nThis module is part of the `OCA/helpdesk <https://github.com/OCA/helpdesk/tree/17.0/helpdesk_mgmtsystem_nonconformity>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/helpdesk", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-helpdesk-mgmtsystem-nonconformity", "package_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmtsystem-nonconformity/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmtsystem-nonconformity/", "project_urls": {"Homepage": "https://github.com/OCA/helpdesk"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmtsystem-nonconformity/17.0.1.0.0.3/", "requires_dist": ["odoo-addon-helpdesk_mgmt<17.1dev,>=17.0dev", "odoo-addon-mgmtsystem_nonconformity<17.1dev,>=17.0dev", "odoo<17.1dev,>=17.0a"], "requires_python": ">=3.10", "summary": "Links helpdesk tickets with nonconformities", "version": "17.0.1.0.0.3", "yanked": false, "yanked_reason": null}, "last_serial": 30395190, "urls": [{"comment_text": "", "digests": {"blake2b_256": "f878ae7e7ffc6279dbdd597cdadab3c06850d9b03543bf692260980e3b85dca2", "md5": "a36a637fc5357283cfb0eabef40a7c98", "sha256": "7897aff0ac6543bdd0f5c43e83708a59612e3a5c860e435007cf88b0f24ddd2d"}, "downloads": -1, "filename": "odoo_addon_helpdesk_mgmtsystem_nonconformity-17.0.1.0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a36a637fc5357283cfb0eabef40a7c98", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 29221, "upload_time": "2025-07-29T02:55:48", "upload_time_iso_8601": "2025-07-29T02:55:48.483731Z", "url": "https://files.pythonhosted.org/packages/f8/78/ae7e7ffc6279dbdd597cdadab3c06850d9b03543bf692260980e3b85dca2/odoo_addon_helpdesk_mgmtsystem_nonconformity-17.0.1.0.0.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:55:44 GMT", "package": "odoo-addon-helpdesk-mgmt", "version": "17.0.1.7.3.3", "json": {"info": {"author": "AdaptiveCity, Tecnativa, ForgeFlow, C2i Change 2 Improve, Domatix, Factor Libre, SDi Soluciones, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Odoo", "Framework :: Odoo :: 17.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n===================\nHelpdesk Management\n===================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:3e4ce2e658792031989cebb701ccb6b7830c52671c246e12d8c53b39d76c4d09\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Production%2FStable-green.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Production/Stable\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fhelpdesk-lightgray.png?logo=github\n    :target: https://github.com/OCA/helpdesk/tree/17.0/helpdesk_mgmt\n    :alt: OCA/helpdesk\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/helpdesk-17-0/helpdesk-17-0-helpdesk_mgmt\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/helpdesk&target_branch=17.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module adds Helpdesk functionality in Odoo.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nConfiguration\n=============\n\nTo configure this module, you need to:\n\n1. Edit or create new channels.\n2. Edit or create new categories.\n3. Edit or create new stages.\n4. Edit or create new teams.\n5. Edit or create new tags.\n\nChannels\n--------\n\n1. Go to *Helpdesk > Configuration > Channels* to edit or create new\n   channels.\n2. Edit or create a channel.\n3. Set the name for the channel.\n4. You can also Activate or Deactivate channels.\n\n|image1|\n\nCategories\n----------\n\n1. Go to *Helpdesk > Configuration > Categories* to edit or create new\n   categories.\n2. Edit or create a new category.\n3. Set the name for the category.\n4. You can also Activate or Deactivate categories.\n\n|image2|\n\nStages\n------\n\n1. Go to *Helpdesk > Configuration > Stages* to edit or create new\n   stages.\n2. Edit or create a new stage.\n3. Set the name for the stage.\n4. Set the sequence order for the stage.\n5. You can select an Email template.\n6. Mark the Unattended checkbox if the stage contains unattended\n   tickets.\n7. Mark the Closed checkbox if the stage contains closed tickets.\n8. You can add a description for the stage.\n9. You can also Activate or Deactivate stages.\n\n|image3|\n\nYou can also sort the stage sequence if you move up or down the stages\nin the list view.\n\nTeams\n-----\n\n1. Go to *Helpdesk > Configuration > Teams* to edit or create new teams.\n2. Edit or create a new team.\n3. Set the name for the team.\n4. Add the teams members.\n5. You can also Activate or Deactivate teams.\n\n|image4|\n\nTags\n----\n\n1. Go to *Helpdesk > Configuration > Ticket Tags* to edit or create new\n   tags.\n2. Edit or create a new tag.\n3. Set the name for the tag.\n4. Set the color index for the tag.\n5. You can also Activate or Deactivate tags.\n\n|image5|\n\nPermissions\n-----------\n\nThere are restrictions to read tickets according to the user's\npermissions set in Helpdesk.\n\n1. *User: Personal tickets*: User is able to see their tickets (those\n   that are assigned to their user) or those that are no team nor user\n   is assigned.\n2. *User: Team tickets*: User is able to see all the tickets that are\n   assigned to the teams to which he/she belongs or the tickets that are\n   not assigned to any team nor user.\n3. *User*: User is able to see all the tickets.\n\n.. |image1| image:: https://raw.githubusercontent.com/OCA/helpdesk/17.0/helpdesk_mgmt/static/description/Channels.PNG\n.. |image2| image:: https://raw.githubusercontent.com/OCA/helpdesk/17.0/helpdesk_mgmt/static/description/Categories.PNG\n.. |image3| image:: https://raw.githubusercontent.com/OCA/helpdesk/17.0/helpdesk_mgmt/static/description/Stages.PNG\n.. |image4| image:: https://raw.githubusercontent.com/OCA/helpdesk/17.0/helpdesk_mgmt/static/description/Teams.PNG\n.. |image5| image:: https://raw.githubusercontent.com/OCA/helpdesk/17.0/helpdesk_mgmt/static/description/Tags.PNG\n\nUsage\n=====\n\n1. Go to *Helpdesk* or *Helpdesk > Dashboard* to see the tickets\n   dashboard\n2. In the Kanban view, click in the kanban card of a team to see their\n   tickets and create new ones.\n\n|Tickets_Kanban|\n\nTo create a new ticket from the kanban view:\n\n1. Press *Create* button or click on the plus icon at the top of the\n   column of a stage.\n2. Set the name or subject for the ticket.\n3. Select the team that will manage the ticket.\n4. You can select a user to assign the ticket.\n5. Set the priority of the ticket.\n6. Select the partner, and you can also set the partner name and email.\n7. You can select a category and set tags for the ticket.\n8. Add a description.\n9. You can also attach files to the ticket.\n\n|Tickets01|\n\n.. |Tickets_Kanban| image:: https://raw.githubusercontent.com/OCA/helpdesk/17.0/helpdesk_mgmt/static/description/Tickets_Kanban.PNG\n.. |Tickets01| image:: https://raw.githubusercontent.com/OCA/helpdesk/17.0/helpdesk_mgmt/static/description/Tickets01.PNG\n\nKnown issues / Roadmap\n======================\n\n- Add a tour feature similar to what the ``project`` module defines to\n  discover projects / tasks.\n- Update portal tests defined in ``tests/test_portal.py`` to rely on\n  tour specs (in JS) in order to replicate the navigation behavior of\n  portal users.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/helpdesk/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/helpdesk/issues/new?body=module:%20helpdesk_mgmt%0Aversion:%2017.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* AdaptiveCity\n* Tecnativa\n* ForgeFlow\n* C2i Change 2 Improve\n* Domatix\n* Factor Libre\n* SDi Soluciones\n\nContributors\n------------\n\n- `Domatix <https://www.domatix.com>`__:\n\n  - Carlos Mart\u00ednez\n  - Catalin Airimitoaie\n  - \u00c1lvaro L\u00f3pez\n  - Samuel Calvo\n\n- `Adaptive City <https://www.adaptivecity.com>`__:\n\n  - Aitor Bouzas\n\n- `SDi Soluciones, S.L. <https://www.sdi.es>`__:\n\n  - Oscar Soto\n  - Jorge Luis Quinteros\n\n- `C2i Change 2 improve <http://www.c2i.es>`__:\n\n  - Eduardo Magdalena <emagdalena@c2i.es>\n\n- `Factor Libre <https://factorlibre.com>`__:\n\n  - Mar\u00eda Alhambra\n  - Daniel Cano\n\n- `Tecnativa <https://www.tecnativa.com>`__:\n\n  - Pedro M. Baeza\n  - V\u00edctor Mart\u00ednez\n  - Carolina Fernandez\n  - Carlos Roca\n  - Juan Carlos O\u00f1ate\n\n- `ID42 Sistemas <https://www.id42.com.br>`__:\n\n  - Marcel Savegnago\n  - Eduardo Apar\u00edcio\n\n- `Obertix <https://www.obertix.net>`__:\n\n  - Vicent Cubells\n\n- `Solvos <https://www.solvos.es>`__:\n\n  - David Alonso\n  - Dante Pereyra\n\n- `XCG Consulting <https://xcg-consulting.fr>`__:\n\n  - Houz\u00e9fa Abbasbhay\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/helpdesk <https://github.com/OCA/helpdesk/tree/17.0/helpdesk_mgmt>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/helpdesk", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-helpdesk-mgmt", "package_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmt/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmt/", "project_urls": {"Homepage": "https://github.com/OCA/helpdesk"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-helpdesk-mgmt/17.0.1.7.3.3/", "requires_dist": ["odoo<17.1dev,>=17.0a"], "requires_python": ">=3.10", "summary": "Helpdesk", "version": "17.0.1.7.3.3", "yanked": false, "yanked_reason": null}, "last_serial": 30395192, "urls": [{"comment_text": "", "digests": {"blake2b_256": "c133643e512f1718a24213cba29ebc17ee5ab5fc8b8c29f69a199a3604d1ca88", "md5": "3f3760e81a2926b766f3ca4823b78dcd", "sha256": "3cdeeb938da528acf90c6ae60c75a0eb71df9708fb1f5c79e57105ffd18ee697"}, "downloads": -1, "filename": "odoo_addon_helpdesk_mgmt-17.0.1.7.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3f3760e81a2926b766f3ca4823b78dcd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 383461, "upload_time": "2025-07-29T02:55:44", "upload_time_iso_8601": "2025-07-29T02:55:44.134102Z", "url": "https://files.pythonhosted.org/packages/c1/33/643e512f1718a24213cba29ebc17ee5ab5fc8b8c29f69a199a3604d1ca88/odoo_addon_helpdesk_mgmt-17.0.1.7.3.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:55:19 GMT", "package": "odoo-addon-base-geoengine", "version": "16.0.1.2.0.2", "json": {"info": {"author": "Camptocamp,ACSONE SA/NV,Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 16.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n===========================\nGeospatial support for Odoo\n===========================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:2faa9b7de06a2c3c20d9bc960073bdc6638396bc987e338093331e0099278604\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fgeospatial-lightgray.png?logo=github\n    :target: https://github.com/OCA/geospatial/tree/16.0/base_geoengine\n    :alt: OCA/geospatial\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/geospatial-16-0/geospatial-16-0-base_geoengine\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/geospatial&target_branch=16.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nGeoEngine is an Odoo module that adds spatial/GIS capabilites to Odoo. It will allow you to :\n\n* Visualize and query your business information on map\n* Perform GeoBI and spatial query\n* Configure your spatial layers and spatial datasources\n* Extend Odoo models with spatial columns\n\nGeoEngine relies on `OpenLayers <http://openlayers.org>`_ and `PostgGIS <http://postgis.refractions.net/>`_ technologies.\n\nPostgis is used to store spatial information in databases. OpenLayer is used to represent spatial data in other words to show maps\nand the different spatial layers. The GeoEngine module acts as a data provider and as an OpenLayers configurator.\nIt also provides a complete extension to Odoo ORM.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nInstallation\n============\n\n\nTo install this module, you need to have `PostGIS <http://postgis.net/>`_ installed.\n\nOn Ubuntu::\n\n.. code-block:: bash\n\n  sudo apt-get install postgis\n\nThe module also requires two additional python libs:\n\n* `Shapely <http://pypi.python.org/pypi/Shapely>`_\n\n* `geojson <http://pypi.python.org/pypi/geojson>`_\n\nWhen you will install the module this two additional libs will be installed.\n\nFor a complete documentation please refer to the `public documenation <http://oca.github.io/geospatial/index.html>`_\n\nUsage\n=====\n\nGeoengine Demo\n==============\n\n1. As a user/admin, when I am in the Geoengine Demo module and I go to the ZIP menu.\n   When I click on an item in the list view, I get to the form view showing me the different\n   information about the ZIP. We can see its ZIP, city, priority, total sales and his spatial\n   representation.\n2. As a user, I can't modify the information in the form view.\n3. As an admin, I can modify the information in the form view. I can click on the bin button to clear\n   the map and I can draw a new shape.\n4. As a user, when I go the \"Retail machines\" tab and there are no items to display, it does not\n   show me anything.\n5. As an admin, when I go the \"Retail machines\" tab and there are no items to display, the list view of\n   the retail machines suggests to me to add a new line.\n6. As a user/admin, if there are items to be displayed in the \"Retail machines\" tab then I can click on an\n   item and the retail machines form view will be displayed. We can see its spatial representation by going\n   to \"The point\" tab and its attributes in \"Attributes\" tab.\n7. As a user/admin, when I go to the geoengine zip view by clicking on the map button at the top right of the\n   screen. The geoengine view appears with the first 80 results displayed on the map. The vector layers\n   selected are those defined as \"active on startup\" by the admin. The selected raster layer is the first\n   one that is not an overlay layer.\n8. As a user/admin, when I hover over an area on the map, the area changes its style.\n9. As a user/admin, when I click on an area, a popup appears an I can see the different information about the\n   area. If I click on the cross, the popup will disappear. If I click somewhere else on the map, the\n   popup will also disappear. If I click on the about button, then the form view will be displayed.\n10. As a user/admin, when I use the paging system, then the results displayed on the map are different\n    (corresponding to the request).\n11. As a user/admin, if we use the search bar, we can search results by his zip or his city.\n12. As an admin, if I change the sequence of layers with the handle button then the change are persisted in database.\n13. As a user, if I change the sequence of layers with the handle button then the change are not persisted in database.\n    There are just the changes in the display.\n14. As an admin, if I change the domain of a layer with the filter button then the change are persisted in database.\n15. As a user, if I change the domain of a layer with the filter button then the change are not persisted in database.\n    There are just the changes in the display.\n16. As an admin, I have the possibility to edit the layer with its corresponding button.\n17. As a user/admin, I can open/close LayerPanel with its button.\n18. As a user/admin, I can open/close RecordsPanel with its button.\n19. As a user/admin, when I click on a record in RecordsPanel, a move is made on the map to the selected record.\n20. As a user/admin, when I click on a record in RecordsPanel, I can also click on the left magnifying glass to zoom on the record.\n21. As a user/admin, when I click on a record in RecordsPanel, I can also click on the right magnifying glass to get the original zoom.\n22. As a user/admin, I can use the search bar to search in the RecordsPanel.\n23. As an admin,If the geoengine view is in edit mode, I can create new records by drawing them in the view.\n24. As an admin, If the geoengine view is in edit mode, I can modify its spatial representation.\n\nGeoengine Backend\n=================\n\n1. As an admin, if I go into the configuration of the raster layers and it has elements, I can click\n   on one and see its information.\n2. As an admin, if I want to create a new raster layer, I can click on \"NEW\" and fill out the form. The\n   required fields for OpenStreetMap type are \"Layer Name\" and \"Related View\". If we want to have a\n   WMTS (Web Map Tile Service) raster type. The required fields in addition to the precedents are \"Service URL\",\n   \"Matrix set\",\"Format\", \"Projection\" and \"Resolutions\". If we take WMS (Web Map Service) raster type, then the\n   required fields are \"Layer Name\", \"Related View\", \"Service URL\", \"Params\", \"Server Type\".\n3. As an admin,if I go into the configuration of the vector layers and it has elements, I can click\n   on one and see its information.\n4. As an admin, if I want to create a new vector layer, I can click on \"NEW\" and fill out the form. The\n   required fields are \"Layer Name\", \"Related View\", \"Geo field\" and \"Representation mode\".\n\nChangelog\n=========\n\n16.0.1.0.0 (2023-03-20)\n========================\n\n* LayerSwitcher has been removed as it was not really practical. A LayerPanel is now active.\n* The geo_search method is now deprecated and replaced by the standard odoo search method.\n* The widget \"geo_edit_map\" attribute is no longer necessary as the field is automatically detected by\n  his type. We can also provide an option attribute that allows us to pass an opacity and a color as\n  parameters.\n\n.. code-block:: xml\n\n    <form>\n        <notebook colspan=\"4\">\n            <page string=\"Geometry\">\n                <field name=\"the_geom\" options=\"{'opacity': 0.8, 'color': '#0000FF' }\" />\n            </page>\n        </notebook>\n    </form>\n\n* The method geo_search is now deprecated. We now need to use the standard odoo search method.\n\n.. code-block:: python\n\n    obj.search([(\"the_point\",\"geo_intersect\",{\"dummy.zip.the_geom\": [(\"id\", \"=\", rec.id)]})])\n\n* We can now pass to the geoengine view a template to display the information we want\n  to see when clicking on a feature.\n\n.. code-block:: xml\n\n    <geoengine>\n        <field name=\"name\" />\n        <field name=\"city\" />\n        <field name=\"total_sales\" />\n        <field name=\"the_geom\" />\n        <templates>\n            <t t-name=\"info_box\">\n                <field name=\"city\" widget=\"badge\" />\n                <ul>\n                    <li>ZIP : <field name=\"name\" />\n                    </li>\n                    <li>Total Sales: <field name=\"total_sales\" />\n                    </li>\n                </ul>\n            </t>\n        </templates>\n    </geoengine>\n\n* We can now pass a model to use to a layer to display other information on the map.\n\n.. code-block:: xml\n\n    <record id=\"geoengine_vector_layer_hs_retail_machines\" model=\"geoengine.vector.layer\">\n        <field name=\"model_id\" ref=\"base_geoengine_demo.model_geoengine_demo_automatic_retailing_machine\"/>\n        <field name=\"model_domain\">[('state', '=', 'hs')]</field>\n        <field name=\"geo_field_id\" ref=\"base_geoengine_demo.field_geoengine_demo_automatic_retailing_machine__the_point\"/>\n        <field name=\"name\">HS retail machines</field>\n        <field name=\"view_id\" ref=\"ir_ui_view_resbetterzipgeoview0\" />\n        <field name=\"geo_repr\">basic</field>\n        <field name=\"attribute_field_id\" ref=\"base_geoengine_demo.field_geoengine_demo_automatic_retailing_machine__name\"/>\n        <field name=\"begin_color\">#FF0000</field>\n        <field name=\"display_polygon_labels\" eval=\"0\" />\n        <field name=\"layer_opacity\">0.8</field>\n    </record>\n\n\n* There is some new features in the LayerPanel.\n\n1. If you are logged in as an admin, you have the possibility to edit the layer by clicking on the edit button. This will open a dialog box.\n   Changes will appear in real time on the view.\n2. If you are logged in as an admin, you can also change the domain of the layer. If you are logged in as a user, changes will not be\n   persisted in the database. Changes will appear in real time on the view.\n3. If you are logged in as an admin, you can also change the sequence of the layers by sliding them over each other. If you are logged in as a user, changes will not be\n   persisted in the database.\n\n* Widget domain is now implemented for geo field This means that the geo-operators are also implemented and that there is the possibility to add a sub-domain.\n  If we want to add a domain that includes all the records that are displayed in the geoengine view (active_ids). We can use the two new operators :\n  \"in active_ids\" and \"not in active_ids\". These will automatically replace the marker with ids. Note that the widget will indicate that the domain is invalid\n  because of the marker.\n* Creation of the RecordsPanel. This panel allows you to retrieve all active records. You can click on record to get the movement to the selected record.\n  Two magnifying glass are also available. You can click on the left one to zoom on the record. You can click on the right one to get the original zoom.\n* A search bar is also available. It allows you to perform a search into the RecordsPanel.\n* A button to open/close the panels is also available.\n* The module has been translated in French.\n* Now you can now make the geoengine view editable. Simply add editable attribute in the geoengine view.\n\n.. code-block:: xml\n\n    <geoengine editable=\"1\">\n        <field name=\"name\" />\n        <field name=\"city\" />\n        <field name=\"total_sales\" />\n        <field name=\"the_geom\" />\n        <field name=\"display_name\" />\n        <templates>\n          <t t-name=\"info_box\">\n            <field name=\"city\" widget=\"badge\" />\n            <ul>\n              <li>ZIP : <field name=\"name\" />\n              </li>\n              <li>Total Sales: <field name=\"total_sales\" />\n              </li>\n            </ul>\n          </t>\n        </templates>\n      </geoengine>\n\n    Thanks to that, you can create new records by drawing them directly in the geoengine view. You can also edit record in the same view.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/geospatial/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/geospatial/issues/new?body=module:%20base_geoengine%0Aversion:%2016.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n~~~~~~~\n\n* Camptocamp\n* ACSONE SA/NV\n\nContributors\n~~~~~~~~~~~~\n\n* Nicolas Bessi <nicolas.bessi@camptocamp.com>\n* Frederic Junod <frederic.junod@camptocamp.com>\n* Yannick Payot <yannick.payot@camptocamp.com>\n* Sandy Carter <sandy.carter@savoirfairelinux.com>\n* Laurent Mignon <laurent.mignon@acsone.eu>\n* Jonathan Nemry <jonathan.nemry@acsone.eu>\n* David Lasley <dave@dlasley.net>\n* Daniel Reis <dgreis@sapo.pt>\n* Matthieu Dietrich <matthieu.dietrich@camptocamp.com>\n* Alan Ramos <alan.ramos@jarsa.com.mx>\n* Damien Crier <damien.crier@camptocamp.com>\n* Cyril Gaudin <cyril.gaudin@camptocamp.com>\n* Pierre Verkest <pverkest@anybox.fr>\n* Benjamin Willig <benjamin.willig@acsone.eu>\n* Devendra Kavthekar <dkatodoo@gmail.com>\n* Emanuel Cino <ecino@compassion.ch>\n* Thomas Nowicki <thomas.nowicki@camptocamp.com>\n* Alexandre Saunier <alexandre.saunier@camptocamp.com>\n* Sandip Mangukiya <smangukiya@opensourceintegrators.com>\n* Samuel Kouff <s.kouff@student.helmo.be>\n\nMaintainers\n~~~~~~~~~~~\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/geospatial <https://github.com/OCA/geospatial/tree/16.0/base_geoengine>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/geospatial", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-base-geoengine", "package_url": "https://pypi.org/project/odoo-addon-base-geoengine/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-base-geoengine/", "project_urls": {"Homepage": "https://github.com/OCA/geospatial"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-base-geoengine/16.0.1.2.0.2/", "requires_dist": ["geojson", "odoo<16.1dev,>=16.0a", "shapely", "simplejson"], "requires_python": ">=3.10", "summary": "Geospatial support for Odoo", "version": "16.0.1.2.0.2", "yanked": false, "yanked_reason": null}, "last_serial": 30395185, "urls": [{"comment_text": "", "digests": {"blake2b_256": "6f8c7a37270e22468490acf3414c0b11bd9d115cb4bc62b21de092d5481b1b23", "md5": "622357468c776cf928ef8bb8ca5eb227", "sha256": "3465815c0db29d17b690940dd38980f8fa9144df7f5efa4ffac7ce4fbe7a5d4e"}, "downloads": -1, "filename": "odoo_addon_base_geoengine-16.0.1.2.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "622357468c776cf928ef8bb8ca5eb227", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 1622103, "upload_time": "2025-07-29T02:55:19", "upload_time_iso_8601": "2025-07-29T02:55:19.934598Z", "url": "https://files.pythonhosted.org/packages/6f/8c/7a37270e22468490acf3414c0b11bd9d115cb4bc62b21de092d5481b1b23/odoo_addon_base_geoengine-16.0.1.2.0.2-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:55:18 GMT", "package": "wechatpayv3", "version": "2.0.0", "json": {"info": {"author": "minibear", "author_email": "321983@qq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial"], "description": "# \u5fae\u4fe1\u652f\u4ed8 API v3 Python SDK\n\n[![PyPI version](https://badge.fury.io/py/wechatpayv3.svg)](https://badge.fury.io/py/wechatpayv3)\n[![Download count](https://img.shields.io/pypi/dm/wechatpayv3)](https://img.shields.io/pypi/dm/wechatpayv3)\n\n**\u5f53\u524d\u4ee3\u7801\u5e93\u4e2d\u53ea\u6709\u540e\u7aef\u7684\u6f14\u793a\u4ee3\u7801\uff0c\u6b22\u8fce\u5927\u5bb6\u8d21\u732e\u524d\u7aef\u5404\u4e2a\u7c7b\u578b\u5e94\u7528\u8c03\u8d77\u652f\u4ed8\u7684\u6f14\u793a\u4ee3\u7801\u3002**\n\n## \u4ecb\u7ecd\n\n\u5fae\u4fe1\u652f\u4ed8\u63a5\u53e3 V3 \u7248 python \u5e93\u3002\n\n\u6b22\u8fce\u5fae\u4fe1\u652f\u4ed8\u5f00\u53d1\u8005\u626b\u7801\u8fdb QQ \u7fa4(\u7fa4\u53f7\uff1a973102221)\u8ba8\u8bba\uff0c\u6b22\u8fce\u63d0\u4ea4\u4ee3\u7801\uff0c\u6b22\u8fcestar\u3001follow\u3001fork\uff1a\n\n![image](docs/qq.png)\n\n## \u9002\u7528\u5bf9\u8c61\n\n**wechatpayv3**\u540c\u65f6\u652f\u6301\u5fae\u4fe1\u652f\u4ed8[\u76f4\u8fde\u6a21\u5f0f](https://pay.weixin.qq.com/wiki/doc/apiv3/index.shtml)\u53ca[\u670d\u52a1\u5546\u6a21\u5f0f](https://pay.weixin.qq.com/wiki/doc/apiv3_partner/index.shtml)\uff0c\u63a5\u53e3\u8bf4\u660e\u8be6\u89c1\u5b98\u7f51\u3002\n\n## \u7279\u6027\n\n1. \u5e73\u53f0\u8bc1\u4e66\u81ea\u52a8\u66f4\u65b0\uff0c\u65e0\u9700\u5f00\u53d1\u8005\u5173\u6ce8\u5e73\u53f0\u8bc1\u4e66\u6709\u6548\u6027\uff0c\u65e0\u9700\u624b\u52a8\u4e0b\u8f7d\u66f4\u65b0\uff0c\u81ea\u52a8\u9a8c\u8bc1\u7b7e\u540d\uff08\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u8bc1\u4e66\u6a21\u5f0f\uff09\uff1b\n2. \u652f\u6301\u672c\u5730\u7f13\u5b58\u5e73\u53f0\u8bc1\u4e66\uff0c\u521d\u59cb\u5316\u65f6\u6307\u5b9a\u5e73\u53f0\u8bc1\u4e66\u4fdd\u5b58\u76ee\u5f55\u5373\u53ef\uff08\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u8bc1\u4e66\u6a21\u5f0f\uff09\uff1b\n3. \u654f\u611f\u4fe1\u606f\u76f4\u63a5\u4f20\u5165\u660e\u6587\u53c2\u6570\uff0cSDK \u5185\u90e8\u81ea\u52a8\u52a0\u5bc6\uff0c\u65e0\u9700\u624b\u52a8\u5904\u7406\uff1b\n4. \u56de\u8c03\u901a\u77e5\u81ea\u52a8\u9a8c\u8bc1\u56de\u8c03\u6d88\u606f\uff0c\u81ea\u52a8\u89e3\u5bc6 resource \u5bf9\u8c61\uff0c\u5e76\u8fd4\u56de\u89e3\u5bc6\u540e\u7684\u6570\u636e\uff1b\n5. \u5df2\u9002\u914d[\u76f4\u8fde\u6a21\u5f0f](https://pay.weixin.qq.com/wiki/doc/apiv3/apis/index.shtml)\u548c[\u670d\u52a1\u5546\u6a21\u5f0f](https://pay.weixin.qq.com/wiki/doc/apiv3_partner/apis/index.shtml)\u4e2d\u9664\u201c\u7535\u5546\u6536\u4ed8\u901a\u201d\u4ee5\u5916\u6240\u6709 v3 \u7248\u63a5\u53e3\uff1b\n6. \u517c\u5bb9\u901a\u8fc7\u5e73\u53f0\u8bc1\u4e66\u6a21\u5f0f\u6216\u5e73\u53f0\u516c\u94a5\u6a21\u5f0f\u521d\u59cb\u5316\uff0c\u517c\u5bb9\u8bc1\u4e66\u6a21\u5f0f\u5411\u516c\u94a5\u6a21\u5f0f\u8fc7\u6e21\u3002\n7. \u652f\u6301Python\u7684\u5f02\u6b65\u7f16\u7a0b `async`\u548c `await`\uff0c\u5982\u9700\u96c6\u6210\u5728FastAPI\u6846\u67b6\u4e2d [\u67e5\u770b\u6587\u6863\u5730\u5740](examples/server/async_examples/README.md)\n\n## \u6e90\u7801\n\n[github](https://github.com/minibear2021/wechatpayv3)\n\n[gitee](https://gitee.com/minibear2021/wechatpayv3)\n\n## \u5b89\u88c5\n\n```sh\npip install wechatpayv3\n\n# \u5b89\u88c5\u5305\u542b\u5f02\u6b65\u4f9d\u8d56\u7684\u5b8c\u6574\u7248\u672c\npip install wechatpayv3[async]\n```\n\n## \u4f7f\u7528\u65b9\u6cd5\n\n### \u51c6\u5907\n\n**\u9996\u5148\u6839\u636e[Q&A](docs/Q&A.md)\u7b2c\u4e00\u6761\u5224\u65ad\u5f53\u524d\u8d26\u6237\u6240\u4f7f\u7528\u7684\u6a21\u5f0f\uff08\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u8bc1\u4e66\u6a21\u5f0f \u6216 \u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u516c\u94a5\u6a21\u5f0f\uff09\u3002**\n\n\u53c2\u8003\u5fae\u4fe1\u5b98\u65b9\u6587\u6863\u51c6\u5907\u597d\u5546\u6237\u8bc1\u4e66\u79c1\u94a5\u3001\u5546\u6237\u8bc1\u4e66\u5e8f\u5217\u53f7\u3001APIv3\u5bc6\u94a5, \u8fd9\u4e9b\u53c2\u6570\u914d\u7f6e\u65b9\u6cd5\u8bf7\u53c2\u8003\u5b98\u65b9\u6587\u6863\u3002\n\n- **\u5546\u6237 API \u8bc1\u4e66\u79c1\u94a5\uff1aPRIVATE_KEY**\u3002\u5546\u6237\u7533\u8bf7\u5546\u6237 API \u8bc1\u4e66\u65f6\uff0c\u4f1a\u751f\u6210\u5546\u6237\u79c1\u94a5\uff0c\u5e76\u4fdd\u5b58\u5728\u672c\u5730\u8bc1\u4e66\u6587\u4ef6\u5939\u7684\u6587\u4ef6 apiclient_key.pem \u4e2d\u3002\n  > :warning: \u4e0d\u8981\u628a\u79c1\u94a5\u6587\u4ef6\u66b4\u9732\u5728\u516c\u5171\u573a\u5408\uff0c\u5982\u4e0a\u4f20\u5230 Github\uff0c\u5199\u5728\u5ba2\u6237\u7aef\u4ee3\u7801\u7b49\u3002\n- **\u5546\u6237 API \u8bc1\u4e66\u5e8f\u5217\u53f7\uff1aCERT_SERIAL_NO**\u3002\u6bcf\u4e2a\u8bc1\u4e66\u90fd\u6709\u4e00\u4e2a\u7531 CA \u9881\u53d1\u7684\u552f\u4e00\u7f16\u53f7\uff0c\u5373\u8bc1\u4e66\u5e8f\u5217\u53f7\u3002\u6269\u5c55\u9605\u8bfb [\u5982\u4f55\u67e5\u770b\u8bc1\u4e66\u5e8f\u5217\u53f7](https://wechatpay-api.gitbook.io/wechatpay-api-v3/chang-jian-wen-ti/zheng-shu-xiang-guan#ru-he-cha-kan-zheng-shu-xu-lie-hao)\u3002\n- **\u5fae\u4fe1\u652f\u4ed8 APIv3 \u5bc6\u94a5\uff1aAPIV3_KEY**\uff0c\u662f\u5728\u56de\u8c03\u901a\u77e5\u548c\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u8bc1\u4e66\u4e0b\u8f7d\u63a5\u53e3\u4e2d\uff0c\u4e3a\u52a0\u5f3a\u6570\u636e\u5b89\u5168\uff0c\u5bf9\u5173\u952e\u4fe1\u606f `AES-256-GCM` \u89e3\u5bc6\u65f6\u4f7f\u7528\u7684\u5bf9\u79f0\u52a0\u5bc6\u5bc6\u94a5\u3002\n\n\u5bf9\u4e8e\u4f7f\u7528\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u516c\u94a5\u6a21\u5f0f\u521d\u59cb\u5316\u7684\u60c5\u51b5\uff0c\u8fd8\u9700\u8981\u4ece\u5fae\u4fe1\u652f\u4ed8\u540e\u53f0\u7684\u201cAPI\u5b89\u5168\u201d\u83dc\u5355\u4e2d\u4e0b\u8f7d/\u590d\u5236\u4ee5\u4e0b\u4e24\u9879\uff1a\n\n- **\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u516c\u94a5\uff1aPUBLIC_KEY**\uff0c\u5fae\u4fe1\u652f\u4ed8\u540e\u53f0\u201cAPI\u5b89\u5168-\u5fae\u4fe1\u652f\u4ed8\u516c\u94a5\u201d\u83dc\u5355\u4e2d\u4e0b\u8f7d\u7684\u5fae\u4fe1\u652f\u4ed8\u516c\u94a5\u3002\n- **\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u516c\u94a5ID\uff1aPUBLIC_KEY_ID**\uff0c\u5fae\u4fe1\u652f\u4ed8\u540e\u53f0\u201cAPI\u5b89\u5168-\u5fae\u4fe1\u652f\u4ed8\u516c\u94a5\u201d\u83dc\u5355\u4e2d\u590d\u5236\u7684\u5fae\u4fe1\u652f\u4ed8\u516c\u94a5ID\uff0c\u5f62\u5982\uff1aPUB_KEY_ID_1234567890...\u3002\n\n\n### \u4e00\u4e2a\u6700\u5c0f\u7684\u540e\u7aef\n\n[examples.py](examples/server/examples.py) \u6f14\u793a\u4e86\u4e00\u4e2a\u5e26\u6709[Native \u652f\u4ed8\u4e0b\u5355](https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_4_1.shtml)\u63a5\u53e3\u548c[\u652f\u4ed8\u901a\u77e5](https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_4_5.shtml)\u63a5\u53e3\u7684\u540e\u7aef\u3002\n\u9996\u5148\uff0c\u4fee\u6539 **examplys.py** \u91cc\u4ee5\u4e0b\u51e0\u9879\u914d\u7f6e\u53c2\u6570\uff1a\n\n```python\n# \u5fae\u4fe1\u652f\u4ed8\u5546\u6237\u53f7\uff0c\u670d\u52a1\u5546\u6a21\u5f0f\u4e0b\u4e3a\u670d\u52a1\u5546\u6237\u53f7\uff0c\u5373\u5b98\u65b9\u6587\u6863\u4e2d\u7684sp_mchid\u3002\nMCHID = '1230000109'\n\n# \u5546\u6237\u8bc1\u4e66\u79c1\u94a5\uff0c\u6b64\u6587\u4ef6\u4e0d\u8981\u653e\u7f6e\u5728\u4e0b\u9762\u8bbe\u7f6e\u7684CERT_DIR\u76ee\u5f55\u91cc\u3002\nwith open('path_to_mch_private_key/apiclient_key.pem') as f:\n    PRIVATE_KEY = f.read()\n\n# \u5546\u6237\u8bc1\u4e66\u5e8f\u5217\u53f7\nCERT_SERIAL_NO = '444F4864EA9B34415...'\n\n# API v3\u5bc6\u94a5\uff0c https://pay.weixin.qq.com/wiki/doc/apiv3/wechatpay/wechatpay3_2.shtml\nAPIV3_KEY = 'MIIEvwIBADANBgkqhkiG9w0BAQE...'\n\n# APPID\uff0c\u5e94\u7528ID\uff0c\u670d\u52a1\u5546\u6a21\u5f0f\u4e0b\u4e3a\u670d\u52a1\u5546\u5e94\u7528ID\uff0c\u5373\u5b98\u65b9\u6587\u6863\u4e2d\u7684sp_appid\uff0c\u4e5f\u53ef\u4ee5\u5728\u8c03\u7528\u63a5\u53e3\u7684\u65f6\u5019\u8986\u76d6\u3002\nAPPID = 'wxd678efh567hg6787'\n\n# \u56de\u8c03\u5730\u5740\uff0c\u4e5f\u53ef\u4ee5\u5728\u8c03\u7528\u63a5\u53e3\u7684\u65f6\u5019\u8986\u76d6\u3002\nNOTIFY_URL = 'https://www.xxxx.com/notify'\n\n# \u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u8bc1\u4e66\u7f13\u5b58\u76ee\u5f55\uff0c\u521d\u59cb\u8c03\u8bd5\u7684\u65f6\u5019\u53ef\u4ee5\u8bbe\u4e3aNone\uff0c\u9996\u6b21\u4f7f\u7528\u786e\u4fdd\u6b64\u76ee\u5f55\u4e3a\u7a7a\u76ee\u5f55\u3002\nCERT_DIR = './cert'\n\n# \u65e5\u5fd7\u8bb0\u5f55\u5668\uff0c\u8bb0\u5f55web\u8bf7\u6c42\u548c\u56de\u8c03\u7ec6\u8282\uff0c\u4fbf\u4e8e\u8c03\u8bd5\u6392\u9519\u3002\nlogging.basicConfig(filename=os.path.join(os.getcwd(), 'demo.log'), level=logging.DEBUG, filemode='a', format='%(asctime)s - %(process)s - %(levelname)s: %(message)s')\nLOGGER = logging.getLogger(\"demo\")\n\n# \u63a5\u5165\u6a21\u5f0f\uff1aFalse=\u76f4\u8fde\u5546\u6237\u6a21\u5f0f\uff0cTrue=\u670d\u52a1\u5546\u6a21\u5f0f\u3002\nPARTNER_MODE = False\n\n# \u4ee3\u7406\u8bbe\u7f6e\uff0cNone\u6216\u8005{\"https\": \"http://10.10.1.10:1080\"}\uff0c\u8be6\u7ec6\u683c\u5f0f\u53c2\u89c1[https://requests.readthedocs.io/en/latest/user/advanced/#proxies](https://requests.readthedocs.io/en/latest/user/advanced/#proxies)\nPROXY = None\n\n# \u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\u914d\u7f6e\nTIMEOUT = (10, 30) # \u5efa\u7acb\u8fde\u63a5\u6700\u5927\u8d85\u65f6\u65f6\u95f4\u662f10s\uff0c\u8bfb\u53d6\u54cd\u5e94\u7684\u6700\u5927\u8d85\u65f6\u65f6\u95f4\u662f30s\n\n# \u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u516c\u94a5\n# \u6ce8\uff1a\u5982\u679c\u4f7f\u7528\u5e73\u53f0\u516c\u94a5\u6a21\u5f0f\u521d\u59cb\u5316\uff0c\u9700\u914d\u7f6e\u6b64\u53c2\u6570\u3002\nwith open('path_to_wechat_pay_public_key/pub_key.pem') as f:\n    PUBLIC_KEY = f.read()\n\n# \u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u516c\u94a5ID\n# \u6ce8\uff1a\u5982\u679c\u4f7f\u7528\u5e73\u53f0\u516c\u94a5\u6a21\u5f0f\u521d\u59cb\u5316\uff0c\u9700\u914d\u7f6e\u6b64\u53c2\u6570\u3002\nPUBLIC_KEY_ID = 'PUB_KEY_ID_444F4864EA9B34415...'\n```\n\n\u63a5\u4e0b\u6765\u4f7f\u7528\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u8bc1\u4e66\u6a21\u5f0f\u521d\u59cb\u5316 WechatPay \u5b9e\u4f8b\u5e76\u914d\u7f6e\u4e00\u4e2a\u5408\u9002\u7684\u63a5\u53e3\uff1a\n\n```python\nwxpay = WeChatPay(\n    wechatpay_type=WeChatPayType.NATIVE,\n    mchid=MCHID,\n    private_key=PRIVATE_KEY,\n    cert_serial_no=CERT_SERIAL_NO,\n    apiv3_key=APIV3_KEY,\n    appid=APPID,\n    notify_url=NOTIFY_URL,\n    cert_dir=CERT_DIR,\n    logger=LOGGER,\n    partner_mode=PARTNER_MODE,\n    proxy=PROXY,\n    timeout=TIMEOUT)\n\n# \u5982\u679c\u662f\u4f7f\u7528\u5fae\u4fe1\u652f\u4ed8\u5e73\u53f0\u516c\u94a5\u6a21\u5f0f\u521d\u59cb\u5316\uff0c\u53c2\u7167\u4e0b\u9762\u4ee3\u7801\uff0c\u5e73\u53f0\u8bc1\u4e66\u6a21\u5f0f\u5411\u5e73\u53f0\u516c\u94a5\u6a21\u5f0f\u8fc7\u6e21\u671f\u95f4\u4e5f\u8bf7\u4f7f\u7528\u6b64\u65b9\u5f0f\u521d\u59cb\u5316\u3002\nwxpay = WeChatPay(\n    wechatpay_type=WeChatPayType.NATIVE,\n    mchid=MCHID,\n    private_key=PRIVATE_KEY,\n    cert_serial_no=CERT_SERIAL_NO,\n    apiv3_key=APIV3_KEY,\n    appid=APPID,\n    notify_url=NOTIFY_URL,\n    logger=LOGGER,\n    partner_mode=PARTNER_MODE,\n    proxy=PROXY,\n    timeout=TIMEOUT,\n    public_key=PUBLIC_KEY,\n    public_key_id=PUBLIC_KEY_ID)\n\napp = Flask(__name__)\n\n@app.route('/pay')\ndef pay():\n    # \u4ee5native\u4e0b\u5355\u4e3a\u4f8b\uff0c\u4e0b\u5355\u6210\u529f\u540e\u5373\u53ef\u83b7\u53d6\u5230'code_url'\uff0c\u5c06'code_url'\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u7801\uff0c\u5e76\u7528\u5fae\u4fe1\u626b\u7801\u5373\u53ef\u8fdb\u884c\u652f\u4ed8\u6d4b\u8bd5\u3002\n    out_trade_no = ''.join(sample(ascii_letters + digits, 8))\n    description = 'demo-description'\n    amount = 100\n    code, message = wxpay.pay(\n        description=description,\n        out_trade_no=out_trade_no,\n        amount={'total': amount},\n        pay_type=WeChatPayType.NATIVE\n    )\n    return jsonify({'code': code, 'message': message})\n```\n\n\u68c0\u67e5\u4e00\u4e0b\u53c2\u6570\u65e0\u8bef\uff0c\u73b0\u5728\u5c31\u53ef\u4ee5\u7528 python \u89e3\u91ca\u5668\u6765\u8fd0\u884c\uff1a\n\n```shell\n$ python examples.py\n * Serving Flask app \"examples\" (lazy loading)\n * Environment: production\n   WARNING: This is a development server. Do not use it in a production deployment.\n   Use a production WSGI server instead.\n * Debug mode: off\n * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)\n```\n\n\u73b0\u5728\u8bbf\u95ee <http://127.0.0.1:5000/pay> \uff0c\u5982\u679c\u4e00\u5207\u6b63\u5e38\uff0c\u4f60\u4f1a\u770b\u5230\u4e0b\u9762\u4e00\u4e32 json \u5b57\u7b26\u4e32\uff1a\n\n```python\n{\n  \"code\": 200,\n  \"message\": \"{\\\"code_url\\\":\\\"weixin://wxpay/bizpayurl?pr=abcdefghi\\\"}\"\n}\n```\n\n\u5230\u8fd9\u4e00\u6b65\u7edf\u4e00\u4e0b\u5355\u7684\u540e\u7aef\u5c31\u5b8c\u6210\u4e86\uff0c\u73b0\u5728\u5c06 code_url \u7684\u503c\u5373\"weixin://wxpay/bizpayurl?pr=abcdefghi\"\u7528[\u8349\u6599](https://cli.im/)\u8f6c\u6362\u4e3a\u4e8c\u7ef4\u7801\u5373\u53ef\u7528\u5fae\u4fe1\u626b\u7801\u8fdb\u884c\u652f\u4ed8\u6d4b\u8bd5\u3002\n\n**\u4ee5\u4e0a\u6b65\u9aa4\u5982\u679c\u4e0d\u80fd\u6b63\u786e\u6267\u884c\uff0c\u52a1\u5fc5\u4ed4\u7ec6\u68c0\u67e5\u5404\u9879\u521d\u59cb\u5316\u53c2\u6570\uff0c\u5fc5\u8981\u7684\u60c5\u51b5\u4e0b\uff0c\u767b\u5f55\u5fae\u4fe1\u652f\u4ed8\u540e\u53f0\uff0c\u5c06\u6240\u6709\u53c2\u6570\u91cd\u7f6e\u3002**\n\nNative \u652f\u4ed8\u8c03\u8bd5\u6700\u7b80\u5355\u4fbf\u6377\uff0c\u8c03\u8bd5\u901a\u8fc7\u6ca1\u6709\u95ee\u9898\u8bc1\u660e\u521d\u59cb\u5316\u53c2\u6570\u6b63\u786e\u4e4b\u540e\uff0c\u5982\u679c\u9700\u8981\u91c7\u7528\u5176\u4ed6\uff08\u5c0f\u7a0b\u5e8f\u3001H5\u3001JSAPI\u3001APP\uff09\u652f\u4ed8\u4e0b\u5355\uff0c\u53ef\u7ee7\u7eed\u53c2\u8003 examples.py\u3002\n\n\u4ee5\u4e0a\u6f14\u793a\u4e86\u4e00\u4e2a\u6700\u7b80\u5355\u7684\u540e\u7aef\uff0c\u5982\u679c\u9700\u8981\u4f7f\u7528\u5f02\u6b65\u8c03\u7528\uff0c\u53ef\u4ee5[\u70b9\u51fb\u67e5\u770b\u5f02\u6b65\u7248\u672c\u7684\u5b9e\u73b0\u6307\u5357](examples/server/async_examples/README.md)\u3002\n\n## \u5e38\u89c1\u95ee\u9898\n\n\u65e5\u5e38\u5f00\u53d1\u5bf9\u63a5\u4e2d\u7684\u5e38\u89c1\u95ee\u9898\uff08**\u7279\u522b\u662f\u6d89\u53ca\u5e73\u53f0\u8bc1\u4e66\u3001\u5e73\u53f0\u516c\u94a5\u3001\u56de\u8c03\u9a8c\u8bc1\u5931\u8d25\u7b49\u60c5\u51b5\u7684\u5904\u7406**\uff09\u8bf7\u89c1[\u8fd9\u91cc](docs/Q&A.md)\u3002\n\n## \u63a5\u53e3\u6e05\u5355\n\n\u5df2\u9002\u914d\u7684\u5fae\u4fe1\u652f\u4ed8 V3 \u7248 API \u63a5\u53e3\u5217\u8868\u660e\u7ec6\u8be6\u89c1[\u8fd9\u91cc](docs/apis.md)\u3002\n\n\u90e8\u5206\u63a5\u53e3\u7684\u5177\u4f53\u8c03\u7528\u65b9\u6cd5\u53ef\u4ee5\u53c2\u8003[\u8fd9\u91cc](docs/interface.md)\u3002\n\n\u6240\u6709\u63a5\u53e3\u7684\u53c2\u6570\u7c7b\u578b\u548c\u503c**\u5f3a\u70c8\u5efa\u8bae**\u4ed4\u7ec6\u770b\u4e00\u4e0b\u5b98\u65b9\u7684\u63a5\u53e3\u6587\u6863\u3002\n\n### \u63a5\u53e3\u51fd\u6570\u53c2\u6570\n\n\u53c2\u6570\u7c7b\u578b\u5bf9\u7167\u53c2\u8003\u4e0b\u8868\uff1a\n\n| \u5fae\u4fe1\u652f\u4ed8\u5b98\u65b9\u6587\u6863\u58f0\u660e | **wechatpayv3 python sdk** |\n| -------------------- | -------------------------- |\n| string | str |\n| int| int |\n| object | dict: {} |\n| array| list: [] |\n| boolean| bool: True, False |\n| message| bytes|\n\n### \u63a5\u53e3\u51fd\u6570\u8fd4\u56de\u503c\n\n\u6bcf\u4e2a\u63a5\u53e3\u5747\u540c\u6b65\u8fd4\u56de code \u548c message\uff0ccode \u4e3a web \u8bf7\u6c42\u5f97\u5230\u7684 HTTP \u72b6\u6001\u7801\uff0cmessage \u4e3a\u670d\u52a1\u5668\u8fd4\u56de\u7684 json \u5b57\u7b26\u4e32\u3002\n\u4f8b\u5916\uff1a\n\n1. \u56de\u8c03\u901a\u77e5\uff08callback\uff09\u63a5\u53e3\u5c06\u6536\u5230\u7684\u53c2\u6570\u89e3\u5bc6\u540e\u8fd4\u56de\uff0c\u56de\u8c03\u9a8c\u8bc1\u4e0d\u5408\u89c4\u6216\u89e3\u5bc6\u5931\u8d25\u5219\u8fd4\u56de None\uff1b\n2. \u4e0b\u8f7d\u8d26\u5355\uff08download_bill\uff09\u548c\u6d88\u8d39\u8005\u6295\u8bc9 2.0 \u7684\u56fe\u7247\u4e0b\u8f7d\uff08complaint_image_download\uff09\u63a5\u53e3\u8fd4\u56de\u7684 message \u4e3a bytes \u7c7b\u578b\uff0c\u76f4\u63a5\u5c06 message \u5199\u5165\u78c1\u76d8\u5373\u53ef\u83b7\u5f97\u5bf9\u5e94\u7684\u76ee\u6807\u6587\u4ef6\u3002\n3. \u8d26\u5355\u4e0b\u8f7d\u63a5\u53e3\u9ed8\u8ba4\u8fd4\u56de\u7684\u662fgzip\u683c\u5f0f\u7684\u6587\u4ef6\uff0c\u53ef\u7528gzip\u5e93\u89e3\u538b\u540e\u83b7\u53d6\u5b9e\u9645\u7684\u8d26\u5355\u6587\u4ef6\u3002\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "Keywords", "License", "License-File", "Provides-Extra", "Requires-Dist", "Summary"], "home_page": "https://github.com/minibear2021/wechatpayv3", "keywords": "python sdk wechatpay api v3 \u5fae\u4fe1\u652f\u4ed8", "license": "MIT", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "wechatpayv3", "package_url": "https://pypi.org/project/wechatpayv3/", "platform": null, "project_url": "https://pypi.org/project/wechatpayv3/", "project_urls": {"Homepage": "https://github.com/minibear2021/wechatpayv3"}, "provides_extra": ["async"], "release_url": "https://pypi.org/project/wechatpayv3/2.0.0/", "requires_dist": ["requests>=2.21.0", "cryptography>=35.0.0", "httpx>=0.28.1; extra == \"async\"", "aiofiles>=23.2.0; extra == \"async\""], "requires_python": null, "summary": "\u5fae\u4fe1\u652f\u4ed8 Python SDK(python sdk for wechatpay)", "version": "2.0.0", "yanked": false, "yanked_reason": null}, "last_serial": 30395186, "urls": [{"comment_text": null, "digests": {"blake2b_256": "35b81da18f6595ccfeb3eccad7594e63ac5f3c215421c8f3cc8a7f2237367657", "md5": "478c14621f361aebf5a8761f98332aae", "sha256": "f452c94ce4094a8dd6bbef2e39cf581ce673f33fd7c7035653f1faab84ecf9ee"}, "downloads": -1, "filename": "wechatpayv3-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "478c14621f361aebf5a8761f98332aae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 114125, "upload_time": "2025-07-29T02:55:18", "upload_time_iso_8601": "2025-07-29T02:55:18.473130Z", "url": "https://files.pythonhosted.org/packages/35/b8/1da18f6595ccfeb3eccad7594e63ac5f3c215421c8f3cc8a7f2237367657/wechatpayv3-2.0.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "cdfc08da993b30fa6c47a9810aa20f5f63a5af14cd260519a7a9088876e21516", "md5": "b513fdf5dcc90ba4c818ab8962156a91", "sha256": "06cba09883dc447a4c5533e2805c98c5ff74ce777c60bcd67dd3a988b8d81360"}, "downloads": -1, "filename": "wechatpayv3-2.0.0.tar.gz", "has_sig": false, "md5_digest": "b513fdf5dcc90ba4c818ab8962156a91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 92411, "upload_time": "2025-07-29T02:55:19", "upload_time_iso_8601": "2025-07-29T02:55:19.828116Z", "url": "https://files.pythonhosted.org/packages/cd/fc/08da993b30fa6c47a9810aa20f5f63a5af14cd260519a7a9088876e21516/wechatpayv3-2.0.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:55:11 GMT", "package": "mcp-metricflow", "version": "1.0.1b2", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# mcp-metricflow\n\n[![Python](https://img.shields.io/badge/python-3.10+-blue.svg)](https://www.python.org/downloads/)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)\n[![Coverage](https://img.shields.io/badge/coverage-100%25-brightgreen.svg)](htmlcov/index.html)\n[![Code style: ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n[![Package manager: uv](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json)](https://github.com/astral-sh/uv)\n\nA Model Context Protocol (MCP) server that provides MetricFlow CLI tools through both SSE (with optional API key authentication) and STDIO interfaces.\n\n> [!WARNING]\n> This repository is a learning project focused on MetricFlow integration with MCP. For production use cases, please refer to the official [dbt-mcp](https://github.com/dbt-labs/dbt-mcp) implementation by dbt Labs.\n\n## Table of Contents\n\n- [mcp-metricflow](#mcp-metricflow)\n  - [Table of Contents](#table-of-contents)\n  - [Overview](#overview)\n  - [Setup](#setup)\n  - [Configuration](#configuration)\n  - [Running the MCP Server](#running-the-mcp-server)\n    - [STDIO Mode](#stdio-mode)\n    - [SSE Mode](#sse-mode)\n      - [API Key Authentication](#api-key-authentication)\n  - [Available Tools](#available-tools)\n  - [Project Structure](#project-structure)\n  - [Contributing \u2728](#contributing-)\n  - [TODO](#todo)\n\n## Overview\n\nThis project provides a Model Context Protocol (MCP) server that wraps MetricFlow CLI commands, making them accessible through both Server-Sent Events (SSE) and Standard Input/Output (STDIO) interfaces. It enables seamless integration with Claude Desktop and other MCP-compatible clients.\n\n## Setup\n\n```bash\n# Install uv at https://docs.astral.sh/uv/getting-started/installation/\n\n# Copy environment template\ncp .env.template .env\n# ...and then jump to # Configuration section to fulfill it\n```\n\n## Configuration\n\nEdit the `.env` file with your specific configuration:\n\n```bash\n# Required: Path to your dbt project\nDBT_PROJECT_DIR=/path/to/your/dbt/project e.g. /Users/dat/repos/il/jaffle-shop\n\n# Optional: Other configurations\nDBT_PROFILES_DIR=~/.dbt\nMF_PATH=mf\nMF_TMP_DIR=/tmp\n\n# SSE server configuration (optional)\nMCP_HOST=localhost\nMCP_PORT=8000\n\n# API key authentication for SSE mode (optional)\nMCP_API_KEY=your-secret-api-key\nMCP_REQUIRE_AUTH=false\n```\n\n## Running the MCP Server\n\n### STDIO Mode\n\nFor integration with Claude Desktop (or any other MCP Client tool), use STDIO mode with the following `uvx` command:\n\n```bash\nuvx --env-file /path/to/.env mcp-metricflow\n\n```\n\nAdd this configuration to the respective client's config file:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-metricflow\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"--env-file\",\n        \"<path-to-.env-file>\",\n        \"mcp-metricflow\"\n      ]\n    },\n  }\n}\n```\n\n### SSE Mode\n\nFor web-based integration or direct HTTP access:\n\n```bash\n# export DBT_PROFILES_DIR=~/.dbt\nuv run python src/main_sse.py\n```\n\nThe server will start on `http://localhost:8000` (or the host/port specified in your environment variables).\n\n#### API Key Authentication\n\nThe SSE server supports optional API key authentication. To enable authentication:\n\n1. Set the required environment variables:\n   ```bash\n   export MCP_API_KEY=\"your-secret-api-key\"\n   export MCP_REQUIRE_AUTH=\"true\"\n   ```\n\n2. Access authenticated endpoints by including the API key in the Authorization header:\n   ```bash\n   # Health check (no authentication required)\n   curl http://localhost:8000/health\n\n   # SSE endpoint (requires authentication when enabled)\n   curl -H \"Authorization: Bearer your-secret-api-key\" http://localhost:8000/sse\n   ```\n\n**Authentication Configuration:**\n- `MCP_API_KEY`: The secret API key for authentication (required when `MCP_REQUIRE_AUTH=true`)\n- `MCP_REQUIRE_AUTH`: Enable/disable authentication (`true`, `1`, `yes`, `on` to enable; default: `false`)\n\n**Security Notes:**\n- The `/health` endpoint is always accessible without authentication for monitoring purposes\n- The `/sse` endpoint requires authentication when `MCP_REQUIRE_AUTH=true`\n- API keys are case-sensitive and support special characters\n- Store API keys securely and avoid committing them to version control\n\n## Available Tools\n\nThe MCP server exposes the following MetricFlow CLI tools:\n\n| Tool | Description | Required Parameters | Optional Parameters |\n|------|-------------|-------------------|-------------------|\n| `query` | Execute MetricFlow queries | `session_id`, `metrics` | `group_by`, `start_time`, `end_time`, `where`, `order`, `limit`, `saved_query`, `explain`, `show_dataflow_plan`, `show_sql_descriptions` |\n| `list_metrics` | List available metrics | None | `search`, `show_all_dimensions` |\n| `list_dimensions` | List available dimensions | None | `metrics` |\n| `list_entities` | List available entities | None | `metrics` |\n| `list_dimension_values` | List values for a dimension | `dimension`, `metrics` | `start_time`, `end_time` |\n| `validate_configs` | Validate model configurations | None | `dw_timeout`, `skip_dw`, `show_all`, `verbose_issues`, `semantic_validation_workers` |\n| `health_checks` | Perform system health checks | None | None |\n\nEach tool includes comprehensive documentation accessible through the MCP interface.\n\n## Project Structure\n\n```\nsrc/\n\u251c\u2500\u2500 config/\n\u2502   \u2514\u2500\u2500 config.py              # Configuration management\n\u251c\u2500\u2500 server/\n\u2502   \u251c\u2500\u2500 auth.py                # API key authentication\n\u2502   \u251c\u2500\u2500 sse_server.py          # SSE server implementation\n\u2502   \u2514\u2500\u2500 stdio_server.py        # STDIO server implementation\n\u251c\u2500\u2500 tools/\n\u2502   \u251c\u2500\u2500 prompts/mf_cli/        # Tool documentation (*.md files)\n\u2502   \u251c\u2500\u2500 metricflow/            # MetricFlow CLI wrappers\n\u2502   \u2502   \u251c\u2500\u2500 base.py            # Shared command execution\n\u2502   \u2502   \u251c\u2500\u2500 query.py           # Query functionality\n\u2502   \u2502   \u251c\u2500\u2500 list_metrics.py    # List metrics\n\u2502   \u2502   \u251c\u2500\u2500 list_dimensions.py # List dimensions\n\u2502   \u2502   \u251c\u2500\u2500 list_entities.py   # List entities\n\u2502   \u2502   \u251c\u2500\u2500 list_dimension_values.py # List dimension values\n\u2502   \u2502   \u251c\u2500\u2500 validate_configs.py # Configuration validation\n\u2502   \u2502   \u2514\u2500\u2500 health_checks.py   # Health checks\n\u2502   \u2514\u2500\u2500 cli_tools.py           # MCP tool registration\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 logger.py              # Logging configuration\n\u2502   \u2514\u2500\u2500 prompts.py             # Prompt loading utilities\n\u251c\u2500\u2500 main_sse.py                # SSE server entry point\n\u2514\u2500\u2500 main_stdio.py              # STDIO server entry point\n```\n\n## Contributing \u2728\n\nIf you've ever wanted to contribute to this tool, and a great cause, now is your chance!\n\nSee the contributing docs [CONTRIBUTING](CONTRIBUTING.md) for more information.\n\nIf you've found this tool to be very helpful, please consider giving the repository a star, sharing it on social media, or even writing a blog post about it \ud83d\udc8c\n\n[![mcp-metricflow stars](https://img.shields.io/github/stars/datnguye/mcp-metricflow.svg?logo=github&style=for-the-badge&label=Star%20this%20repo)](https://github.com/datnguye/mcp-metricflow)\n[![buy me a coffee](https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?logo=buy-me-a-coffee&logoColor=white&labelColor=ff813f&style=for-the-badge)](https://www.buymeacoffee.com/datnguye)\n\nFinally, super thanks to our *Contributors*:\n\n<a href=\"https://github.com/datnguye/mcp-metricflow/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=datnguye/mcp-metricflow\" />\n</a>\n\n## TODO\n- Test STDIO mode\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "MIT License\n         \n         Copyright (c) 2025 Dat Nguyen\n         \n         Permission is hereby granted, free of charge, to any person obtaining a copy\n         of this software and associated documentation files (the \"Software\"), to deal\n         in the Software without restriction, including without limitation the rights\n         to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         copies of the Software, and to permit persons to whom the Software is\n         furnished to do so, subject to the following conditions:\n         \n         The above copyright notice and this permission notice shall be included in all\n         copies or substantial portions of the Software.\n         \n         THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n         SOFTWARE.\n         ", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "mcp-metricflow", "package_url": "https://pypi.org/project/mcp-metricflow/", "platform": null, "project_url": "https://pypi.org/project/mcp-metricflow/", "project_urls": null, "provides_extra": ["snowflake", "dev", "test"], "release_url": "https://pypi.org/project/mcp-metricflow/1.0.1b2/", "requires_dist": ["fastapi>=0.115.12", "uvicorn>=0.34.2", "dbt-metricflow>=0.8.2", "python-dotenv>=1.1.0", "mcp>=1.3.2", "dbt-snowflake>=1.8.0; extra == \"snowflake\"", "black>=25.1.0; extra == \"dev\"", "ruff<=0.11.10,>=0.11.0; extra == \"dev\"", "bandit>=1.8.3; extra == \"dev\"", "pre-commit>=4.2.0; extra == \"dev\"", "poethepoet>=0.34.0; extra == \"dev\"", "pytest>=8.0.0; extra == \"test\"", "pytest-asyncio>=0.25.0; extra == \"test\"", "pytest-cov>=6.0.0; extra == \"test\"", "pytest-mock>=3.14.0; extra == \"test\"", "pytest-sugar>=1.0.0; extra == \"test\"", "coverage[toml]>=7.6.0; extra == \"test\""], "requires_python": ">=3.10", "summary": "A Model Context Protocol (MCP) server that provides MetricFlow CLI tools", "version": "1.0.1b2", "yanked": false, "yanked_reason": null}, "last_serial": 30395181, "urls": [{"comment_text": null, "digests": {"blake2b_256": "d14d3d7515297f4dceb51fa32d9fe5725cc73998df3154129d92203852efd17e", "md5": "87055eaffd36185d5965936bf329d69c", "sha256": "c64c10413518cee8d264b741b589d703c213b08a8ce93e49e17583888fe99ed3"}, "downloads": -1, "filename": "mcp_metricflow-1.0.1b2-py3-none-any.whl", "has_sig": false, "md5_digest": "87055eaffd36185d5965936bf329d69c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 28475, "upload_time": "2025-07-29T02:55:11", "upload_time_iso_8601": "2025-07-29T02:55:11.192770Z", "url": "https://files.pythonhosted.org/packages/d1/4d/3d7515297f4dceb51fa32d9fe5725cc73998df3154129d92203852efd17e/mcp_metricflow-1.0.1b2-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "679050d295d282f263c2d8f4e1f66e8f144cb1a36495cb87080628d91f3ae411", "md5": "3e743bd4ed3c590d1fdff55901fc2f3b", "sha256": "6f4bb0e8cf4944e44429dcdb3b5adee3178261b8d2036f4353f1ebc7d1dae5c3"}, "downloads": -1, "filename": "mcp_metricflow-1.0.1b2.tar.gz", "has_sig": false, "md5_digest": "3e743bd4ed3c590d1fdff55901fc2f3b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 38798, "upload_time": "2025-07-29T02:55:12", "upload_time_iso_8601": "2025-07-29T02:55:12.322575Z", "url": "https://files.pythonhosted.org/packages/67/90/50d295d282f263c2d8f4e1f66e8f144cb1a36495cb87080628d91f3ae411/mcp_metricflow-1.0.1b2.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:54:08 GMT", "package": "odoo-addon-fieldservice-geoengine", "version": "16.0.1.4.0.1", "json": {"info": {"author": "Open Source Integrators, Odoo Community Association (OCA), Pytech SRL", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Odoo", "Framework :: Odoo :: 16.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n=======================\nField Service Geoengine\n=======================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:62e62e773d6392f2b73c968a136ead77635271bcf1a835a8aab43453dd3f6c95\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Ffield--service-lightgray.png?logo=github\n    :target: https://github.com/OCA/field-service/tree/16.0/fieldservice_geoengine\n    :alt: OCA/field-service\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/field-service-16-0/field-service-16-0-fieldservice_geoengine\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/field-service&target_branch=16.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module displays map views on the order and location using the GeoEngine module and PostGIS.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nInstallation\n============\n\nTo install Field Service and have the mapping features, you need to install GeoEngine.\n\nPlease refer to the installation instructions available at:\nhttps://github.com/OCA/geospatial/tree/13.0/base_geoengine\n\nConfiguration\n=============\n\nTo configure this module, you need to:\n\n* Go to Field Service > Configuration > Settings\n\nYou need to add attribute mention below with the tag <timeline> as base element.\n\n* colors (optional): it allows to set certain specific colors if the expressed\n  condition (JS syntax) is met.\n* custom_color (optional): it allows to set custom color for fsm.stages\n  example custom_color = \"true\". And there is minor condition to follow to\n  implement this as. Define any one stage color condition like\n  colors=\"#ffffff:stage_id=='New';\"\n\nUsage\n=====\n\nTo use this module, you need to:\n\n* Go to Field Service > Master Data > Locations\n* Make sure to provide all the address information to geolocalize properly\n* Check the map tab to display the location as a point on the map\n* Go to Field Service > Dashboard\n* Select the map view to show the orders on a map with a different colors\n  based on their stage\n\nKnown issues / Roadmap\n======================\n\nThe roadmap of the Field Service application is documented on\n`Github <https://github.com/OCA/field-service/issues/1>`_.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/field-service/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/field-service/issues/new?body=module:%20fieldservice_geoengine%0Aversion:%2016.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n~~~~~~~\n\n* Open Source Integrators\n* Pytech SRL\n\nContributors\n~~~~~~~~~~~~\n\n* Open Source Integrators\n    * Wolfgang Hall <whall@opensourceintegrators.com>\n    * Maxime Chambreuil <mchambreuil@opensourceintegrators.com>\n    * Steve Campbell <scampbell@opensourceintegrators.com>\n    * Bhavesh Odedra <bodedra@opensourceintegrators.com>\n    * Michael Allen <mallen@opensourceintegrators.com>\n    * Sandip Mangukiya <smangukiya@opensourceintegrators.com>\n    * Jevin Dement <jdement@opensourceintegrators.com>\n* Murtuza Saleh <murtuza.saleh@serpentcs.com>\n* Sebastiano Picchi <sebastiano.picchi@pytech.it>\n* [APSL-Nagarro](https://apsl.tech):\n  * Antoni Marroig  <amarroig@apsl.net>\n\nOther credits\n~~~~~~~~~~~~~\n\nThe development of this module has been financially supported by:\n\n* Open Source Integrators <https://opensourceintegrators.com>\n\nMaintainers\n~~~~~~~~~~~\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-wolfhall| image:: https://github.com/wolfhall.png?size=40px\n    :target: https://github.com/wolfhall\n    :alt: wolfhall\n.. |maintainer-max3903| image:: https://github.com/max3903.png?size=40px\n    :target: https://github.com/max3903\n    :alt: max3903\n\nCurrent `maintainers <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-wolfhall| |maintainer-max3903| \n\nThis module is part of the `OCA/field-service <https://github.com/OCA/field-service/tree/16.0/fieldservice_geoengine>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/field-service", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-fieldservice-geoengine", "package_url": "https://pypi.org/project/odoo-addon-fieldservice-geoengine/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-fieldservice-geoengine/", "project_urls": {"Homepage": "https://github.com/OCA/field-service"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-fieldservice-geoengine/16.0.1.4.0.1/", "requires_dist": ["odoo-addon-base-geoengine<16.1dev,>=16.0dev", "odoo-addon-fieldservice<16.1dev,>=16.0dev", "odoo<16.1dev,>=16.0a"], "requires_python": ">=3.10", "summary": "Display Field Service locations on a map with Open Street Map", "version": "16.0.1.4.0.1", "yanked": false, "yanked_reason": null}, "last_serial": 30395178, "urls": [{"comment_text": "", "digests": {"blake2b_256": "01ee2225c4fb8335c9945b671122524420038127f38513dc2558cfc31da9b5d6", "md5": "da91560943117392ec340a66d9ba6bd8", "sha256": "b33234b28ea23b48603648eeb6bd2e098bdd4f0d0cdefadc2be56db67e9297d7"}, "downloads": -1, "filename": "odoo_addon_fieldservice_geoengine-16.0.1.4.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "da91560943117392ec340a66d9ba6bd8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 51222, "upload_time": "2025-07-29T02:54:08", "upload_time_iso_8601": "2025-07-29T02:54:08.576291Z", "url": "https://files.pythonhosted.org/packages/01/ee/2225c4fb8335c9945b671122524420038127f38513dc2558cfc31da9b5d6/odoo_addon_fieldservice_geoengine-16.0.1.4.0.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:35Z", "published": "Tue, 29 Jul 2025 02:53:38 GMT", "package": "terraformat", "version": "0.1.6", "json": {"info": {"author": "Henry Upton-Birdsall", "author_email": "henryupton@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "# terraformat\n\nA wrapper for the Terraform CLI that provides a formatted plan summary.\n\n## Overview\n\n**terraformat** is a command-line tool designed to improve the readability of `terraform plan` outputs. It runs your Terraform plan and summarizes the planned resource changes (create, update, destroy) in a color-coded, tabular format. This helps teams more quickly and safely review infrastructure changes before applying them.\n\n## Features\n\n- Runs any `terraform` command, but enhances `terraform plan` with a summary table\n- Color-coded output for quick identification of create (green), update (yellow), and destroy (red) actions\n- Parses complex Terraform resource addresses, including those in modules\n- Integrates seamlessly into existing Terraform workflows\n\n## Installation\n\n```bash\npip install .\npip install git+https://github.com/henryupton/terraformat.git\n```\n\n## Requirements\n* Python 3.7+\n* Terraform installed and available in your PATH\n\n### Python dependencies (installed automatically):\n* click\n* tabulate\n\n## Usage\n\nAfter installation, you can use terraformat as a drop-in replacement for terraform. All commands are passed through to Terraform, but plan will be summarized:\n\n```bash\nterraformat plan [ARGS...]\n```\n\n#### Example output\n```bash\n\ud83d\ude80 Running 'terraform plan'...\n--- Original Terraform Output ---\n[standard terraform plan output here]\n\n==================================================\n\ud83d\udcca Terraformat Summary\n==================================================\n+----------------+---------+---------+----------+\n| Resource Type  | Create  | Update  | Destroy  |\n+================+=========+=========+==========+\n| aws_instance   |   1     |   0     |    1     |\n| local_file     |   1     |   0     |    0     |\n| random_pet     |   0     |   1     |    0     |\n+----------------+---------+---------+----------+\n| Total          |   2     |   1     |    1     |\n+----------------+---------+---------+----------+\n```\n\nIf you run other Terraform commands, they\u2019re just passed through unchanged:\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "License-File", "Provides-Extra", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/henryupton/terraformat", "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "terraformat", "package_url": "https://pypi.org/project/terraformat/", "platform": null, "project_url": "https://pypi.org/project/terraformat/", "project_urls": {"Homepage": "https://github.com/henryupton/terraformat"}, "provides_extra": ["test"], "release_url": "https://pypi.org/project/terraformat/0.1.6/", "requires_dist": ["click", "tabulate", "pytest; extra == \"test\""], "requires_python": ">=3.7", "summary": "A wrapper for the Terraform CLI that provides a formatted plan summary.", "version": "0.1.6", "yanked": false, "yanked_reason": null}, "last_serial": 30395176, "urls": [{"comment_text": null, "digests": {"blake2b_256": "b6d2ff82e3f6d63fe801cc8301f70e9112e977186031333ef929da75fa577ebf", "md5": "5323faac9e4a4fe722702531baf49ce7", "sha256": "3def0618fc977ae8508a8e8309556acf71754ee36bb23917625ad5727bdc547e"}, "downloads": -1, "filename": "terraformat-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "5323faac9e4a4fe722702531baf49ce7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6755, "upload_time": "2025-07-29T02:53:38", "upload_time_iso_8601": "2025-07-29T02:53:38.781614Z", "url": "https://files.pythonhosted.org/packages/b6/d2/ff82e3f6d63fe801cc8301f70e9112e977186031333ef929da75fa577ebf/terraformat-0.1.6-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "25c5ebf3e46ed23e98addc11c776ffaf4e38eb292dd2d37fc9e9395a97318afb", "md5": "6cd167d60db8f7f7baf89458295c23bc", "sha256": "b8ddecfcfa8e57d3ed636bf9201187e71dbc6fd83c942e99c860f0d6aa09488e"}, "downloads": -1, "filename": "terraformat-0.1.6.tar.gz", "has_sig": false, "md5_digest": "6cd167d60db8f7f7baf89458295c23bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7471, "upload_time": "2025-07-29T02:53:39", "upload_time_iso_8601": "2025-07-29T02:53:39.963695Z", "url": "https://files.pythonhosted.org/packages/25/c5/ebf3e46ed23e98addc11c776ffaf4e38eb292dd2d37fc9e9395a97318afb/terraformat-0.1.6.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:53:22 GMT", "package": "hexdoc-hierophantics", "version": "1.2.0.1.0.0", "json": {"info": {"author": "robotgiggle", "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# hexdoc-hierophantics\n\nPython web book docgen and [hexdoc](https://pypi.org/project/hexdoc) plugin for Hierophantics.\n\n## Version scheme\n\nWe use [hatch-gradle-version](https://pypi.org/project/hatch-gradle-version) to generate the version number based on whichever mod version the docgen was built with.\n\nThe version is in this format: `mod-version.python-version.mod-pre.python-dev.python-post`\n\nFor example:\n* Mod version: `0.11.1-7`\n* Python package version: `1.0.dev0`\n* Full version: `0.11.1.1.0rc7.dev0`\n\n## Setup\n\nInstall Python 3.11 and Node 18 (20+ is **not** currently supported).\n\n```sh\npython3.11 -m venv venv\n\n.\\venv\\Scripts\\activate   # Windows\n. venv/bin/activate.fish  # fish\nsource venv/bin/activate  # everything else\n\n# run from the repo root, not doc/\npip install -e .[dev]\n```\n\n## Usage\n\nFor local testing, create a file called `.env` in the repo root following this template:\n```sh\nGITHUB_REPOSITORY=robotgiggle/hierophantics\nGITHUB_SHA=main\nGITHUB_PAGES_URL=https://robotgiggle.github.io/hierophantics/\n```\n\nUseful commands:\n```sh\n# show help\nhexdoc -h\n\n# render and serve the web book in watch mode\nnodemon --config doc/nodemon.json\n\n# render and serve the web book\nhexdoc serve\n\n# export, render, and merge the web book\nhexdoc export\nhexdoc render\nhexdoc merge\n\n# start the Python interpreter with some extra local variables\nhexdoc repl\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "hexdoc", "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "hexdoc-hierophantics", "package_url": "https://pypi.org/project/hexdoc-hierophantics/", "platform": null, "project_url": "https://pypi.org/project/hexdoc-hierophantics/", "project_urls": {"Homepage": "https://robotgiggle.github.io/hierophantics/", "Source": "https://github.com/robotgiggle/hierophantics"}, "provides_extra": ["dev"], "release_url": "https://pypi.org/project/hexdoc-hierophantics/1.2.0.1.0.0/", "requires_dist": ["hexdoc-hexcasting~=0.11.2.1.0.dev20", "ruff~=0.1.4; extra == \"dev\""], "requires_python": ">=3.11", "summary": "Python web book docgen and hexdoc plugin for Hierophantics.", "version": "1.2.0.1.0.0", "yanked": false, "yanked_reason": null}, "last_serial": 30395173, "urls": [{"comment_text": null, "digests": {"blake2b_256": "08ff378dd060410ab92913272c0ee35bd18e9b798ec2ea8dba4f49b156f1808f", "md5": "903e8ce19188ace6167f28ebe5272c7e", "sha256": "5ec88e59373c008c8c85a15b943f1ae374e6e8c61fd7e2a0e7a69c887f02493c"}, "downloads": -1, "filename": "hexdoc_hierophantics-1.2.0.1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "903e8ce19188ace6167f28ebe5272c7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.11", "size": 51956, "upload_time": "2025-07-29T02:53:22", "upload_time_iso_8601": "2025-07-29T02:53:22.031605Z", "url": "https://files.pythonhosted.org/packages/08/ff/378dd060410ab92913272c0ee35bd18e9b798ec2ea8dba4f49b156f1808f/hexdoc_hierophantics-1.2.0.1.0.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "9bd6148ea32b6dcee6f176ec813ef05a6db8b815cf733c5f077be13068e34edf", "md5": "2f1b75589c46aaafce08140e9a3b335b", "sha256": "7fb2b643a704b8d62ccb16d2cfc0a803bcf2f80dc09852c4c1f7ea1ae1f2dd38"}, "downloads": -1, "filename": "hexdoc_hierophantics-1.2.0.1.0.0.tar.gz", "has_sig": false, "md5_digest": "2f1b75589c46aaafce08140e9a3b335b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.11", "size": 38505, "upload_time": "2025-07-29T02:53:23", "upload_time_iso_8601": "2025-07-29T02:53:23.382213Z", "url": "https://files.pythonhosted.org/packages/9b/d6/148ea32b6dcee6f176ec813ef05a6db8b815cf733c5f077be13068e34edf/hexdoc_hierophantics-1.2.0.1.0.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:53:16 GMT", "package": "gxkit-dbtools", "version": "0.1.2.post1", "json": {"info": {"author": null, "author_email": "Shaojiayi <shaojy@sunburst.com.cn>", "bugtrack_url": null, "classifiers": [], "description": "# gx-toolkit-dbtools\r\n\r\n`gx-toolkit-dbtools`\uff0c\u5168\u79f0**Gx Company Development Toolkit - DBTools Module** \uff0c\u662f**\u6cf0\u5bcc\u5171\u4eab**\u5f00\u53d1\u7684\u57fa\u4e8ePython\u7684\u6570\u636e\u5e93\u5ba2\u6237\u7aef\u5de5\u5177\u3002\r\n\r\n\u4f5c\u4e3a`gx-toolkit`\u4f9d\u8d56\u7684\u5b50\u6a21\u5757\u4e4b\u4e00\uff0c\u82e5\u8981\u4f7f\u7528`gx-toolkit`\u7684\u901a\u7528\u6570\u636e\u5e93\u5ba2\u6237\u7aef\u529f\u80fd\uff0c\u8bf7\u5b89\u88c5\u6b64\u5305\u3002\r\n\r\n## \u5982\u4f55\u5b89\u88c5\r\n\r\n`gx-toolkit-dbtools`\u76ee\u524d\u6709\u4e24\u4e2a\u7248\u672c\uff0c\u5206\u4e3a**\u6b63\u5f0f\u7248**\u548c**\u6d4b\u8bd5\u7248**\u3002\r\n\r\n- **\u6b63\u5f0f\u7248**\uff1a\u53d1\u5e03\u5728**PyPI**\u7684\u7248\u672c\uff0c\u8f83\u4e3a\u7a33\u5b9a\r\n- **\u6d4b\u8bd5\u7248**\uff1a\u53d1\u5e03\u5728**TestPyPI**\u7684\u7248\u672c\uff0c\u66f4\u65b0\u5feb\r\n\r\n**\u6b63\u5f0f\u7248**\u5b89\u88c5\u65b9\u5f0f\uff1a\r\n\r\n```\r\npip install gxkit-dbtools\r\n```\r\n\r\n**\u6d4b\u8bd5\u7248**\u5b89\u88c5\u65b9\u5f0f\uff1a\r\n\r\n```\r\npip install -i https://test.pypi.org/simple/ --extra-index-url https://pypi.tuna.tsinghua.edu.cn/simple gxkit-dbtools\r\n```\r\n\r\n\u6d4b\u8bd5\u7248\u5728\u5bfc\u5165\u65f6\u9700\u6ce8\u610f\u8f93\u5165\u6b63\u786e\u7684**URL**\uff1ahttps://test.pypi.org/simple/\r\n\r\n**TestPyPI**\u4e0a\u90e8\u5206\u5e93**\u4ee3\u7801\u4e0d\u5168\u6216\u6ca1\u6709\u6700\u65b0\u7248**\uff0c\u6ca1\u6709\u7f16\u8bd1\u597d\u7684`.whl`\u6587\u4ef6\uff08**PyPI**\u5219\u4e0d\u4f1a\u6709\u6b64\u95ee\u9898\uff09\uff0c\u56e0\u6b64\u6709\u90e8\u5206\u4f9d\u8d56\u51b2\u7a81\u3002\u9700\u8981\u589e\u52a0`extra-index-url`\u5e2e\u52a9\u7528\u6237\u83b7\u53d6\u6700\u65b0\u7248\u4f9d\u8d56\u5e93\u3002\r\n\r\n## \u529f\u80fd\u6a21\u5757\r\n\r\n- `client` \u6570\u636e\u5e93\u5ba2\u6237\u7aef\uff0c\u5305\u542bMysql\u3001ClickHouse\u4ee5\u53caIoTDB\r\n- `parser` \u529f\u80fd\u5f3a\u5927\u7684SQL\u89e3\u6790\u5668\r\n\r\n## \u4f9d\u8d56\u9879\r\n\r\n- `pymysql` \r\n- `clickhouse-driver`\r\n- `apache-iotdb` - \u652f\u6301`1.x`\u548c`2.x`\u7248\u672c\uff0c`1.x`\u7248\u672c\u8bf7\u624b\u52a8\u5b89\u88c5\u4f4e\u7248\u672c`numpy`\u548c`pandas`\r\n- `cryptography`\r\n- `sqlglot`\r\n- `zstd` - C\u6269\u5c55\u7248\uff0c\u82e5\u5b89\u88c5\u5931\u8d25\u8bf7\u624b\u52a8\u6307\u5b9a\u7248\u672c\r\n\r\n## \u5feb\u901f\u5165\u95e8\r\n\r\n\u4f5c\u8005\u6682\u65f6\u61d2\u5f97\u7f16\u5199\u3002\u8bf7\u76f4\u63a5\u8054\u7cfb\u4f5c\u8005\uff08shaojy@sunburst.com.cn\uff09\u3002\r\n\r\n## \u7248\u672c\u4e0e\u8bb8\u53ef\u8bc1\r\n\r\n\u5f53\u524d\u7684\u6700\u65b0\u7248\u672c\uff1a`0.1.2`\r\n\r\n\u8bb8\u53ef\u8bc1\uff1a `Apache License 2.0` \r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": null, "license": "Apache-2.0", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "gxkit-dbtools", "package_url": "https://pypi.org/project/gxkit-dbtools/", "platform": null, "project_url": "https://pypi.org/project/gxkit-dbtools/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/gxkit-dbtools/0.1.2.post1/", "requires_dist": ["pymysql", "clickhouse-driver", "apache-iotdb", "cryptography", "sqlglot", "zstd"], "requires_python": ">=3.8", "summary": "Gx Company Development Toolkit - DBTools Module", "version": "0.1.2.post1", "yanked": false, "yanked_reason": null}, "last_serial": 30395170, "urls": [{"comment_text": null, "digests": {"blake2b_256": "0fb8cd1f8dec7a8de4f48b70f0097d9ed170f21aab24b5a7f23ebbc91923266c", "md5": "a50bfcdcfd137edea2afab3decb74f31", "sha256": "48c3364ad732bace45fdea87fcf9715826e3ace11b3fe0795514eee1612e19f9"}, "downloads": -1, "filename": "gxkit_dbtools-0.1.2.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "a50bfcdcfd137edea2afab3decb74f31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 21744, "upload_time": "2025-07-29T02:53:16", "upload_time_iso_8601": "2025-07-29T02:53:16.808000Z", "url": "https://files.pythonhosted.org/packages/0f/b8/cd1f8dec7a8de4f48b70f0097d9ed170f21aab24b5a7f23ebbc91923266c/gxkit_dbtools-0.1.2.post1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "b94e125db7a4f498c1ac459977b9a02d83b6ede6af9ea58c6806ca31e21c584b", "md5": "8190a08d5178ae316dbd65690c0f7d07", "sha256": "5f22159a775cbe7bf49a203c3721e7fcfdb81f62d4b636bf859afe7a45bf0906"}, "downloads": -1, "filename": "gxkit_dbtools-0.1.2.post1.tar.gz", "has_sig": false, "md5_digest": "8190a08d5178ae316dbd65690c0f7d07", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 19037, "upload_time": "2025-07-29T02:53:18", "upload_time_iso_8601": "2025-07-29T02:53:18.117934Z", "url": "https://files.pythonhosted.org/packages/b9/4e/125db7a4f498c1ac459977b9a02d83b6ede6af9ea58c6806ca31e21c584b/gxkit_dbtools-0.1.2.post1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:52:26 GMT", "package": "streamlit-json-tip", "version": "0.2.5", "json": {"info": {"author": "Your Name", "author_email": "Isaac <isaac@example.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Streamlit JSON Tip\n\n[![PyPI version](https://badge.fury.io/py/streamlit-json-tip.svg)](https://pypi.org/project/streamlit-json-tip/)\n[![Python Support](https://img.shields.io/pypi/pyversions/streamlit-json-tip.svg)](https://pypi.org/project/streamlit-json-tip/)\n[![License](https://img.shields.io/pypi/l/streamlit-json-tip.svg)](https://github.com/kazuar/streamlit-json-tip/blob/main/LICENSE)\n[![Tests](https://github.com/kazuar/streamlit-json-tip/workflows/Test/badge.svg)](https://github.com/kazuar/streamlit-json-tip/actions/workflows/test.yml)\n[![Downloads](https://pepy.tech/badge/streamlit-json-tip)](https://pepy.tech/project/streamlit-json-tip)\n\nA Streamlit custom component for viewing JSON data with interactive tooltips and tags for individual fields.\n\n![Streamlit JSON Tip Example](https://github.com/kazuar/streamlit-json-tip/blob/main/resources/example.png?raw=true)\n\n## Features\n\n- \ud83d\udd0d **Interactive JSON Viewer**: Expand/collapse objects and arrays\n- \ud83d\udcdd **Interactive Tooltips**: Add contextual help for any field with professional Tippy.js tooltips\n- \ud83c\udff7\ufe0f **Field Tags**: Categorize fields with colored tags (PII, CONFIG, etc.)\n- \ud83c\udfaf **Field Selection**: Click on fields to get detailed information\n- \ud83c\udfa8 **Syntax Highlighting**: Color-coded JSON with proper formatting\n- \ud83d\udcf1 **Responsive Design**: Works well in different screen sizes\n\n## Installation\n\n### With uv (Recommended)\n\n```bash\nuv add streamlit-json-tip\n```\n\nOr for a one-off script:\n```bash\nuv run --with streamlit-json-tip streamlit run your_app.py\n```\n\n### With pip\n\n```bash\npip install streamlit-json-tip\n```\n\n### From TestPyPI (Latest Development Version)\n\nWith uv:\n```bash\nuv add --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ streamlit-json-tip\n```\n\nWith pip:\n```bash\npip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ streamlit-json-tip\n```\n\n### Development Setup\n\n#### Prerequisites\n\n* Install task\n\n```bash\nbrew install go-task/tap/go-task\n```\n\n* Install uv\n\n```bash\n   curl -LsSf https://astral.sh/uv/install.sh | sh\n```\n\n#### Build repo\n\n1. Clone this repository:\n   ```bash\n   git clone https://github.com/isaac/streamlit-json-tip.git\n   cd streamlit-json-tip\n   ```\n\n2. Set up development environment with uv:\n   ```bash\n   # Create virtual environment and install all dependencies (including dev dependencies)\n   uv sync\n   ```\n\n3. Run the example app:\n   ```bash\n   uv run streamlit run example_app.py\n   ```\n\n## Usage\n\n```python\nimport streamlit as st\nfrom streamlit_json_tip import json_viewer\n\n# Your JSON data\ndata = {\n    \"user\": {\n        \"id\": 123,\n        \"name\": \"John Doe\",\n        \"email\": \"john@example.com\"\n    }\n}\n\n# Help text for specific fields\nhelp_text = {\n    \"user.id\": \"Unique user identifier\",\n    \"user.name\": \"Full display name\",\n    \"user.email\": \"Primary contact email\"\n}\n\n# Tags for categorizing fields\ntags = {\n    \"user.id\": \"ID\",\n    \"user.name\": \"PII\",\n    \"user.email\": \"PII\"\n}\n\n# Display the JSON viewer\nselected = json_viewer(\n    data=data,\n    help_text=help_text,\n    tags=tags,\n    height=400\n)\n\n# Handle field selection\nif selected:\n    st.write(f\"Selected field: {selected['path']}\")\n    st.write(f\"Value: {selected['value']}\")\n    if selected.get('help_text'):\n        st.write(f\"Help: {selected['help_text']}\")\n```\n\n## Advanced Examples\n\n### Dynamic Tooltips\n\nDynamic tooltips allow you to generate contextual help text programmatically based on field paths, values, and the complete data structure:\n\n```python\nimport streamlit as st\nfrom streamlit_json_tip import json_viewer\n\n# Sample data with various types\ndata = {\n    \"user\": {\n        \"name\": \"Alice Johnson\", \n        \"score\": 95,\n        \"email\": \"alice@company.com\",\n        \"role\": \"admin\"\n    },\n    \"metrics\": {\n        \"cpu_usage\": 0.78,\n        \"memory_usage\": 0.65,\n        \"disk_usage\": 0.92\n    },\n    \"items\": [\n        {\"id\": 1, \"status\": \"active\"},\n        {\"id\": 2, \"status\": \"pending\"}\n    ]\n}\n\ndef dynamic_tooltip(path, value, data):\n    \"\"\"Generate contextual tooltips based on field path and value.\"\"\"\n    \n    # Name fields\n    if path.endswith(\".name\"):\n        return f\"\ud83d\udc64 Full name: {len(value)} characters\"\n    \n    # Score fields with conditional icons\n    elif path.endswith(\".score\"):\n        icon = \"\ud83d\udfe2\" if value >= 90 else \"\ud83d\udfe1\" if value >= 70 else \"\ud83d\udd34\"\n        return {\n            \"text\": f\"Performance score: {value}/100\",\n            \"icon\": icon\n        }\n    \n    # Email fields\n    elif path.endswith(\".email\"):\n        domain = value.split(\"@\")[1] if \"@\" in value else \"unknown\"\n        return {\n            \"text\": f\"\ud83d\udce7 Email domain: {domain}\",\n            \"icon\": \"\ud83d\udce7\"\n        }\n    \n    # Usage metrics with warnings\n    elif \"usage\" in path:\n        percentage = f\"{value * 100:.1f}%\"\n        if value > 0.9:\n            return {\n                \"text\": f\"\u26a0\ufe0f High usage: {percentage}\",\n                \"icon\": \"\u26a0\ufe0f\"\n            }\n        elif value > 0.7:\n            return f\"\ud83d\udfe1 Moderate usage: {percentage}\"\n        else:\n            return f\"\ud83d\udfe2 Normal usage: {percentage}\"\n    \n    # Status fields\n    elif path.endswith(\".status\"):\n        status_info = {\n            \"active\": {\"icon\": \"\u2705\", \"desc\": \"Currently active\"},\n            \"pending\": {\"icon\": \"\u23f3\", \"desc\": \"Awaiting approval\"},\n            \"inactive\": {\"icon\": \"\u274c\", \"desc\": \"Not active\"}\n        }\n        info = status_info.get(value, {\"icon\": \"\u2753\", \"desc\": \"Unknown status\"})\n        return {\n            \"text\": f\"{info['desc']}: {value}\",\n            \"icon\": info[\"icon\"]\n        }\n    \n    # Role-based tooltips\n    elif path.endswith(\".role\"):\n        role_descriptions = {\n            \"admin\": \"\ud83d\udc51 Full system access\",\n            \"user\": \"\ud83d\udc64 Standard user access\", \n            \"guest\": \"\ud83d\udc41\ufe0f Read-only access\"\n        }\n        return role_descriptions.get(value, f\"Role: {value}\")\n    \n    return None\n\n# Display with dynamic tooltips\njson_viewer(\n    data=data,\n    dynamic_tooltips=dynamic_tooltip,\n    height=500\n)\n```\n\n### Custom Tooltip Configuration\n\nConfigure Tippy.js tooltip behavior and appearance:\n\n```python\nimport streamlit as st\nfrom streamlit_json_tip import json_viewer\n\ndata = {\n    \"api\": {\n        \"endpoint\": \"https://api.example.com\",\n        \"version\": \"v2.1\",\n        \"rate_limit\": 1000\n    },\n    \"database\": {\n        \"host\": \"db.example.com\",\n        \"port\": 5432,\n        \"ssl\": True\n    }\n}\n\nhelp_text = {\n    \"api.endpoint\": \"The base URL for API requests\",\n    \"api.version\": \"Current API version - breaking changes in major versions\",\n    \"api.rate_limit\": \"Maximum requests per hour\",\n    \"database.host\": \"Database server hostname\",\n    \"database.port\": \"Database connection port\",\n    \"database.ssl\": \"SSL encryption enabled for secure connections\"\n}\n\n# Custom tooltip configuration\ntooltip_config = {\n    \"placement\": \"right\",           # Position: top, bottom, left, right, auto\n    \"animation\": \"scale\",           # Animation: fade, shift-away, shift-toward, scale, perspective\n    \"delay\": [500, 100],           # [show_delay, hide_delay] in milliseconds\n    \"duration\": [200, 150],        # [show_duration, hide_duration] in milliseconds\n    \"interactive\": True,           # Allow hovering over tooltip content\n    \"maxWidth\": 300,              # Maximum width in pixels\n    \"trigger\": \"mouseenter focus\", # Events: mouseenter, focus, click, etc.\n    \"hideOnClick\": False,         # Keep tooltip open when clicking\n    \"sticky\": True,               # Tooltip follows cursor movement\n    \"arrow\": True,                # Show pointing arrow\n    \"theme\": \"light\"              # Theme: light, dark, or custom\n}\n\njson_viewer(\n    data=data,\n    help_text=help_text,\n    tooltip_config=tooltip_config,\n    tooltip_icon=\"\ud83d\udca1\",  # Custom global icon\n    height=400\n)\n```\n\n### Complex Data with Tags and Icons\n\nHandle complex nested structures with comprehensive tooltips:\n\n```python\nimport streamlit as st\nfrom streamlit_json_tip import json_viewer\n\n# Complex nested data structure\ndata = {\n    \"users\": [\n        {\n            \"id\": 1,\n            \"profile\": {\n                \"name\": \"John Doe\",\n                \"email\": \"john@company.com\", \n                \"ssn\": \"***-**-1234\",\n                \"department\": \"Engineering\"\n            },\n            \"permissions\": [\"read\", \"write\", \"admin\"],\n            \"last_login\": \"2024-01-15T10:30:00Z\",\n            \"settings\": {\n                \"theme\": \"dark\",\n                \"notifications\": True,\n                \"api_key\": \"sk-abc123...xyz789\"\n            }\n        }\n    ],\n    \"system\": {\n        \"version\": \"2.1.0\",\n        \"environment\": \"production\",\n        \"uptime\": 99.9,\n        \"memory_usage\": 0.78\n    }\n}\n\n# Static help text for specific fields\nhelp_text = {\n    \"users[0].id\": \"Unique user identifier in the system\",\n    \"system.version\": \"Current application version following semantic versioning\",\n    \"system.environment\": \"Deployment environment (dev/staging/production)\"\n}\n\n# Field categorization with tags\ntags = {\n    \"users[0].profile.email\": \"PII\",\n    \"users[0].profile.ssn\": \"SENSITIVE\", \n    \"users[0].profile.name\": \"PII\",\n    \"users[0].settings.api_key\": \"SECRET\",\n    \"system.environment\": \"CONFIG\",\n    \"system.version\": \"INFO\"\n}\n\n# Advanced dynamic tooltips with context awareness\ndef advanced_tooltips(path, value, data):\n    # Get user context for personalized tips\n    if \"users[0]\" in path:\n        user_name = data[\"users\"][0][\"profile\"][\"name\"]\n        \n        if path.endswith(\".permissions\"):\n            perm_count = len(value)\n            return {\n                \"text\": f\"\ud83d\udd10 {user_name} has {perm_count} permission(s): {', '.join(value)}\",\n                \"icon\": \"\ud83d\udd10\"\n            }\n        \n        elif path.endswith(\".last_login\"):\n            return {\n                \"text\": f\"\ud83d\udd52 {user_name}'s last activity: {value}\",\n                \"icon\": \"\ud83d\udd52\"\n            }\n        \n        elif path.endswith(\".department\"):\n            dept_info = {\n                \"Engineering\": \"\ud83d\udc68\u200d\ud83d\udcbb Technical development team\",\n                \"Sales\": \"\ud83d\udcbc Revenue generation team\",\n                \"Marketing\": \"\ud83d\udce2 Brand and promotion team\"\n            }\n            return dept_info.get(value, f\"Department: {value}\")\n    \n    # System metrics with thresholds\n    elif path.startswith(\"system.\"):\n        if path.endswith(\".uptime\"):\n            if value >= 99.9:\n                return {\"text\": f\"\ud83d\udfe2 Excellent uptime: {value}%\", \"icon\": \"\ud83d\udfe2\"}\n            elif value >= 99.0:\n                return {\"text\": f\"\ud83d\udfe1 Good uptime: {value}%\", \"icon\": \"\ud83d\udfe1\"}\n            else:\n                return {\"text\": f\"\ud83d\udd34 Poor uptime: {value}%\", \"icon\": \"\ud83d\udd34\"}\n        \n        elif path.endswith(\".memory_usage\"):\n            percentage = f\"{value * 100:.1f}%\"\n            if value > 0.9:\n                return {\"text\": f\"\u26a0\ufe0f Critical memory usage: {percentage}\", \"icon\": \"\u26a0\ufe0f\"}\n            elif value > 0.7:\n                return {\"text\": f\"\ud83d\udfe1 High memory usage: {percentage}\", \"icon\": \"\ud83d\udfe1\"}\n            else:\n                return {\"text\": f\"\ud83d\udfe2 Normal memory usage: {percentage}\", \"icon\": \"\ud83d\udfe2\"}\n    \n    # Sensitive data warnings\n    if any(keyword in path for keyword in [\"ssn\", \"api_key\", \"password\"]):\n        return {\n            \"text\": \"\ud83d\udea8 Sensitive data - handle with care\",\n            \"icon\": \"\ud83d\udea8\"\n        }\n    \n    return None\n\n# Advanced tooltip configuration for better UX\nadvanced_config = {\n    \"placement\": \"auto\",     # Auto-position based on available space\n    \"animation\": \"fade\",     # Smooth fade animation\n    \"delay\": [300, 100],    # Quick show, delayed hide\n    \"interactive\": True,     # Allow interaction with tooltip content\n    \"maxWidth\": 400,        # Wider tooltips for more content\n    \"hideOnClick\": False,   # Keep tooltips persistent\n    \"appendTo\": \"parent\"    # Better positioning within container\n}\n\nselected = json_viewer(\n    data=data,\n    help_text=help_text,\n    tags=tags,\n    dynamic_tooltips=advanced_tooltips,\n    tooltip_config=advanced_config,\n    tooltip_icon=\"\u2139\ufe0f\",\n    height=600\n)\n\n# Handle field selection with detailed information\nif selected:\n    st.sidebar.header(\"Field Details\")\n    st.sidebar.json({\n        \"Path\": selected['path'],\n        \"Value\": selected['value'],\n        \"Type\": type(selected['value']).__name__,\n        \"Help\": selected.get('help_text', 'No help available')\n    })\n```\n\n## Parameters\n\n- **data** (dict): The JSON data to display\n- **help_text** (dict, optional): Dictionary mapping field paths to help text\n- **tags** (dict, optional): Dictionary mapping field paths to tags/labels\n- **dynamic_tooltips** (function, optional): Function that takes (field_path, field_value, full_data) and returns tooltip text or dict with text and icon\n- **tooltip_config** (dict, optional): Tippy.js configuration options (see Tooltip Configuration below)\n- **tooltip_icon** (str, optional): Default icon for tooltips (default: \"\u2139\ufe0f\")\n- **height** (int, optional): Height of the component in pixels (default: 400)\n- **key** (str, optional): Unique key for the component\n\n### Tooltip Configuration Options\n\nThe `tooltip_config` parameter accepts any valid [Tippy.js options](https://atomiks.github.io/tippyjs/v6/all-props/):\n\n| Option | Type | Default | Description |\n|--------|------|---------|-------------|\n| `placement` | str | \"top\" | Tooltip position: \"top\", \"bottom\", \"left\", \"right\", \"auto\" |\n| `animation` | str | \"fade\" | Animation type: \"fade\", \"shift-away\", \"shift-toward\", \"scale\", \"perspective\" |\n| `delay` | int/list | 0 | Show delay in ms, or [show_delay, hide_delay] |\n| `duration` | int/list | [300, 250] | Animation duration in ms, or [show_duration, hide_duration] |\n| `interactive` | bool | False | Allow hovering over tooltip content |\n| `maxWidth` | int | 350 | Maximum width in pixels |\n| `trigger` | str | \"mouseenter focus\" | Events that trigger tooltip |\n| `hideOnClick` | bool | True | Hide tooltip when clicking |\n| `sticky` | bool | False | Tooltip follows cursor movement |\n| `arrow` | bool | True | Show pointing arrow |\n| `theme` | str | \"light\" | Tooltip theme |\n\n## Field Path Format\n\nField paths use dot notation for objects and bracket notation for arrays:\n- `\"user.name\"` - Object field\n- `\"items[0].title\"` - Array item field\n- `\"settings.preferences.theme\"` - Nested object field\n\n## Development\n\n### Frontend Development\n\n1. Set up the development environment (see Development Setup above)\n\n2. Navigate to the frontend directory:\n   ```bash\n   cd streamlit_json_tip/frontend\n   ```\n\n3. Install frontend dependencies:\n   ```bash\n   npm install\n   ```\n\n4. Start development server:\n   ```bash\n   npm start\n   ```\n\n5. In your Python code, set `_RELEASE = False` in `__init__.py`\n\n6. Run the example app in another terminal:\n   ```bash\n   uv run streamlit run example_app.py\n   ```\n\n### Running Tests\n\n#### Python Tests\n```bash\n# Run all Python unit tests with coverage\nuv run pytest\n\n# Run tests with verbose output\nuv run pytest -v\n\n# Generate HTML coverage report\nuv run pytest --cov-report=html\n```\n\n#### Frontend Tests\n```bash\ncd streamlit_json_tip/frontend\n\n# Run Jest tests once\nnpm test -- --ci --watchAll=false\n\n# Run tests with coverage\nnpm test -- --coverage --ci --watchAll=false\n\n# Run tests in watch mode (for development)\nnpm test\n```\n\n#### Run All Tests\nBoth Python and frontend tests run automatically in GitHub Actions on every push and pull request.\n\n### Building for Production\n\n1. Build the frontend:\n   ```bash\n   cd streamlit_json_tip/frontend\n   npm run build\n   ```\n\n2. Set `_RELEASE = True` in `__init__.py`\n\n3. Build the Python package:\n   ```bash\n   uv run python -m build\n   ```\n\n4. Upload to PyPI:\n   ```bash\n   uv run python -m twine upload dist/*\n   ```\n\n### Build Scripts\n\nThe project includes convenient uv scripts for common development tasks:\n\n#### Frontend Development\n```bash\ntask build-frontend\n```\n\n#### Package Building\n```bash\nuv run clean                 # Clean build artifacts\nuv run build                 # Clean + build Python package\nuv run build-check           # Build + validate package with twine\n```\n\n#### Publishing\n```bash\ntask release-test          # Build + upload to TestPyPI\ntask release               # Build + upload to PyPI\n```\n\nThis will build the frontend, package the Python distribution, validate it, and upload to PyPI.\n\n## Releasing a New Version\n\nThis project uses automated GitHub Actions for releases. Follow these steps to release a new version:\n\n### 1. Update Version and Changelog\n\n1. **Update the version** in `pyproject.toml`:\n   ```toml\n   version = \"0.2.5\"  # Increment according to semver\n   ```\n\n2. **Add changelog entry** in `CHANGELOG.md`:\n   ```markdown\n   ## [0.2.5] - 2025-01-26\n\n   ### \u2728 Added\n   - New feature description\n\n   ### \ud83d\udd27 Fixed  \n   - Bug fix description\n   ```\n\n3. **Commit your changes**:\n   ```bash\n   git add pyproject.toml CHANGELOG.md\n   git commit -m \"Bump version to 0.2.5\"\n   git push origin main\n   ```\n\n### 2. Create and Push Release Tag\n\n```bash\ngit tag v0.2.5\ngit push origin v0.2.5\n```\n\n### 3. Automated Release Process\n\nOnce you push the tag, GitHub Actions will automatically:\n\n- \u2705 Build the frontend (React components)\n- \u2705 Build the Python package (wheel + source distribution)\n- \u2705 Extract changelog section for this version\n- \u2705 Create GitHub Release with changelog as release notes\n- \u2705 Upload distribution files as release assets\n- \u2705 Publish to PyPI\n\n### 4. Monitor the Release\n\n1. **Check GitHub Actions**: Go to the Actions tab to monitor the release workflow\n2. **Verify GitHub Release**: Check that the release was created with proper changelog\n3. **Verify PyPI**: Confirm the new version appears on PyPI\n\n### Setup Requirements (One-time)\n\nTo use automated releases, you need:\n\n1. **PyPI API Token**: Add `PYPI_API_TOKEN` to your repository secrets\n   - Go to: Repository \u2192 Settings \u2192 Secrets and variables \u2192 Actions\n   - Add your PyPI token as `PYPI_API_TOKEN`\n\n### Manual Release (Alternative)\n\nIf you prefer manual releases or need to troubleshoot:\n\n```bash\n# Build everything\ntask build\n\n# Upload to PyPI manually\nexport TWINE_PASSWORD=your_pypi_token_here\npython -m twine upload --username __token__ dist/*\n```\n\n## License\n\nMIT License\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Home-Page", "License-File", "Requires-Python"], "home_page": "https://github.com/yourusername/streamlit-json-tip", "keywords": "streamlit, json, viewer, tooltip, component, interactive", "license": "MIT", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "streamlit-json-tip", "package_url": "https://pypi.org/project/streamlit-json-tip/", "platform": null, "project_url": "https://pypi.org/project/streamlit-json-tip/", "project_urls": {"Bug Tracker": "https://github.com/isaac/streamlit-json-tip/issues", "Documentation": "https://github.com/isaac/streamlit-json-tip#readme", "Homepage": "https://github.com/isaac/streamlit-json-tip", "Repository": "https://github.com/isaac/streamlit-json-tip"}, "provides_extra": null, "release_url": "https://pypi.org/project/streamlit-json-tip/0.2.5/", "requires_dist": ["streamlit>=1.0.0"], "requires_python": ">=3.6", "summary": "A Streamlit custom component for viewing JSON with interactive tooltips and tags", "version": "0.2.5", "yanked": false, "yanked_reason": null}, "last_serial": 30395166, "urls": [{"comment_text": null, "digests": {"blake2b_256": "0218f692b775333d1a33952aabe76b2a75d3666fdaf87612f4040dbc35a84944", "md5": "0ccbe03e84349009355ce1d6187ef6d0", "sha256": "06a9d5daa362eb6170ec5c531bab9163ecaab4926672af2c985a1aeb96796614"}, "downloads": -1, "filename": "streamlit_json_tip-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "0ccbe03e84349009355ce1d6187ef6d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 663142, "upload_time": "2025-07-29T02:52:26", "upload_time_iso_8601": "2025-07-29T02:52:26.973196Z", "url": "https://files.pythonhosted.org/packages/02/18/f692b775333d1a33952aabe76b2a75d3666fdaf87612f4040dbc35a84944/streamlit_json_tip-0.2.5-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "4f9c25d559ad4d68bc1471a830187cd5e2c6bf8a46cf09d33af17ce7ff7eccab", "md5": "d161ede14ad25997617d4cdcb66ead8e", "sha256": "7cc795e7ca1156c9b110af696333d552c2c267381d1f6a7c30853bdcfe66df44"}, "downloads": -1, "filename": "streamlit_json_tip-0.2.5.tar.gz", "has_sig": false, "md5_digest": "d161ede14ad25997617d4cdcb66ead8e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 936120, "upload_time": "2025-07-29T02:52:28", "upload_time_iso_8601": "2025-07-29T02:52:28.450060Z", "url": "https://files.pythonhosted.org/packages/4f/9c/25d559ad4d68bc1471a830187cd5e2c6bf8a46cf09d33af17ce7ff7eccab/streamlit_json_tip-0.2.5.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:52:18 GMT", "package": "project-logger", "version": "1.2.1", "json": {"info": {"author": "Funnel", "author_email": "sunn61676@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Project Logger\r\n\r\nA security logging package for Python projects that provides host-based security checks and logging capabilities.\r\n\r\n## Features\r\n\r\n- Host-based security validation\r\n- Database logging\r\n- Activation system\r\n- Cross-platform support\r\n\r\n## Installation\r\n\r\n```bash\r\npip install project_logger\r\n```\r\n\r\n## Usage\r\n\r\n```python\r\nfrom project_logger.security import perform_security_check\r\n\r\n# Perform security check\r\nperform_security_check()\r\n```\r\n\r\n## Configuration\r\n\r\nSet environment variables for database connection:\r\n- `DB_HOST`\r\n- `DB_USER` \r\n- `DB_PASSWORD`\r\n- `DB_NAME`\r\n- `DB_PORT`\r\n\r\n## License\r\n\r\nMIT\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "project-logger", "package_url": "https://pypi.org/project/project-logger/", "platform": null, "project_url": "https://pypi.org/project/project-logger/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/project-logger/1.2.1/", "requires_dist": ["pymysql", "dbutils"], "requires_python": ">=3.6", "summary": "A security logging package for Python projects", "version": "1.2.1", "yanked": false, "yanked_reason": null}, "last_serial": 30395162, "urls": [{"comment_text": null, "digests": {"blake2b_256": "9b96d4493b429e196b0b7c94718d193e62b0efe9accf4647656418702beebc18", "md5": "0b04d7b3eeb3d36e65fa0d6efc3e577d", "sha256": "a979cb108c0bca2ae4a56f0a6d1725f353409a4926f458152ece0743914da093"}, "downloads": -1, "filename": "project_logger-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0b04d7b3eeb3d36e65fa0d6efc3e577d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 740286, "upload_time": "2025-07-29T02:52:18", "upload_time_iso_8601": "2025-07-29T02:52:18.788826Z", "url": "https://files.pythonhosted.org/packages/9b/96/d4493b429e196b0b7c94718d193e62b0efe9accf4647656418702beebc18/project_logger-1.2.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "22b9823b3a09905bd88107dd6273bd635785c19f116a8777fae0a79be4c4d1d3", "md5": "ce7b03dad9c3f92319430c21d23a32ea", "sha256": "33d001524b5cb19adf742c23e022796f7913f9881daf29e451c85d1aa933098b"}, "downloads": -1, "filename": "project_logger-1.2.1.tar.gz", "has_sig": false, "md5_digest": "ce7b03dad9c3f92319430c21d23a32ea", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 312802, "upload_time": "2025-07-29T02:52:20", "upload_time_iso_8601": "2025-07-29T02:52:20.300363Z", "url": "https://files.pythonhosted.org/packages/22/b9/823b3a09905bd88107dd6273bd635785c19f116a8777fae0a79be4c4d1d3/project_logger-1.2.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:51:26 GMT", "package": "terraformat", "version": "0.1.5", "json": {"info": {"author": "Henry Upton-Birdsall", "author_email": "henryupton@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "# terraformat\n\nA wrapper for the Terraform CLI that provides a formatted plan summary.\n\n## Overview\n\n**terraformat** is a command-line tool designed to improve the readability of `terraform plan` outputs. It runs your Terraform plan and summarizes the planned resource changes (create, update, destroy) in a color-coded, tabular format. This helps teams more quickly and safely review infrastructure changes before applying them.\n\n## Features\n\n- Runs any `terraform` command, but enhances `terraform plan` with a summary table\n- Color-coded output for quick identification of create (green), update (yellow), and destroy (red) actions\n- Parses complex Terraform resource addresses, including those in modules\n- Integrates seamlessly into existing Terraform workflows\n\n## Installation\n\n```bash\npip install .\npip install git+https://github.com/henryupton/terraformat.git\n```\n\n## Requirements\n* Python 3.7+\n* Terraform installed and available in your PATH\n\n### Python dependencies (installed automatically):\n* click\n* tabulate\n\n## Usage\n\nAfter installation, you can use terraformat as a drop-in replacement for terraform. All commands are passed through to Terraform, but plan will be summarized:\n\n```bash\nterraformat plan [ARGS...]\n```\n\n#### Example output\n```bash\n\ud83d\ude80 Running 'terraform plan'...\n--- Original Terraform Output ---\n[standard terraform plan output here]\n\n==================================================\n\ud83d\udcca Terraformat Summary\n==================================================\n+----------------+---------+---------+----------+\n| Resource Type  | Create  | Update  | Destroy  |\n+================+=========+=========+==========+\n| aws_instance   |   1     |   0     |    1     |\n| local_file     |   1     |   0     |    0     |\n| random_pet     |   0     |   1     |    0     |\n+----------------+---------+---------+----------+\n| Total          |   2     |   1     |    1     |\n+----------------+---------+---------+----------+\n```\n\nIf you run other Terraform commands, they\u2019re just passed through unchanged:\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "License-File", "Provides-Extra", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/henryupton/terraformat", "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "terraformat", "package_url": "https://pypi.org/project/terraformat/", "platform": null, "project_url": "https://pypi.org/project/terraformat/", "project_urls": {"Homepage": "https://github.com/henryupton/terraformat"}, "provides_extra": ["test"], "release_url": "https://pypi.org/project/terraformat/0.1.5/", "requires_dist": ["click", "tabulate", "pytest; extra == \"test\""], "requires_python": ">=3.7", "summary": "A wrapper for the Terraform CLI that provides a formatted plan summary.", "version": "0.1.5", "yanked": false, "yanked_reason": null}, "last_serial": 30395176, "urls": [{"comment_text": null, "digests": {"blake2b_256": "3bfa5bca20f193deff759afadbc734c4d55e3dd51b48d9a4fefef2d591d37b56", "md5": "65912c8579b31b433e10be54b77ae0bd", "sha256": "d598f80ca351d0b381efb69aa2865e002e500b6d81b5bfc84a77fac1378872bf"}, "downloads": -1, "filename": "terraformat-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "65912c8579b31b433e10be54b77ae0bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6756, "upload_time": "2025-07-29T02:51:26", "upload_time_iso_8601": "2025-07-29T02:51:26.236421Z", "url": "https://files.pythonhosted.org/packages/3b/fa/5bca20f193deff759afadbc734c4d55e3dd51b48d9a4fefef2d591d37b56/terraformat-0.1.5-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "87aec8286cbd50c56e70a07602ccc634123a31477f38620191f6f3d2f9dd5045", "md5": "2c7ed885e7940f1bbf210144eb801268", "sha256": "36ecb4c4e1fc675ef8379ab46419fa7ce517e4562266daba93be14dc314545b9"}, "downloads": -1, "filename": "terraformat-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2c7ed885e7940f1bbf210144eb801268", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7478, "upload_time": "2025-07-29T02:51:27", "upload_time_iso_8601": "2025-07-29T02:51:27.464312Z", "url": "https://files.pythonhosted.org/packages/87/ae/c8286cbd50c56e70a07602ccc634123a31477f38620191f6f3d2f9dd5045/terraformat-0.1.5.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:50:59 GMT", "package": "pokermgr", "version": "3.4.0", "json": {"info": {"author": "Bhadresh Dahanuwala", "author_email": "bhadresh.dahanuwala@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Topic :: Games/Entertainment", "Topic :: Software Development :: Libraries :: Python Modules", "Typing :: Typed"], "description": "# Poker Manager\n\nA comprehensive Python library for managing poker games, including Texas Hold'em variants with support for multi-board play, pot management, and hand evaluation.\n\n## Features\n\n### Game Variants\n- **Texas Hold'em**: Standard no-limit Texas Hold'em with small/big blinds\n- **Bomb Pot**: Variant where all players are automatically all-in pre-flop\n- **Multi-board Support**: Play with multiple boards simultaneously\n\n### Core Components\n\n#### Table Management\n- Manage players and seating\n- Handle player rotations and dealer button\n- Support for table limits and configurations\n\n#### Player System\n- Track player status (active, folded, all-in, sitting out)\n- Manage chip stacks and bankroll\n- Track hole cards and best possible hands\n- Calculate hand equities\n\n#### Board Management\n- Handle community cards (flop, turn, river)\n- Support for multiple concurrent boards\n- Board texture analysis\n\n#### Pot Management\n- Track main and side pots\n- Handle all-in situations\n- Support for multi-board pot splitting\n- Track winners per board\n\n#### Hand Evaluation\n- Evaluate hand strengths\n- Calculate winning hands\n- Support for various poker hand rankings\n\n## Installation\n\n### From GitHub Packages (Private Repository)\n\n```bash\n# Using Personal Access Token\npip install pokermgr --index-url https://USERNAME:TOKEN@pypi.pkg.github.com/bhadresh-dahanuwala/simple/\n```\n\nSee [INSTALL.md](INSTALL.md) for detailed installation instructions.\n\n### For Development\n\n```bash\ngit clone https://github.com/bhadresh-dahanuwala/pokermgr.git\ncd pokermgr\npip install -e .\n```\n\n## Quick Start\n\nThis section provides a basic overview of how to set up and run a poker game using the Poker Manager library.\n\n### 1. Setting up Players and Table\n\nFirst, you need to create players and a table for them to play on.\n\n```python\nfrom collections import deque\nfrom pokermgr.player import TablePlayer, PlayerAction, PlayerStatus\nfrom pokermgr.table import Table\n\n# Create individual players\nplayer1 = TablePlayer(name=\"Alice\", initial_stack=1000)\nplayer2 = TablePlayer(name=\"Bob\", initial_stack=1000)\nplayer3 = TablePlayer(name=\"Charlie\", initial_stack=1000)\n\n# Add players to a deque (order matters for seating and turns)\nplayers_at_table = deque([player1, player2, player3])\n\n# Create a table\n# The table code can be any unique string identifier.\n# max_players defaults to 9 if not specified.\ntable = Table(code=\"PokerNight01\", players=players_at_table, max_players=6)\n\nprint(f\"Table '{table.code}' created with {len(table.players)} players.\")\nfor p in table.players:\n    print(f\"- {p.name} (Stack: {p.stack})\")\n```\n\n### 2. Initializing a Game (Texas Hold'em Regular)\n\nNow, let's set up a standard Texas Hold'em game with blinds.\n\n```python\nfrom pokermgr.game import GameTexasHoldemRegular, GameStreet\n\n# Create a Texas Hold'em game\n# 'key' is a unique identifier for the game instance.\n# Small blind and big blind amounts are specified here.\ngame_th_regular = GameTexasHoldemRegular(\n    key=1,  # Game ID\n    table=table,\n    small_blind=5,\n    big_blind=10,\n    initial_board_count=1 # Default is 1, can be more for multi-board games\n)\n\nprint(f\"Game {game_th_regular.key} (Texas Hold'em Regular) initialized.\")\nprint(f\"Small Blind: {game_th_regular.small_blind}, Big Blind: {game_th_regular.big_blind}\")\nprint(f\"Current game street: {game_th_regular.game_street.name}\")\nprint(f\"Number of boards: {game_th_regular.board_count}\")\n```\n\n### 3. Dealing Cards and Progressing Streets\n\nHere's how to deal cards through the different streets of a hand. In a real game, betting rounds would occur between these steps.\n\n```python\nfrom cardspy.cards import SUITS, RANKS, CARDS\nfrom cardspy.card import card_key_to_repr, cards_to_str_pretty\n\n# --- Pre-flop: Deal Hole Cards ---\n# The _core_deal_hole_cards method is called internally by deal_hole_cards.\n# For Texas Hold'em, each player gets 2 hole cards.\ngame_th_regular.deal_hole_cards() \nprint(f\"\\n--- {game_th_regular.game_street.name} --- (Hole cards dealt)\")\nfor player in game_th_regular.table.players:\n    # Hole cards are stored as bitmasks in player.hole_cards.key\n    # We use card_key_to_repr for a human-readable string\n    hole_cards_str = cards_to_str_pretty(player.hole_cards.key)\n    print(f\"{player.name} has hole cards: {hole_cards_str}\")\n\n# --- Flop: Deal 3 Community Cards ---\n# Advance the game street and deal the flop\n# game_th_regular.game_street = GameStreet.FLOP # This is handled internally by deal_flop\ngame_th_regular.deal_flop()\nprint(f\"\\n--- {game_th_regular.game_street.name} --- (3 community cards)\")\n# Board cards are stored as a bitmask in game.boards[0].cards\nflop_cards_str = cards_to_str_pretty(game_th_regular.boards[0].cards)\nprint(f\"Board 0: {flop_cards_str}\")\n\n# --- Turn: Deal 1 Community Card ---\n# game_th_regular.game_street = GameStreet.TURN # Handled by deal_turn\ngame_th_regular.deal_turn()\nprint(f\"\\n--- {game_th_regular.game_street.name} --- (1 community card)\")\nturn_cards_str = cards_to_str_pretty(game_th_regular.boards[0].cards)\nprint(f\"Board 0: {turn_cards_str}\")\n\n# --- River: Deal 1 Community Card ---\n# game_th_regular.game_street = GameStreet.RIVER # Handled by deal_river\ngame_th_regular.deal_river()\nprint(f\"\\n--- {game_th_regular.game_street.name} --- (1 community card)\")\nriver_cards_str = cards_to_str_pretty(game_th_regular.boards[0].cards)\nprint(f\"Board 0: {river_cards_str}\")\n\n# At this point, all cards are dealt. The next step would be showdown and pot distribution.\n# Note: The `showdown()` method is not yet fully implemented in the provided snippets.\n# print(\"\\n--- Showdown ---\")\n# winners = game_th_regular.showdown() # Placeholder for actual showdown logic\n```\n\n## Advanced Usage\n\n### 1. Multi-Board Games\n\nYou can play games with multiple boards simultaneously. This is common in some poker variants where the pot is split among winners on different boards.\n\n```python\nfrom pokermgr.game import Game # Base Game class for multi-board\n\n# Re-use the table and players from the previous example\n# Create a game with 3 boards\ngame_multi_board = Game(\n    key=2, \n    table=table, \n    initial_board_count=3\n)\n\nprint(f\"\\nGame {game_multi_board.key} (Multi-Board) initialized with {game_multi_board.board_count} boards.\")\n\n# Deal hole cards (specific to game type, e.g., TexasHoldem would deal 2)\n# For a generic Game, you might need to implement _core_deal_hole_cards\n# or use a game type that defines it, like GameTexasHoldem.\n# Let's assume GameTexasHoldem for dealing hole cards:\nclass MyTexasHoldemMulti(GameTexasHoldemRegular):\n    pass # Inherits _core_deal_hole_cards\n\ngame_multi_board_th = MyTexasHoldemMulti(\n    key=3, \n    table=table, \n    small_blind=0, # Blinds might not apply or be handled differently\n    big_blind=0,\n    initial_board_count=3\n)\n\ngame_multi_board_th.deal_hole_cards()\nprint(f\"Hole cards dealt for multi-board game.\")\nfor player in game_multi_board_th.table.players:\n    print(f\"{player.name}: {cards_to_str_pretty(player.hole_cards.key)}\")\n\n# Deal community cards for each board\n# game_multi_board_th.game_street = GameStreet.FLOP # Handled by deal_flop\ngame_multi_board_th.deal_flop()\n# game_multi_board_th.game_street = GameStreet.TURN # Handled by deal_turn\ngame_multi_board_th.deal_turn()\n# game_multi_board_th.game_street = GameStreet.RIVER # Handled by deal_river\ngame_multi_board_th.deal_river()\n\nprint(\"\\nCommunity cards dealt for all boards:\")\nfor i, board_instance in enumerate(game_multi_board_th.boards):\n    board_cards_str = cards_to_str_pretty(board_instance.cards)\n    print(f\"Board {i}: {board_cards_str}\")\n\n# You can also add boards dynamically during a game\n# game_multi_board_th.add_board()\n# print(f\"\\nAdded a new board. Total boards: {game_multi_board_th.board_count}\")\n# The new board will copy the cards from the most recent existing board.\n```\n\n### 2. Bomb Pot Games (Texas Hold'em Variant)\n\nIn a Bomb Pot, all players are typically forced all-in pre-flop for a fixed amount.\n\n```python\nfrom pokermgr.game import GameTexasHoldemBomb\n\n# Re-use the table and players\n# Create a Bomb Pot game where each player contributes 100 to the pot pre-flop.\ngame_bomb_pot = GameTexasHoldemBomb(\n    key=4,\n    table=table,\n    blind=100,  # This is the mandatory amount each player posts\n    initial_board_count=1\n)\n\nprint(f\"\\nGame {game_bomb_pot.key} (Bomb Pot) initialized.\")\nprint(f\"Mandatory blind: {game_bomb_pot.blind}\")\n# In a Bomb Pot, the pot is immediately built from all players' blinds.\n# The first pot (self.pots[0]) is initialized with this amount.\nprint(f\"Initial pot size: {game_bomb_pot.pots[0].stack}\") \n\n# Dealing proceeds as normal, but typically without betting rounds pre-flop.\n# Hole cards are dealt\ngame_bomb_pot.deal_hole_cards()\nprint(\"Hole cards dealt for Bomb Pot game.\")\n\n# Community cards are dealt\n# game_bomb_pot.game_street = GameStreet.FLOP # Handled by deal_flop\ngame_bomb_pot.deal_flop()\n# game_bomb_pot.game_street = GameStreet.TURN # Handled by deal_turn\ngame_bomb_pot.deal_turn()\n# game_bomb_pot.game_street = GameStreet.RIVER # Handled by deal_river\ngame_bomb_pot.deal_river()\n\nprint(\"Community cards for Bomb Pot game:\")\nbomb_pot_board_str = cards_to_str_pretty(game_bomb_pot.boards[0].cards)\nprint(f\"Board 0: {bomb_pot_board_str}\")\n```\n\n### 3. Custom Hand Evaluation\n\nThe `Hand` class (from `pokermgr.hand`) can be used to evaluate poker hands represented by bitmasks. The `cardspy` library is used for card representations.\n\n```python\nfrom pokermgr.hand import Hand\nfrom cardspy.deck import cards_to_mask\nfrom cardspy.card import extract_cards\nfrom pokermgr.funcs import get_cards_properties\n\n# Example: Evaluate a specific hand (e.g., a full house)\n# Use string codes for cards: 'As' = Ace of Spades, 'Kd' = King of Diamonds, etc.\n# The order of cards does not matter for evaluation.\ncard_mask = cards_to_mask(['As', 'Ad', 'Ah', 'Kc', 'Kd'])\nhand = Hand(card_mask)\n\n# Display the hand in a human-readable way\nprint(\"Hand cards:\", extract_cards(card_mask))\nprint(\"Hand type:\", hand.type_name)\nprint(\"Hand weight:\", hand.weight)\nprint(\"Hand properties (bitmask):\", get_cards_properties(hand.cards))\n\n# Example: Straight Flush (Royal Flush in hearts)\nsf_mask = cards_to_mask(['Th', 'Jh', 'Qh', 'Kh', 'Ah'])\nsf_hand = Hand(sf_mask)\nprint(\"\\nStraight Flush cards:\", extract_cards(sf_mask))\nprint(\"Hand type:\", sf_hand.type_name)\nprint(\"Hand weight:\", sf_hand.weight)\n# You can also check for draws if relevant\n# print(\"Draws:\", hand.draws)\n\n\n## Project Structure\n\n```\npokermgr/\n\u251c\u2500\u2500 __init__.py\n\u251c\u2500\u2500 board.py          # Board and board texture management\n\u251c\u2500\u2500 evaluate.py       # Hand evaluation logic\n\u251c\u2500\u2500 funcs.py          # Utility functions\n\u251c\u2500\u2500 game.py           # Core game logic and variants\n\u251c\u2500\u2500 hand.py           # Hand representation\n\u251c\u2500\u2500 hole_cards.py     # Hole cards management\n\u251c\u2500\u2500 player.py         # Player classes and logic\n\u251c\u2500\u2500 pot.py            # Pot management\n\u2514\u2500\u2500 table.py          # Table management\n\ntests/               # Comprehensive test suite\n```\n\n## Testing\n\nRun the test suite with pytest:\n\n```bash\npytest tests/\n```\n\n## License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "poker, texas-holdem, omaha, card-games, game-evaluation", "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "pokermgr", "package_url": "https://pypi.org/project/pokermgr/", "platform": null, "project_url": "https://pypi.org/project/pokermgr/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/pokermgr/3.4.0/", "requires_dist": ["cardspy<3.0.0,>=2.0.0", "pytest>=8.3.5; extra == \"dev\"", "mypy>=1.16.0; extra == \"dev\"", "pylint>=3.3.7; extra == \"dev\"", "flake8>=7.2.0; extra == \"dev\""], "requires_python": ">=3.10", "summary": "Comprehensive Python library for managing poker games", "version": "3.4.0", "yanked": false, "yanked_reason": null}, "last_serial": 30395150, "urls": [{"comment_text": "", "digests": {"blake2b_256": "2e1647322050e352e2df41dea0ba2758abe6ea62bf1f69060145777e51d202f7", "md5": "0b3c16486c218fd7d3a1b2ef42aed2c6", "sha256": "3a0d78938b02a8a361af88b92b0af40cf191dfe9da361888d0c9e56f5c6c273d"}, "downloads": -1, "filename": "pokermgr-3.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0b3c16486c218fd7d3a1b2ef42aed2c6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 76258, "upload_time": "2025-07-29T02:50:59", "upload_time_iso_8601": "2025-07-29T02:50:59.213840Z", "url": "https://files.pythonhosted.org/packages/2e/16/47322050e352e2df41dea0ba2758abe6ea62bf1f69060145777e51d202f7/pokermgr-3.4.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "60b75bd6e3ba0238c244c6447cc64adf914a2ebc203c4b36627f9e8a7b1e6335", "md5": "a4ed0ffe3ee2e999db5b0a82c1bc5e42", "sha256": "0e59404e14df9785318d494ad781f2ebd7f6c3b9d826889c03e128372f247fea"}, "downloads": -1, "filename": "pokermgr-3.4.0.tar.gz", "has_sig": false, "md5_digest": "a4ed0ffe3ee2e999db5b0a82c1bc5e42", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 62371, "upload_time": "2025-07-29T02:51:00", "upload_time_iso_8601": "2025-07-29T02:51:00.498987Z", "url": "https://files.pythonhosted.org/packages/60/b7/5bd6e3ba0238c244c6447cc64adf914a2ebc203c4b36627f9e8a7b1e6335/pokermgr-3.4.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:50:46 GMT", "package": "odoo-addon-website-sale-product-matrix", "version": "17.0.1.0.0.4", "json": {"info": {"author": "Tecnativa, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 17.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n===========================\nProduct matrix in eCommerce\n===========================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:1426c2b2c80e264db2a03cc52a61ee2690d9ed5570f6d239213331f2c3e218c3\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fe--commerce-lightgray.png?logo=github\n    :target: https://github.com/OCA/e-commerce/tree/17.0/website_sale_product_matrix\n    :alt: OCA/e-commerce\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/e-commerce-17-0/e-commerce-17-0-website_sale_product_matrix\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/e-commerce&target_branch=17.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nWith this module we'll be able to use the product matrix in the\neCommerce so our customers can easily add products to their carts.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nConfiguration\n=============\n\nTo configure this module, you need to:\n\n- Go to a product with variants or create one.\n- In the *Attributes and variants* tab, *Sales Variant Selection*\n  section, select **Order grid entry**.\n\nUsage\n=====\n\nTo use this module, you need to:\n\n1. Go to the configured product web page.\n2. You'll se the matrix where you can add units to the cart.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/e-commerce/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/e-commerce/issues/new?body=module:%20website_sale_product_matrix%0Aversion:%2017.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* Tecnativa\n\nContributors\n------------\n\n- Tecnativa (https://www.tecnativa.com)\n\n  - David Vidal\n  - Pilar Vargas\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-pilarvargas-tecnativa| image:: https://github.com/pilarvargas-tecnativa.png?size=40px\n    :target: https://github.com/pilarvargas-tecnativa\n    :alt: pilarvargas-tecnativa\n\nCurrent `maintainer <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-pilarvargas-tecnativa| \n\nThis module is part of the `OCA/e-commerce <https://github.com/OCA/e-commerce/tree/17.0/website_sale_product_matrix>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/e-commerce", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-website-sale-product-matrix", "package_url": "https://pypi.org/project/odoo-addon-website-sale-product-matrix/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-website-sale-product-matrix/", "project_urls": {"Homepage": "https://github.com/OCA/e-commerce"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-website-sale-product-matrix/17.0.1.0.0.4/", "requires_dist": ["odoo<17.1dev,>=17.0a"], "requires_python": ">=3.10", "summary": "Product matrix in eCommerce", "version": "17.0.1.0.0.4", "yanked": false, "yanked_reason": null}, "last_serial": 30395147, "urls": [{"comment_text": "", "digests": {"blake2b_256": "779436a10b7e4c591443c7da443c135032804538ee18ba22f1eb03158f18f61c", "md5": "ec1ccd56bec48dd97754923497227333", "sha256": "e1e7653b516d071fbb37062dbabd4c9641c05982e1cd84d2d6a18ec257e0b361"}, "downloads": -1, "filename": "odoo_addon_website_sale_product_matrix-17.0.1.0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ec1ccd56bec48dd97754923497227333", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 29470, "upload_time": "2025-07-29T02:50:46", "upload_time_iso_8601": "2025-07-29T02:50:46.983085Z", "url": "https://files.pythonhosted.org/packages/77/94/36a10b7e4c591443c7da443c135032804538ee18ba22f1eb03158f18f61c/odoo_addon_website_sale_product_matrix-17.0.1.0.0.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:50:22 GMT", "package": "cuenca-validations", "version": "2.1.14.dev100", "json": {"info": {"author": "Cuenca", "author_email": "dev@cuenca.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Programming Language :: Python :: 3.9"], "description": "# Cuenca - validations\n\n[![test](https://github.com/cuenca-mx/cuenca-validations/workflows/test/badge.svg)](https://github.com/cuenca-mx/cuenca-validations/actions?query=workflow%3Atest)\n[![codecov](https://codecov.io/gh/cuenca-mx/cuenca-validations/branch/master/graph/badge.svg)](https://codecov.io/gh/cuenca-mx/cuenca-validations)\n[![PyPI](https://img.shields.io/pypi/v/cuenca-validations.svg)](https://pypi.org/project/cuenca-validations/)\n\nShared validations library across multiple Cuenca projects\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "License-File", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/cuenca-mx/cuenca-validations", "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "cuenca-validations", "package_url": "https://pypi.org/project/cuenca-validations/", "platform": null, "project_url": "https://pypi.org/project/cuenca-validations/", "project_urls": {"Homepage": "https://github.com/cuenca-mx/cuenca-validations"}, "provides_extra": null, "release_url": "https://pypi.org/project/cuenca-validations/2.1.14.dev100/", "requires_dist": ["clabe>=2.0.0", "pydantic[email]>=2.10.0", "pydantic-extra-types>=2.10.0", "python-dateutil>=2.9.0", "phonenumbers>=8.13.0"], "requires_python": ">=3.9", "summary": "Cuenca common validations", "version": "2.1.14.dev100", "yanked": false, "yanked_reason": null}, "last_serial": 30395145, "urls": [{"comment_text": null, "digests": {"blake2b_256": "a3585f8027bd6b79d0de3be23443c21d321fbad0aafaee3d0738fa2e283c0807", "md5": "e7b5bf9f71d870350fea1ec75d5209a5", "sha256": "ab5b08c481719095a9839ca0cc424950dee41505a51ef0aeb02928c570afb5af"}, "downloads": -1, "filename": "cuenca_validations-2.1.14.dev100-py3-none-any.whl", "has_sig": false, "md5_digest": "e7b5bf9f71d870350fea1ec75d5209a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.9", "size": 34927, "upload_time": "2025-07-29T02:50:22", "upload_time_iso_8601": "2025-07-29T02:50:22.550314Z", "url": "https://files.pythonhosted.org/packages/a3/58/5f8027bd6b79d0de3be23443c21d321fbad0aafaee3d0738fa2e283c0807/cuenca_validations-2.1.14.dev100-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "3c128a8bba767b0734119f3b6863959a573be9a5e479c3aebedb9a0e5760bae8", "md5": "28215e684a1ad1b94c0bbdb4a0b2ab8a", "sha256": "a0b13b7869e422bf1cdc3aa84e93fe29e0ab4e71b1f67efd68482e69411724de"}, "downloads": -1, "filename": "cuenca_validations-2.1.14.dev100.tar.gz", "has_sig": false, "md5_digest": "28215e684a1ad1b94c0bbdb4a0b2ab8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 29337, "upload_time": "2025-07-29T02:50:24", "upload_time_iso_8601": "2025-07-29T02:50:24.612639Z", "url": "https://files.pythonhosted.org/packages/3c/12/8a8bba767b0734119f3b6863959a573be9a5e479c3aebedb9a0e5760bae8/cuenca_validations-2.1.14.dev100.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:49:16 GMT", "package": "re-common", "version": "10.0.40", "json": {"info": {"author": "vic", "author_email": "xujiang5@163.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\r\n    \u8fd9\u662f\u4e00\u4e2a\u57fa\u7840\u7c7b\uff0c\u4f9d\u8d56\u5f88\u591a\u7684\u7b2c\u4e09\u65b9\u5305\uff0c\u662f\u4e00\u4e2a\u7528\u5f97\u5230\u7684\u7b2c\u4e09\u65b9\u5e93\u7684\u5c01\u88c5\uff0c\u53ef\u4ee5\u5728\u6b64\u57fa\u7840\u4e0a\u8fc5\u901f\u6784\u5efa\u9879\u76ee\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "Requires-Python", "Summary"], "home_page": "https://gitee.com/xujiangios/re-common", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "re-common", "package_url": "https://pypi.org/project/re-common/", "platform": null, "project_url": "https://pypi.org/project/re-common/", "project_urls": {"Homepage": "https://gitee.com/xujiangios/re-common"}, "provides_extra": null, "release_url": "https://pypi.org/project/re-common/10.0.40/", "requires_dist": null, "requires_python": ">=3.6", "summary": "a library about all python projects", "version": "10.0.40", "yanked": false, "yanked_reason": null}, "last_serial": 30395142, "urls": [{"comment_text": null, "digests": {"blake2b_256": "87bc43cffb13e9bcc119062cbf0b06fc9786e194808e85676b8e269a535385c7", "md5": "90f5cc231d168d2b8272e9a3fd208689", "sha256": "defd0c85422dd2c14654bdf8e6e4b9007adb2afc44aab1cbd8eb6583acbb863b"}, "downloads": -1, "filename": "re_common-10.0.40-py3-none-any.whl", "has_sig": false, "md5_digest": "90f5cc231d168d2b8272e9a3fd208689", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 335231, "upload_time": "2025-07-29T02:49:16", "upload_time_iso_8601": "2025-07-29T02:49:16.027132Z", "url": "https://files.pythonhosted.org/packages/87/bc/43cffb13e9bcc119062cbf0b06fc9786e194808e85676b8e269a535385c7/re_common-10.0.40-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "fd102625ab56e62e79b555717ef22b73ef6421c57c57047e1722b51cd7b64194", "md5": "f409ff08118c3186c4a5f495c12056d6", "sha256": "d8c9dff7be1e2a373b65c9f89cc5b8cbab69255168c9b2992b9b4e9549395587"}, "downloads": -1, "filename": "re_common-10.0.40.tar.gz", "has_sig": false, "md5_digest": "f409ff08118c3186c4a5f495c12056d6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 240522, "upload_time": "2025-07-29T02:49:19", "upload_time_iso_8601": "2025-07-29T02:49:19.341924Z", "url": "https://files.pythonhosted.org/packages/fd/10/2625ab56e62e79b555717ef22b73ef6421c57c57047e1722b51cd7b64194/re_common-10.0.40.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:48:24 GMT", "package": "sincpro-framework", "version": "2.4.1", "json": {"info": {"author": "Gutierrez Andres", "author_email": "andru1236@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13"], "description": "# \ud83d\ude80 Sincpro Framework: Application Layer Framework within Hexagonal Architecture\n\n## \u26a1 Quick Start\n\nHere's a quick example to get you started with the Sincpro Framework:\n\n### \ud83c\udfc1 Quick Example\n\n```python\nfrom sincpro_framework import UseFramework, Feature, DataTransferObject\n\n# 1. Initialize the framework\nframework = UseFramework(\"cybersource\")\n\n# 2. Add Dependencies (Example dependencies)\nfrom sincpro_framework import Database\n\ndb = Database()\nframework.add_dependency(\"db\", db)\n\n# 3. Error Handler (Optional, use the built-in error handling feature)\nframework.set_global_error_handler(lambda e: print(f\"Error: {e}\"))\n\n\n# 4. Create a Use Case with DTOs\nclass GreetingParams(DataTransferObject):\n    name: str\n\n\n@framework.feature(GreetingParams)\nclass GreetingFeature(Feature):\n    def execute(self, dto: GreetingParams) -> str:\n        self.db.store(f\"Greeting {dto.name}\")\n        return f\"Hello, {dto.name}!\"\n\n\n# 5. Execute the Use Case\nif __name__ == \"__main__\":\n    # Create an instance of the parameter DTO\n    greeting_dto = GreetingParams(name=\"Alice\")\n    # Execute the feature\n    result = framework(greeting_dto)\n    print(result)  # Output: Hello, Alice!\n```\n\nNow you are ready to explore more complex use cases! \ud83d\ude80\n\n## \ud83d\udcd1 Table of Contents\n\n1. [Overview of Hexagonal Architecture](#overview-of-hexagonal-architecture)\n    - [Key Layers of Hexagonal Architecture](#key-layers-of-hexagonal-architecture)\n    - [Why Use a Unified Bus Pattern?](#why-use-a-unified-bus-pattern)\n2. [Key Features of the Sincpro Framework](#key-features-of-the-sincpro-framework)\n    - [DTO Validation with Pydantic](#dto-validation-with-pydantic)\n    - [Dependency Injection](#dependency-injection)\n    - [Inversion of Control (IoC)](#inversion-of-control-ioc)\n    - [Error Handling at Different Levels](#error-handling-at-different-levels)\n    - [Bus Pattern for Component Communication](#bus-pattern-for-component-communication)\n    - [Decoupled Logic Execution](#decoupled-logic-execution)\n    - [Application Service Orchestration](#application-service-orchestration)\n    - [IDE Support with Typing](#ide-support-with-typing)\n3. [Features vs. Application Service](#features-vs-application-service)\n4. [Example Usage for a Payment Gateway](#example-usage-for-a-payment-gateway)\n    - [Configuring the Framework](#configuring-the-framework)\n    - [Best Practices for Imports](#best-practices-for-imports)\n    - [Sample Configuration in ](#sample-configuration-in-init-py)[`__init__.py`](#sample-configuration-in-init-py)\n5. [Creating a Feature](#creating-a-feature)\n    - [Example of Creating a Feature](#example-of-creating-a-feature)\n6. [Creating an Application Service](#creating-an-application-service)\n    - [Example of Creating an Application Service](#example-of-creating-an-application-service)\n7. [Executing a Use Case](#executing-a-use-case)\n    - [Example of Executing a Use Case](#example-of-executing-a-use-case)\n8. [Summary](#summary)\n9. [Configuration or settings](#variables)\n10. [Variables](#variables)\n\n## \ud83d\udd0d Overview of Hexagonal Architecture\n\nHexagonal Architecture, also known as **Ports and Adapters**, is an architectural approach that aims to decouple core\nbusiness logic from external dependencies. It organizes the system into distinct layers: domain, application, and\ninfrastructure, enhancing maintainability, scalability, and adaptability.\n\n### \ud83c\udfd7\ufe0f Key Layers of Hexagonal Architecture\n\n- **Core Domain**: This layer encapsulates essential entities, value objects, and domain services representing the core\n  business rules and behaviors. It is kept strictly independent from infrastructure concerns, preserving business logic\n  integrity.\n- **Application Layer**: Orchestrates user requests, processes domain responses, and mediates interactions between\n  domain and external systems to ensure effective workflow execution.\n- **Infrastructure Layer**: Contains adapters for interacting with databases, APIs, messaging systems, and other\n  services. It handles data transformation to ensure compatibility with the domain and application layers.\n\n### \ud83e\udd14 Why Use a Unified Bus Pattern?\n\nThe Sincpro Framework adopts a **unified bus pattern** as a single point of entry for managing use cases, dependencies,\nand services within a bounded context. This simplifies the architecture by encapsulating all requirements of a given\ncontext, ensuring a clear and consistent structure.\n\nUsing a unified bus allows developers to access all dependencies through a single environment, eliminating the need for\nrepeated imports or initialization. This approach ensures each bounded context is self-sufficient, independently\nscalable, and minimizes coupling while enhancing modularity.\n\n## \ud83d\udd11 Key Features of the Sincpro Framework\n\nThe Sincpro Framework follows hexagonal architecture principles, promoting modularity, scalability, and development\nefficiency. Here are its core features:\n\n### \u2705 DTO Validation with Pydantic\n\n- Utilizes **Pydantic** to validate Data Transfer Objects (DTOs).\n- Ensures only well-structured data is allowed into core business logic, reducing errors and maintaining data integrity.\n\n### \ud83e\udde9 Dependency Injection\n\n- Facilitates integration of user-defined dependencies, promoting modular design.\n- Enhances unit testing by allowing easy mocking or replacement of dependencies.\n\n### \ud83d\udd04 Inversion of Control (IoC)\n\n- Automates the instantiation and configuration of components, reducing boilerplate code.\n- Encourages loose coupling, making systems more adaptable and maintainable.\n\n### \u26a0\ufe0f Error Handling at Different Levels\n\n- Provides centralized error handling at multiple levels: **global**, **Service Application**, and **Feature** levels.\n- Ensures consistent error management, improving overall reliability.\n\n### \ud83d\ude8c Bus Pattern for Component Communication\n\n- Implements a bus mechanism to facilitate communication between **Feature** and **ApplicationService** components.\n- Decouples component interactions, resulting in more flexible and scalable business logic.\n\n### \ud83e\udde9 Decoupled Logic Execution\n\n- Supports independent execution of use cases through the **Feature** component, promoting separation of concerns.\n- For example, a user registration workflow can be broken down into steps like input validation, profile creation, and\n  email notification.\n\n### \ud83c\udfbb Application Service Orchestration\n\n- Uses a **feature bus** to orchestrate multiple features into complex business workflows (e.g., customer onboarding).\n- Integrates smaller use cases into cohesive flows to manage entire business processes effectively.\n\n### \ud83d\udcbb IDE Support with Typing\n\n- Uses type hints to enhance code quality and support features like autocompletion and type checking.\n- Improves development efficiency and reliability.\n\n## \u2699\ufe0f Features vs. Application Service\n\n- **Feature**: Represents a discrete, self-contained use case focused on specific functionality, easy to develop and\n  maintain.\n- **ApplicationService**: Orchestrates multiple features for broader business objectives, providing reusable components\n  and workflows.\n\n## \ud83d\udcb3 Example Usage for a Payment Gateway\n\nThe following example shows how to configure the Sincpro Framework for a payment gateway integration, such as\nCyberSource. It is recommended to name the framework instance to clearly represent the bounded context it serves.\n\n### \ud83d\udd27 Configuring the Framework\n\nTo set up the Sincpro Framework, configuration should be performed at the application layer within the `use_cases`\ndirectory of each bounded context.\n\n```plaintext\nsincpro_payments_sdk/\n\u251c\u2500\u2500 pyproject.toml\n\u251c\u2500\u2500 README.md\n\u251c\u2500\u2500 apps/\n\u2502   \u251c\u2500\u2500 cybersource/\n\u2502   \u2502   \u251c\u2500\u2500 adapters/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 cybersource_rest_api_adapter.py\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 domain/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 card.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 customer.py\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 __init__.py\n\u2502   \u2502   \u251c\u2500\u2500 infrastructure/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 logger.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 aws_services.py\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 orm.py\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 __init__.py\n\u2502   \u2502   \u2514\u2500\u2500 use_cases/\n\u2502   \u2502       \u251c\u2500\u2500 tokenization/\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 new_tokenization_feature.py\n\u2502   \u2502       \u2502   \u2514\u2500\u2500 __init__.py\n\u2502   \u2502       \u251c\u2500\u2500 payments/\n\u2502   \u2502       \u2502   \u251c\u2500\u2500 token_and_payment_service.py\n\u2502   \u2502       \u2502   \u2514\u2500\u2500 __init__.py\n\u2502   \u2502       \u2514\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 qr/\n\u2502   \u251c\u2500\u2500 sms_payment/\n\u2502   \u251c\u2500\u2500 bank_api/\n\u2502   \u251c\u2500\u2500 online_payment_gateway/\n\u2502   \u2514\u2500\u2500 paypal_integration/\n\u2514\u2500\u2500 tests\n```\n\n### \ud83d\udccb Best Practices for Imports\n\nEach use case should import both the **DTO for input parameters** and the **DTO for responses** to maintain clarity and\nconsistency.\n\n### \ud83d\udcdd Sample Configuration in `__init__.py`\n\n```python\nfrom typing import Type\n\nfrom sincpro_framework import Feature as _Feature\nfrom sincpro_framework import UseFramework as _UseFramework\nfrom sincpro_framework import ApplicationService as _ApplicationService\n\nfrom sincpro_payments_sdk.apps.cybersource.adapters.cybersource_rest_api_adapter import (\n    ESupportedCardType,\n    TokenizationAdapter,\n)\nfrom sincpro_payments_sdk.infrastructure.orm import with_transaction as db_session\nfrom sincpro_payments_sdk.infrastructure.aws_services import AwsService as aws_service\n\n# Create an instance of the framework\ncybersource = _UseFramework()\n\n# Register dependencies\ncybersource.add_dependency(\"token_adapter\", TokenizationAdapter())\ncybersource.add_dependency(\"ECardType\", ESupportedCardType)\ncybersource.add_dependency(\"db_session\", db_session)\ncybersource.add_dependency(\"aws_service\", aws_service)\n\n\n# Define a custom Feature class to access the dependencies\nclass Feature(_Feature):\n    token_adapter: TokenizationAdapter\n    ECardType: Type[ESupportedCardType]\n    db_session: ...\n    aws_service: ...\n    logger: ...\n\n\n# Define a custom Application Service class to access dependencies\nclass ApplicationService(_ApplicationService):\n    token_adapter: TokenizationAdapter\n    ECardType: Type[ESupportedCardType]\n    db_session: ...\n    aws_service: ...\n    logger: ...\n    feature_bus: ...\n\n\n# Add use cases (Application Services and Features)\nfrom . import tokenization\n\n__all__ = [\"cybersource\", \"tokenization\", \"Feature\"]\n```\n\n## \ud83d\udee0\ufe0f Creating a Feature\n\nTo create a new **Feature**, follow these steps:\n\n1. **Create a Module for the Feature**: Add a new Python file in the appropriate folder under `use_cases`.\n2. **Import the Framework and Required Classes**: Import the configured framework instance and `DataTransferObject`.\n3. **Define the Parameter and Response DTOs**: Use `DataTransferObject` to create classes for input parameters and\n   responses.\n4. **Create the Feature Class**: Define the `Feature` class by inheriting from the custom `Feature` class.\n\n### \ud83d\udd8b\ufe0f Example of Creating a Feature\n\n```python\nfrom sincpro_payments_sdk.apps.cybersource import cybersource, DataTransferObject, Feature\n\n\n# Define parameter DTO\nclass TokenizationParams(DataTransferObject):\n    card_number: str\n    expiration_date: str\n    cardholder_name: str\n\n\n# Define response DTO\nclass TokenizationResponse(DataTransferObject):\n    token: str\n    status: str\n\n\n# Create the Feature class\n@cybersource.feature(TokenizationParams)\nclass NewTokenizationFeature(Feature):\n    def execute(self, dto: TokenizationParams) -> TokenizationResponse:\n        # Example usage of dependencies\n        cybersource.logger.info(\"Starting tokenization process\")\n        token = self.token_adapter.create_token(\n            card_number=dto.card_number,\n            expiration_date=dto.expiration_date,\n            cardholder_name=dto.cardholder_name\n        )\n        return TokenizationResponse(token=token, status=\"success\")\n```\n\n## \ud83d\udd04 Creating an Application Service\n\n**ApplicationService** is used to coordinate multiple features while maintaining reusability and consistency. It\norchestrates features into cohesive workflows.\n\n### \ud83d\udca1 Example of Creating an Application Service\n\n```python\nfrom sincpro_payments_sdk.apps.cybersource import cybersource, DataTransferObject, ApplicationService\nfrom sincpro_payments_sdk.apps.cybersource.use_cases.tokenization import TokenizationParams\n\n\n# Define parameter DTO\nclass PaymentServiceParams(DataTransferObject):\n    card_number: str\n    expiration_date: str\n    cardholder_name: str\n    amount: float\n\n\n# Define response DTO\nclass PaymentServiceResponse(DataTransferObject):\n    status: str\n    transaction_id: str\n\n\n# Create the Application Service class\n@cybersource.app_service(PaymentServiceParams)\nclass PaymentOrchestrationService(ApplicationService):\n    def execute(self, dto: PaymentServiceParams) -> PaymentServiceResponse:\n        # Create the command DTO for tokenization\n        tokenization_command = TokenizationParams(\n            card_number=dto.card_number,\n            expiration_date=dto.expiration_date,\n            cardholder_name=dto.cardholder_name\n        )\n        tokenization_result = self.feature_bus.execute(tokenization_command)\n\n        # Example usage of dependencies\n        cybersource.logger.info(\"Proceeding with payment after tokenization\")\n        # Proceed with payment using the token (pseudo code for payment processing)\n        transaction_id = \"12345\"  # Simulated transaction ID\n        return PaymentServiceResponse(status=\"success\", transaction_id=transaction_id)\n```\n\n## \u2699\ufe0f Executing a Use Case\n\nOnce a **Feature** or **ApplicationService** is defined, it can be executed by passing the appropriate **DTO** instance.\n\n### \ud83d\udccc Example of Executing a Use Case\n\n```python\nfrom sincpro_payments_sdk.apps.cybersource import cybersource\nfrom sincpro_payments_sdk.apps.cybersource.use_cases.tokenization import TokenizationParams\nfrom sincpro_payments_sdk.apps.cybersource.use_cases.payments import PaymentServiceParams\n\n# Example of executing a Feature\nfeature_dto = TokenizationParams(\n    card_number=\"4111111111111111\",\n    expiration_date=\"12/25\",\n    cardholder_name=\"John Doe\"\n)\n\n# Execute the feature\nfeature_result = cybersource.feature_bus.execute(feature_dto)\nprint(f\"Tokenization Result: {feature_result.token}, Status: {feature_result.status}\")\n\n# Example of executing an Application Service\nservice_dto = PaymentServiceParams(\n    card_number=\"4111111111111111\",\n    expiration_date=\"12/25\",\n    cardholder_name=\"John Doe\",\n    amount=100.00\n)\n\n# Execute the application service\nservice_result = cybersource(service_dto)\nprint(f\"Payment Status: {service_result.status}, Transaction ID: {service_result.transaction_id}\")\n```\n\n## \ud83d\udcda Summary\n\nThe Sincpro Framework provides a robust solution for managing the application layer within a hexagonal architecture. By\nfocusing on decoupling business logic from external dependencies, the framework promotes modularity, scalability, and\nmaintainability.\n\n- **Features**: Handle specific, self-contained business actions.\n- **ApplicationServices**: Orchestrate multiple features for cohesive workflows.\n\nThis structured approach ensures high-quality, maintainable software that can adapt to evolving business needs. \ud83d\ude80\n\n## Configuration or settings\n\nThe framework comes with a module or component to allow us to create configuratio or settings based on files or\nenvironment variables.\nYou need to inherit from `SincproConfig` from module `sincpro_framework.sincpro_conf`\n\n```python\nfrom sincpro_framework.sincpro_conf import SincproConfig\n\n\nclass PostgresConf(SincproConfig):\n    host: str = \"localhost\"\n    port: int = 5432\n    user: str = \"my_user\"\n\n\nclass MyConfig(SincproConfig):\n    log_level: str = \"DEBUG\"\n    token: str = \"defult_my_token\"\n    postgresql: PostgresConf = PostgresConf()\n\n```\n\nThis class should be mapped based on yaml file like this, we have a feature to use ENV variables in the yaml file\nusing the prefix `$ENV:`\n\n```yaml\nlog_level: \"INFO\"\ntoken: \"$ENV:MY_SECRET_TOKEN\"\npostgresql:\n  host: localhost\n  port: 12345\n  user: custom_user\n```\n\n### Environment Variable Handling\n\nWhen using `$ENV:` prefix in your configuration files, the framework will:\n\n1. Look for the environment variable specified after `$ENV:`\n2. If the environment variable exists, use its value\n3. If the environment variable doesn't exist:\n   - Use the default value defined in your configuration class\n   - Issue a warning indicating that the environment variable is missing\n   - Proceed with execution rather than raising an error\n\nThis behavior allows applications to run with partial configurations in development environments or when not all environment variables are available, while still logging appropriate warnings.\n\nExample of fallback to default values:\n\n```python\n# Configuration class with default\nclass ApiConfig(SincproConfig):\n    api_key: str = \"dev_default_key\"  # Default value as fallback\n\n# In config.yml\napi_key: \"$ENV:API_KEY\"  # References environment variable\n\n# If API_KEY environment variable is not set, the framework will:\n# 1. Log a warning: \"Environment variable [API_KEY] is not set for field [api_key]. Using default value: dev_default_key\"\n# 2. Use the default value \"dev_default_key\" \n# 3. Continue execution without error\n```\n\nThen you can use the config object in your code where it will be loaded all the settings from the yaml file\nfor that you will require use the following funciton `build_config_obj`\n\n```python\nfrom sincpro_framework.sincpro_conf import build_config_obj\nfrom .my_config import MyConfig\n\nconfig = build_config_obj(MyConfig, '/path/to/your/config.yml')\n\nassert isinstance(config.log_level, str)\nassert isinstance(config.postgresql, PostgresConf)\n```\n\n## \ud83d\udce6 Variables\n\nThe framework use a default setting file where live in the module folder inside of\n`sincpro_framework/conf/sincpro_framework_conf.yml`\nwhere you can define some behavior currently we support the following settings:\n\n- log level(`sincpro_framework_log_level`): Define the log level for the logger, the default is `DEBUG`\n\nOverride the config file using another\n\n```bash\nexport SINCPRO_FRAMEWORK_CONFIG_FILE = /path/to/your/config.yml\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "MIT", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "sincpro-framework", "package_url": "https://pypi.org/project/sincpro-framework/", "platform": null, "project_url": "https://pypi.org/project/sincpro-framework/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/sincpro-framework/2.4.1/", "requires_dist": ["dependency-injector<5.0.0,>=4.46.0", "pydantic<3.0.0,>=2.9.2", "pyyaml==6.0.1", "sincpro-log<2.0.0,>=1.0.1"], "requires_python": "<4.0,>=3.12", "summary": "Sincpro framework to use DDD, Clean architecture, Hexagonal architecture", "version": "2.4.1", "yanked": false, "yanked_reason": null}, "last_serial": 30395138, "urls": [{"comment_text": "", "digests": {"blake2b_256": "cb05e60e2fd17875896a1ef00a4117c23148a37cd743ac5be2a28b2000057a3c", "md5": "25c088bf467322915a5bb48d16d7d7ab", "sha256": "f6cad5e385a1650f1be26a3b1ac1f3f60ca1cda20484f73cbff7d4c5d37ef3d3"}, "downloads": -1, "filename": "sincpro_framework-2.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "25c088bf467322915a5bb48d16d7d7ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "<4.0,>=3.12", "size": 18409, "upload_time": "2025-07-29T02:48:24", "upload_time_iso_8601": "2025-07-29T02:48:24.247254Z", "url": "https://files.pythonhosted.org/packages/cb/05/e60e2fd17875896a1ef00a4117c23148a37cd743ac5be2a28b2000057a3c/sincpro_framework-2.4.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "014eb1e538a0c0fab07a24d5923f7e87bff2b33d54c0730c0d576b387c3ca658", "md5": "e6dd165d1506942130a0d64f6df9b7ff", "sha256": "1f99420e033e19f4f05b3b37183918738f7a041340f807927110cefcfa939a60"}, "downloads": -1, "filename": "sincpro_framework-2.4.1.tar.gz", "has_sig": false, "md5_digest": "e6dd165d1506942130a0d64f6df9b7ff", "packagetype": "sdist", "python_version": "source", "requires_python": "<4.0,>=3.12", "size": 18693, "upload_time": "2025-07-29T02:48:25", "upload_time_iso_8601": "2025-07-29T02:48:25.068024Z", "url": "https://files.pythonhosted.org/packages/01/4e/b1e538a0c0fab07a24d5923f7e87bff2b33d54c0730c0d576b387c3ca658/sincpro_framework-2.4.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:48:09 GMT", "package": "fyuneru", "version": "0.3.5", "json": {"info": {"author": null, "author_email": "inklov3 <inklov3@163.com>", "bugtrack_url": null, "classifiers": [], "description": "# python \u5de5\u4f5c\u4f9d\u8d56\u5e93\n``` shell\n# init\nuv sync\n\n# install pip or uv\npip install -U fyuneru\nuv add -U fyuneru\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "fyuneru", "package_url": "https://pypi.org/project/fyuneru/", "platform": null, "project_url": "https://pypi.org/project/fyuneru/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/fyuneru/0.3.5/", "requires_dist": ["joblib>=1.5.1", "loguru>=0.7.3", "scipy>=1.15.3"], "requires_python": ">=3.10", "summary": "A Python utility library with logging and path management", "version": "0.3.5", "yanked": false, "yanked_reason": null}, "last_serial": 30395135, "urls": [{"comment_text": null, "digests": {"blake2b_256": "497a8dc6dc69d45eeed839ba690076eeb7799c2204624c217fa36a9aa51d4eb4", "md5": "ee8269bf2d06c70dd70bd6fd86a5b76d", "sha256": "77fafcff93d3a75753684894f14e71d2aadaecd3737f193d683d51d1f9d39ed5"}, "downloads": -1, "filename": "fyuneru-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ee8269bf2d06c70dd70bd6fd86a5b76d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 13746, "upload_time": "2025-07-29T02:48:09", "upload_time_iso_8601": "2025-07-29T02:48:09.138419Z", "url": "https://files.pythonhosted.org/packages/49/7a/8dc6dc69d45eeed839ba690076eeb7799c2204624c217fa36a9aa51d4eb4/fyuneru-0.3.5-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "bcc938109c7e79e90aacc48b3dcd8848c73e0acd86d1b26a85cefa343c08f322", "md5": "379f97c9685bd0f96c65e7188529a408", "sha256": "3db0b091676304bd93595730e80ffdf79e87034d1e203fd72e9b493dddd9b9b5"}, "downloads": -1, "filename": "fyuneru-0.3.5.tar.gz", "has_sig": false, "md5_digest": "379f97c9685bd0f96c65e7188529a408", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 10532, "upload_time": "2025-07-29T02:48:10", "upload_time_iso_8601": "2025-07-29T02:48:10.660964Z", "url": "https://files.pythonhosted.org/packages/bc/c9/38109c7e79e90aacc48b3dcd8848c73e0acd86d1b26a85cefa343c08f322/fyuneru-0.3.5.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:47:29 GMT", "package": "tinykv", "version": "0.1.2", "json": {"info": {"author": null, "author_email": "Flavio Veloso Soares <flaviovs@magnux.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "TinyKV - a minimal key-value database for Python using SQLite3\n==============================================================\n\nTinyKV implements a key-value database interface for Python 3 using\nthe [sqlite3](https://docs.python.org/3/library/sqlite3.html) module\nfrom the standard library. There is no dependency on external\npackages.\n\nTinyKV requires Python 3.7 or above.\n\n\nInstallation\n------------\n\n    pip install tinykv\n\n\nBasic usage\n-----------\n\nFirst let\u2019s import _sqlite3_ and the TinyKV module:\n\n    >>> import sqlite3\n    >>> import tinykv\n\nTinyKV does not create a SQLite3 database to operate on. Instead, it\noperate on connections managed by the caller. So let\u2019s create a\ndatabase for using in the examples:\n\n    >>> conn = sqlite3.connect(':memory:')\n\nThis is how you create a TinyKV object:\n\n    >>> kv = tinykv.TinyKV(conn)\n    Traceback (most recent call last):\n        ...\n    RuntimeError: Table 'kv' not found in the database\n\nOops... TinyKV does not create the database table it needs either. For\nthat the application can use `create_schema()`:\n\n    >>> tinykv.create_schema(conn)\n\nLet\u2019s try again:\n\n    >>> kv = tinykv.TinyKV(conn)\n    >>> kv  # doctest: +ELLIPSIS\n    <tinykv.TinyKV object at 0x...>\n\nNow it works!\n\n\n## Storing and retrieving data\n\nUse `set()` and `get()` to store and retrieve data from a TinyKV\ndatabase, respectively:\n\n    >>> kv.set('foo', 'bar')\n    >>> kv.get('foo')\n    'bar'\n\nTrying to get a nonexistent key raises _KeyError_:\n\n    >>> kv.get('not-there')\n    Traceback (most recent call last):\n        ...\n    KeyError: 'not-there'\n\nYou can pass a default value to be returned if a key does not exist:\n\n    >>> kv.get('not-there', 'but-try-this')\n    'but-try-this'\n\n\n## Value data types\n\nYou can store any regular Python scalar in the key-value database:\n\n    >>> kv.set('foo', None)\n    >>> foo = kv.get('foo')\n    >>> foo is None\n    True\n\n    >>> kv.set('one', 1)\n    >>> kv.get('one')\n    1\n\n    >>> kv.set('pi', 3.1415926)\n    >>> kv.get('pi')\n    3.1415926\n\nSame for container objects:\n\n    >>> kv.set('a_list', ['one', 'two', 'three'])\n    >>> kv.get('a_list')\n    ['one', 'two', 'three']\n\nIn fact, you can store any pickable object:\n\n    >>> import datetime\n    >>>\n    >>> kv.set('a-long-time-ago', datetime.datetime(2022, 3, 19, 20, 15, 5))\n\n    >>> a_long_time_ago = kv.get('a-long-time-ago')\n\n    >>> a_long_time_ago\n    datetime.datetime(2022, 3, 19, 20, 15, 5)\n\n    >>> type(a_long_time_ago)\n    <class 'datetime.datetime'>\n\n\n## Removing entries\n\nUse `remove()` to remove entries from the database:\n\n    >>> kv.set('foo', 'bar')\n    >>> kv.remove('foo')\n    >>> kv.get('foo')\n    Traceback (most recent call last):\n        ...\n    KeyError: 'foo'\n\n\n## Working with multiple entries\n\nUse `set_many()` with a key-value _dict_ to store multiple entries at\nonce:\n\n    >>> kv.set_many({\n    ...     'one': 1,\n    ...     'two': 2,\n    ... })\n    >>> kv.get('one')\n    1\n    >>> kv.get('two')\n    2\n\nCall `get_many()` to retrieve many entries. The function returns a\n_dict_ of all keys-values found in the database:\n\n    >>> kv.set('one', 1)\n    >>> kv.set('two', 2)\n    >>> kv.get_many(['one', 'two', 'not-there'])\n    {'one': 1, 'two': 2}\n\nYou can also use `get_glob()` to fetch entries based a glob pattern:\n\n    >>> kv.set('foo:abc', 1)\n    >>> kv.set('foo:xyz', 2)\n    >>> kv.set('bar:123', 3)\n\n    >>> kv.get_glob('foo:*')\n    {'foo:abc': 1, 'foo:xyz': 2}\n\n    >>> kv.get_glob('*:123')\n    {'bar:123': 3}\n\nNotice that `get_many()` and `get_glob()` never raise _KeyError_ for\nnonexistent keys. Instead, those keys are simple not present in the\nreturned _dict_.\n\nYou can also remove many entries in one call with\n`remove_many()`. Nonexistent keys are silently ignored:\n\n    >>> kv.get('one')\n    1\n\n    >>> kv.remove_many(['one', 'not-there'])\n    >>> kv.get('one')\n    Traceback (most recent call last):\n        ...\n    KeyError: 'one'\n\n\nMiscellaneous\n-------------\n\n- TinyKV keys must be string scalars.\n\n- TinyKV does not open or manage transactions. Also, it operates both\n  in autocommit and non-autocommit mode. All operations are atomic.\n\n- Naturally, if the connection handle is not in autocommit mode, you\n  must call `commit()` on the connection to save the data.\n\n- The connection handle is available in the read-only attribute `conn`\n  of the TinyKV object:\n\n        >>> kv.conn  # doctest: +ELLIPSIS\n        <sqlite3.Connection object at 0x...>\n\n- By default the table used by TinyKV is called _kv_. You can change\n  that by passing a `table` argument to `create_schema()` and the\n  TinyKV constructor:\n\n        >>> CUSTOM_TABLE = 'custom_kv'\n        >>>\n        >>> tinykv.create_schema(conn, table=CUSTOM_TABLE)\n        >>>\n        >>> custom_kv = tinykv.TinyKV(conn, table=CUSTOM_TABLE)\n\n\nQuestions? Bugs? Suggestions?\n-----------------------------\nVisit https://github.com/flaviovs/tinykv\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "tinykv", "package_url": "https://pypi.org/project/tinykv/", "platform": null, "project_url": "https://pypi.org/project/tinykv/", "project_urls": null, "provides_extra": ["dev"], "release_url": "https://pypi.org/project/tinykv/0.1.2/", "requires_dist": ["codespell; extra == \"dev\"", "flake8-bugbear; extra == \"dev\"", "flake8-builtins; extra == \"dev\"", "flake8-docstrings; extra == \"dev\"", "flake8-tidy-imports; extra == \"dev\"", "flake8-walrus; extra == \"dev\"", "flake8; extra == \"dev\"", "flit; extra == \"dev\"", "mypy; extra == \"dev\"", "pylint; extra == \"dev\"", "taskipy; extra == \"dev\""], "requires_python": ">=3.7", "summary": "A tiny key-value store using SQLite3.", "version": "0.1.2", "yanked": false, "yanked_reason": null}, "last_serial": 30395127, "urls": [{"comment_text": null, "digests": {"blake2b_256": "22c76583dd61a9d85a2f0435a121cad6ebb286a1d0695c74dc64cb33f6d7af97", "md5": "d4cd610dacf34fbf5dc0d2db784df5da", "sha256": "48d6fd42362252abe26eae521c541a6a1b597c71b40212a66a2602ed264d7e46"}, "downloads": -1, "filename": "tinykv-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d4cd610dacf34fbf5dc0d2db784df5da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6027, "upload_time": "2025-07-29T02:47:29", "upload_time_iso_8601": "2025-07-29T02:47:29.984461Z", "url": "https://files.pythonhosted.org/packages/22/c7/6583dd61a9d85a2f0435a121cad6ebb286a1d0695c74dc64cb33f6d7af97/tinykv-0.1.2-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "14c9a0ea5cbfcc068eb9795aaed79d05759b50f3079faf89315990e4b00d7894", "md5": "509d4402924cf9be0415cfde8133d00f", "sha256": "36663aed5761e7356b2fc23dff6e74e6bb58b16256e3767f0f5005ae460c0ef3"}, "downloads": -1, "filename": "tinykv-0.1.2.tar.gz", "has_sig": false, "md5_digest": "509d4402924cf9be0415cfde8133d00f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6936, "upload_time": "2025-07-29T02:47:31", "upload_time_iso_8601": "2025-07-29T02:47:31.226135Z", "url": "https://files.pythonhosted.org/packages/14/c9/a0ea5cbfcc068eb9795aaed79d05759b50f3079faf89315990e4b00d7894/tinykv-0.1.2.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:46:47 GMT", "package": "panoseti-grpc", "version": "0.1.0.6", "json": {"info": {"author": null, "author_email": "nraultwang <nraultwang@berkeley.edu>", "bugtrack_url": null, "classifiers": ["Framework :: AsyncIO", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Astronomy"], "description": "# panoseti_grpc\nContains gRPC code for the PANOSETI project. See [here](https://github.com/panoseti/panoseti) for the main software repo.\n\n# Environment Setup for gRPC Clients and Servers\n\n1. Install `miniconda` ([link](https://www.anaconda.com/docs/getting-started/miniconda/install))\n2. Clone this (`panoseti_grpc`) repo onto a DAQ node or any client computer.\n2. Run the following commands to create the\u00a0`grpc-py39`\u00a0environment. \n```bash\ngit clone https://github.com/panoseti/panoseti_grpc.git\ncd panoseti_grpc\nconda create -n grpc-py39 python=3.9\nconda activate grpc-py39\nconda install -c conda-forge grpcio-tools\npip install panoseti-grpc\n```\n\n[//]: # (pip install -r requirements.txt)\n\n\n# Using the DaqDataClient API\nThe `DaqDataClient` is a Python gRPC client interface for the PANOSETI DaqData service. It provides a user-friendly API for scientists and developers to connect to DAQ nodes, initialize observing runs, and stream real-time image data for analysis and visualization.\n\nSee [daq_data_client.py](daq_data/client.py) for the implementation and [daq_data_client_demo.ipynb](daq_data_client_demo.ipynb) for code examples showing how to use it.\n\n## Developing Real-Time Visualizations\n\n1. Define a visualization class.\n2. Implement an `update` method to modify the visualization given a new panoseti image.\n3. Follow the code pattern provided in [daq_data_client_demo.ipynb](daq_data_client_demo.ipynb) to receive data with the `DaqDataClient` API:\n\n```python\nfrom daq_data.client import DaqDataClient\nfrom daq_data.plot import PanoImagePreviewer\n\n...\n# 1. Connect to all DAQ nodes\nwith DaqDataClient(daq_config) as ddc:\n    # 2. Instantiate visualization class\n    previewer = PanoImagePreviewer(stream_movie_data=True, stream_pulse_height_data=True)\n\n    # 3. Call the StreamImages RPC on all valid DAQ nodes\n    pano_image_stream = ddc.stream_images(\n        hosts=[],\n        stream_movie_data=True,\n        stream_pulse_height_data=True,\n        update_interval_seconds=2.0,\n        wait_for_ready=True,\n        parse_pano_images=True,\n    )\n\n    # 4. Update visualization for each pano_image\n    for pano_image in pano_image_stream:\n        previewer.update(pano_image)\n```\n\n<p style=\"text-align: center;\"> <img src=\"https://github.com/panoseti/panoseti_grpc/raw/main/docs/demo_figure.png\" alt=\"Example visualization with simulated data\" width=\"400\"> <br> Figure 1. PanoImagePreviewer visualizing a simulated observing run replaying data from 2024-07-25. </p>\n\n\n## Client Initialization\nThe DaqDataClient requires a configuration dictionary specifying the IP addresses and data directories of the DAQ nodes. This is most conveniently loaded from [daq_config.json](https://github.com/panoseti/panoseti/wiki/Configuration-files#daq-config-daq_configjson).\nThe client should be used as a [context manager](https://book.pythontips.com/en/latest/context_managers.html) to ensure network resources are handled correctly.\n\n```python\nimport json\nfrom daq_data.client import DaqDataClient\n\n# 1. Load the DAQ configuration\nwith open('path/to/your/daq_config.json', 'r') as f:\n    daq_config = json.load(f)\n\n# 2. Instantiate the client using a 'with' statement\nwith DaqDataClient(daq_config) as client:\n    # Your code to interact with the client goes here\n    valid_hosts = client.get_valid_daq_hosts()\n    print(f\"Successfully connected to: {valid_hosts}\")\n```\n\n## API Reference\nAll methods can accept a single host string or a list of host strings. If the `hosts` argument is omitted, the method will run on all available DAQ nodes that are responsive.\nSee [The DaqData Service](#the-daqdata-service) for implementation details.\n\n### Checking Server Status\nThese methods help you verify connectivity and discover the services available on the DAQ nodes.\n\n- `ping(host)`: Checks if a single DAQ host is online and responsive.\n\n- `get_valid_daq_hosts()`: Returns a set of all hosts with DaqData servers that successfully responded to a ping.\n\n- `reflect_services(hosts)`: Lists all available gRPC services and methods on the specified hosts. This is useful for exploring the server's capabilities.\n\n```python\nwith DaqDataClient(daq_config) as client:\n    # Get all responsive hosts\n    hosts = client.get_valid_daq_hosts()\n    print(f\"Valid hosts: {hosts}\")\n\n    # Discover the services on the first valid host\n    if hosts:\n        host = list(hosts)[0]\n        service_info = client.reflect_services(host)\n        print(service_info)\n```\n### Initializing the Data Source\nBefore you can stream images, you must initialize the `hp_io` thread on the server. This thread monitors the observing run directory for new data files.\nSee [InitHpIo](#inithpio) for implementation details.\n\n#### `init_hp_io(hosts, hp_io_cfg)`\nInitializes the hp_io thread for a real observing run.\n\n- `hosts`: The DAQ node(s) to initialize.\n- `hp_io_cfg`: A dictionary with configuration parameters, as explained in [The hp_io_config.json File](#the-hp_io_configjson-file).\n\n```python\n# Load hp_io configuration from a file\nwith open('path/to/hp_io_config.json', 'r') as f:\n    hp_io_config = json.load(f)\n\nwith DaqDataClient(daq_config) as client:\n    # Initialize all valid hosts\n    success = client.init_hp_io(hosts=None, hp_io_cfg=hp_io_config)\n    if success:\n        print(\"Successfully initialized hp_io on all DAQ nodes.\")\n```\n#### `init_sim(host)`\nA convenience function to initialize the server in simulation mode, which streams archived data for testing and development.\n\n```python\nwith DaqDataClient(daq_config) as client:\n    # Initialize the first valid host in simulation mode\n    host = list(client.get_valid_daq_hosts())[0]\n    success = client.init_sim(host)\n    if success:\n        print(f\"Successfully initialized simulation on {host}.\")\n```\n### Streaming Image Data\n#### stream_images(...)\nThe primary method for receiving real-time data. It returns an infinite generator that yields image data as it becomes available from the server.\nSee [StreamImages](#streamimages) for implementation details.\n\n- `hosts`: The DAQ node(s) to stream from.\n\n- `stream_movie_data` (bool): Request movie-mode images.\n\n- `stream_pulse_height_data` (bool): Request pulse-height images.\n\n- `update_interval_seconds` (float): The desired update rate from the server.\n\n- `module_ids` (tuple): A tuple of module IDs to stream. An empty tuple streams all modules.\n\n```python\nwith DaqDataClient(daq_config) as client:\n    # Initialize first (replace with your logic)\n    # ...\n\n    # Create a request to stream pulse-height data for all modules\n    image_stream = client.stream_images(\n        hosts=None,\n        stream_movie_data=False,\n        stream_pulse_height_data=True,\n        update_interval_seconds=0.5,\n        module_ids=()\n    )\n\n    # Process the first 10 images from the stream\n    print(\"Starting image stream...\")\n    for i, image_data in enumerate(image_stream):\n        print(\n            f\"Received image from Module {image_data['module_id']} \"\n            f\"with shape {image_data['image_array'].shape}\"\n        )\n        if i >= 9:\n            break\n```\n### Full Example Workflow\nThis example demonstrates a complete workflow: initialize the server for a simulated run and then stream data from it. This pattern is shown in [daq_data_client_demo.ipynb](daq_data_client_demo.ipynb).\n\n```python\nimport json\nfrom daq_data.client import DaqDataClient\n\n# 0. Load DAQ configuration\nwith open('daq_data/config/daq_config_grpc_simulate.json', 'r') as f:\n    daq_config = json.load(f)\n\ntry:\n    with DaqDataClient(daq_config) as client:\n        # 1. Get valid hosts\n        valid_hosts = client.get_valid_daq_hosts()\n        if not valid_hosts:\n            raise RuntimeError(\"No valid DAQ hosts found.\")\n        print(f\"Connected to: {valid_hosts}\")\n\n        # 2. Initialize servers in simulation mode\n        all_init_success = client.init_sim(valid_hosts)\n        if not all_init_success:\n            raise RuntimeError(\"Failed to initialize one or more servers.\")\n        print(\"All servers initialized for simulation.\")\n\n        # 3. Stream pulse-height and movie data from all modules\n        image_stream = client.stream_images(\n            hosts=valid_hosts,\n            stream_movie_data=True,\n            stream_pulse_height_data=True,\n            update_interval_seconds=1.0,\n            module_ids=()\n        )\n\n        # 4. Listen to the stream and process data\n        print(\"Starting data stream. Press Ctrl+C to stop.\")\n        for image_data in image_stream:\n            # In a real application, you would pass this data to a\n            # visualization or analysis function.\n            print(\n                f\"Image: Module {image_data['module_id']}, \"\n                f\"Type: {image_data['type']}, \"\n                f\"Timestamp: {image_data['header']['pandas_unix_timestamp']}\"\n            )\n\nexcept KeyboardInterrupt:\n    print(\"\\nStream stopped by user.\")\nexcept Exception as e:\n    print(f\"An error occurred: {e}\")\n```\n\n## Using the DaqData Client CLI\n\n```\ndaq_data/cli.py  - demonstrates real-time pulse-height and movie-mode visualizations using the DaqData API.\n\nusage: cli.py [-h] [--host HOST] [--ping] [--list-hosts] [--reflect-services] [--init CFG_PATH] [--init-sim] [--plot-view] [--plot-phdist] [--module-ids [MODULE_IDS ...]]\n              [--log-level {debug,info,warning,error,critical}]\n              daq_config_path\n\npositional arguments:\n  daq_config_path       path to daq_config.json file for the current observing run\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --host HOST           DaqData server hostname or IP address.\n  --ping                ping the specified host\n  --list-hosts          list available DAQ node hosts\n  --reflect-services    list available gRPC services on the DAQ node\n  --init CFG_PATH       initialize the hp_io thread with CFG_PATH='/path/to/hp_io_config.json'\n  --init-sim            initialize the hp_io thread to track a simulated run directory\n  --plot-view           whether to create a live data previewer\n  --plot-phdist         whether to create a live pulse-height distribution for the specified module id\n  --module-ids [MODULE_IDS ...]\n                        whitelist for the module ids to stream data from. If empty, data from all available modules are returned.\n  --log-level {debug,info,warning,error,critical}\n                        set the log level for the DaqDataClient logger. Default: 'info'\n\n```\n\nBelow is an example workflow for using `daq_data/client_cli.py` to view real-time data from a real or simulated observing run directory.\n\n#### On the Headnode\n1. Start an observing session ([docs](https://github.com/panoseti/panoseti/wiki/sessions-and-configuration)).\n2. Run `start.py` in the `panoseti/control` directory to start an observing run.\n\n#### On each DAQ Node in `/path/to/daq_config.json`\n1. Set up the `grpc-py39` environment as described above.\n2. Set the working directory to `panoseti_grpc/`.\n3. Run `python -m daq_data.server`.\n\n#### On Any Computer\n1. Set up the `grpc-py39` environment as described above.\n2. Update `hp_io_config.json` or create a new one (see docs below).\n3. Set the working directory to `panoseti_grpc/`.\n4. `export DAQ_CFG=/path/to/daq_config.json`: (optional) create a convenient variable for `/path/to/daq_config.json`. If you don't want to do this, replace `$DAQ_CFG` in all following commands with `/path/to/daq_config.json`.\n5. `python -m daq_data.cli -h`: see the available options.\n6. `python -m daq_data.cli $DAQ_CFG --list-hosts`: find DAQ node hosts running valid DaqData gRPC servers. Hostname arguments `H` to `--host` should be in the list of valid hosts returned by this command.\n7. Initialize the `hp_io` thread on all DaqData servers:\n    - (Real data) `python -m daq_data.cli $DAQ_CFG --init /path/to/hp_io_config.json`: initialize `hp_io` from `hp_io_config.json`. See [The hp_io_config.json File](#the-hp_io_configjson-file) for details about this config file.\n    - (Simulated data) `python -m daq_data.cli $DAQ_CFG --init-sim`: initialize `hp_io` from `daq_data/config/hp_io_config_simulate.json`. This starts a stream of simulated data.\n8. Start visualization apps:\n    - `python -m daq_data.cli $DAQ_CFG --plot-phdist`: make a `StreamImages` request and launch a real-time pulse-height distribution app.\n    - `python -m daq_data.cli $DAQ_CFG --plot-view`: make a `StreamImages` request and launch a real-time frame viewer app.\n\nNotes:\n- On Linux, the `Ctrl+P` keyboard shortcut loads commands from your command history. Useful for running the `python -m daq_data.cli` module with different options.\n- `panoseti_grpc` has a package structure, so your working directory should be the repo root, `panoseti_grpc/`, when running modules in `panoseti_grpc/daq_data/`.\n- Each script (e.g. `server.py`) should be prefixed with **`python -m daq_data.`** and, because it is a module, be called without the `.py` extension. Following these guidelines gives the example command for step 4: **`python -m daq_data.server`**, instead of `daq_data/server.py` or  `python -m daq_data.server.py`.\n\n# The DaqData Service\nSee [daq_data.proto](protos/daq_data.proto) for the protobuf specification of this service.\n\n\n<table>\n  <tr>\n    <td style=\"text-align: center;\">\n      <img src=\"https://github.com/panoseti/panoseti_grpc/raw/main/docs/DaqData_StreamImages_overview.png\" alt=\"DaqData Architecture\" width=\"500\"/><br>\n      <em>Figure A. DaqData Architecture</em>\n    </td>\n    <td style=\"text-align: center;\">\n      <img src=\"https://github.com/panoseti/panoseti_grpc/raw/main/docs/DaqData_StreamImages_hp-io.png\" alt=\"DaqData StreamImages hp-io\" width=\"300\"/><br>\n      <em>Figure B. StreamImages RPC Flow</em>\n    </td>\n  </tr>\n</table>\n\n\n## Core Remote Procedure Calls\n\n### `StreamImages`\n\n- The gRPC server's\u00a0`hp_io`\u00a0thread compares consecutive snapshots of the current run directory to identify the last image frame for each Hashpipe data product, including `ph256`, `ph1024`, `img8`, `img16`. These image frames are subsequently broadcast to ready `StreamImages` clients.\n- A given image frame of type `dp` from module `N` will be sent to a client when the following conditions are satisfied:\n    1. The time since the last server response to this client is at least as long as the client\u2019s requested `update_interval_seconds`.\n    2. The client has requested data of type `dp`.\n    3. Module `N` is on the client\u2019s whitelist.\n- $N \\geq 0$ `StreamImages` clients may be concurrently connected to the server.\n\n### `InitHpIo`\n\n- Enables reconfiguration of the `hp_io` thread during an observing run.\n- Requires an observing run to be active to succeed.\n- $N \\leq 1$ `InitHpIo` clients may be active at any given time. If an `InitHpIo` client is active, no other client may be.\n\n### `Ping`\n- Succeeds only if a client can contact the DaqData server. \n\n\n\n## The `hp_io_config.json` File\n\n`hp_io_config.json` is used to configure `InitHpIo` RPCs to initialize the gRPC server's `hp_io` thread.\n\n```json\n{\n  \"data_dir\": \"/mnt/panoseti\",\n  \"update_interval_seconds\": 0.1,\n  \"force\": true,\n  \"simulate_daq\": false,\n  \"module_ids\": [],\n  \"comments\": \"Configures the hp_io thread to track observing runs stored under /mnt/panoseti\"\n}\n```\n\n- `data_dir`: the data acquisition directory a Hashpipe instance is writing to. Contains `module_X/` directories.\n- `update_interval_seconds`: the period, in seconds, between consecutive snapshots of the run directory. Must be greater than the minimum period specified by the `min_hp_io_update_interval_seconds` field in daq_data/config/daq_data_server_config.json.\n- `force`: whether to force a configuration of `hp_io`, even if other clients are currently active.\n    - If `true`, the server will stop all active `StreamImages` RPCs then re-configure the `hp_io` thread using the given configuration. During initialization, new `StreamImages` and `InitHpIo` clients may join a waiting queue, but will not be handled until after the configuration has finished (regardless of success or failure). Use this option to guarantee your `InitHpIo` request is handled.\n    - If `false`, the `InitHpIo` request will only succeed if no other `StreamImages` RPCs are active. If any `StreamImages` RPCs are active, this `InitHpIo` RPC will immediately return with information about the number of active`StreamImages`. Use this option if other users may be using the server.\n- `simulate_daq`: overrides `data_dir` and causes the server to stream data from archived observing data. Use this option for debugging and developing visualizations without access to observatory hardware.\n- `module_ids`: whitelist of module data sources.\n    - If empty, the server will broadcast data snapshots from all active modules (detected automatically).\n    - If non-empty, the server will only broadcast data from the specified modules.\n\n\n\n\n# UbloxControl Service (TODO)\n...\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": "panoseti, gRPC, observatory, DAQ, astronomy, live-visualization", "license": "MIT License\n        \n        Copyright (c) 2025 PANOSETI\n        \n        Permission is hereby granted, free of charge, to any person obtaining a copy\n        of this software and associated documentation files (the \"Software\"), to deal\n        in the Software without restriction, including without limitation the rights\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        copies of the Software, and to permit persons to whom the Software is\n        furnished to do so, subject to the following conditions:\n        \n        The above copyright notice and this permission notice shall be included in all\n        copies or substantial portions of the Software.\n        \n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n        SOFTWARE.\n        ", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "panoseti-grpc", "package_url": "https://pypi.org/project/panoseti-grpc/", "platform": null, "project_url": "https://pypi.org/project/panoseti-grpc/", "project_urls": {"Documentation": "https://github.com/panoseti/panoseti_grpc/blob/main/README.md", "Homepage": "https://github.com/panoseti/panoseti_grpc", "Issues": "https://github.com/panoseti/panoseti_grpc/issues", "Repository": "https://github.com/panoseti/panoseti_grpc"}, "provides_extra": ["dev", "docs"], "release_url": "https://pypi.org/project/panoseti-grpc/0.1.0.6/", "requires_dist": ["grpcio>=1.73.0", "grpcio-reflection>=1.73.0", "grpcio-tools>=1.73.0", "protobuf<7.0.0,>=6.30.0", "coverage>=4.0", "cython>=3.1.1", "wheel>=0.29", "rich>=14.0.0", "redis>=3.5.3", "snakeviz>=2.2.2", "pyserial>=3.5", "pyubx2>=1.2.43", "seaborn>=0.13.2", "matplotlib>=3.8.4", "pandas>=2.3.0", "numpy>=1.26.4", "jupyter>=1.1.1", "netifaces>=0.11.0", "psutil>=7.0.0", "pytest; extra == \"dev\"", "black; extra == \"dev\"", "flake8; extra == \"dev\"", "ipython; extra == \"dev\"", "sphinx; extra == \"docs\"", "myst-parser; extra == \"docs\"", "sphinx-autodoc-typehints; extra == \"docs\""], "requires_python": ">=3.9", "summary": "gRPC for the PANOSETI project.", "version": "0.1.0.6", "yanked": false, "yanked_reason": null}, "last_serial": 30395105, "urls": [{"comment_text": null, "digests": {"blake2b_256": "43598a117d6ab5cb83979e7088c8b528eb6697ed92089be56690a27faaaa2d7e", "md5": "b94aceccc317db8e48a8b32127e49948", "sha256": "b65788acde645c192d8b0a553999842ef942e7e1addfca570a21752221c70f22"}, "downloads": -1, "filename": "panoseti_grpc-0.1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b94aceccc317db8e48a8b32127e49948", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.9", "size": 16103748, "upload_time": "2025-07-29T02:46:47", "upload_time_iso_8601": "2025-07-29T02:46:47.702469Z", "url": "https://files.pythonhosted.org/packages/43/59/8a117d6ab5cb83979e7088c8b528eb6697ed92089be56690a27faaaa2d7e/panoseti_grpc-0.1.0.6-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "5b751d8a2576ad07b62b2eb4a60352cc6b32f59171fe98391db8cd6dcba836d3", "md5": "fd7c822997a173e08c7b43e956d924cd", "sha256": "0094a36b57a504ded08f1b0231c94de2bbf6dbd6ff50cc5b971b3e6396e46bef"}, "downloads": -1, "filename": "panoseti_grpc-0.1.0.6.tar.gz", "has_sig": false, "md5_digest": "fd7c822997a173e08c7b43e956d924cd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 16035053, "upload_time": "2025-07-29T02:46:51", "upload_time_iso_8601": "2025-07-29T02:46:51.518304Z", "url": "https://files.pythonhosted.org/packages/5b/75/1d8a2576ad07b62b2eb4a60352cc6b32f59171fe98391db8cd6dcba836d3/panoseti_grpc-0.1.0.6.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:46:34 GMT", "package": "grasp-sdk", "version": "0.2.0b3", "json": {"info": {"author": "Grasp Team", "author_email": "Grasp Team <team@grasp.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Internet :: WWW/HTTP :: Browsers", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Emulators"], "description": "# Grasp SDK - Python Implementation\n\n[![PyPI version](https://badge.fury.io/py/grasp-sdk.svg)](https://badge.fury.io/py/grasp-sdk)\n[![Python 3.8+](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n\ud83d\udc0d Python implementation of Grasp SDK for E2B platform providing secure command execution and browser automation in isolated cloud environments.\n\n**Current Version: 0.1.4** - [View on PyPI](https://pypi.org/project/grasp-sdk/0.1.4/)\n\n## \ud83d\ude80 Features\n\n- **Secure Execution**: Run commands and scripts in isolated E2B sandboxes\n- **Browser Automation**: Control Chromium browsers with Playwright integration\n- **Async/Await Support**: Full async/await support for modern Python development\n- **Type Safety**: Complete type hints with Pydantic models\n- **WebSocket Communication**: Real-time communication with sandbox environments\n- **Multi-language Support**: Compatible with Node.js/TypeScript version\n\n## \ud83d\udce6 Installation\n\n```bash\n# Install from PyPI\npip install grasp_sdk\n\n# Install from source\npip install -e .\n\n# Install with development dependencies\npip install -e \".[dev]\"\n```\n\n## \ud83d\udd27 Quick Start\n\n### Using GraspServer Context Manager (Recommended)\n\n```python\nimport asyncio\nimport os\nfrom pathlib import Path\nfrom playwright.async_api import async_playwright\nfrom dotenv import load_dotenv\n\nfrom grasp_sdk import GraspServer\nfrom grasp_sdk.models import IBrowserConfig, ISandboxConfig\n\n# \u52a0\u8f7d\u73af\u5883\u53d8\u91cf\nload_dotenv(\"../.env.grasp\")\n\nasync def main():\n    \"\"\"\u4e3b\u51fd\u6570\uff1a\u6f14\u793a Grasp SDK \u7684\u57fa\u672c\u7528\u6cd5\"\"\"\n    \n    # \u68c0\u67e5\u662f\u5426\u6709 API key\n    api_key = os.getenv('GRASP_KEY')\n    if not api_key:\n        print(\"\u26a0\ufe0f \u8b66\u544a\uff1a\u672a\u8bbe\u7f6e GRASP_KEY \u73af\u5883\u53d8\u91cf\")\n        print(\"\u8bf7\u8bbe\u7f6e GRASP_KEY \u73af\u5883\u53d8\u91cf\u6216\u5728 .env \u6587\u4ef6\u4e2d\u914d\u7f6e\")\n        print(\"\u793a\u4f8b\uff1aexport GRASP_KEY=your_api_key_here\")\n        return\n\n    print(\"\ud83d\ude80 \u6b63\u5728\u542f\u52a8\u6d4f\u89c8\u5668...\")\n\n    async with GraspServer({\n            # 'key': api_key,\n            # 'type': 'chrome-stable',\n            # 'headless': False,\n            # 'adblock': True,\n            # 'debug': True,\n            'timeout': 3600000,  # \u5bb9\u5668\u6700\u957f\u8fd0\u884c1\u5c0f\u65f6\uff08\u6700\u5927\u503c\u53ef\u4ee5\u4e3a\u4e00\u5929 86400000\uff09\n        }) as connection:\n    \n        try:\n            print(f\"\u8fde\u63a5\u4fe1\u606f: {connection}\")\n            print(f\"WebSocket URL: {connection['ws_url']}\")\n            print(f\"HTTP URL: {connection['http_url']}\")\n            \n            # \u4f7f\u7528 Playwright \u8fde\u63a5\u5230 CDP\n            async with async_playwright() as p:\n                browser = await p.chromium.connect_over_cdp(\n                    connection['ws_url'],\n                    timeout=150000\n                )\n                \n                # \u521b\u5efa\u7b2c\u4e00\u4e2a\u9875\u9762\u5e76\u8bbf\u95ee\u7f51\u7ad9\n                page1 = await browser.new_page()\n                await page1.goto('https://getgrasp.ai/', wait_until='domcontentloaded')\n                await page1.screenshot(path='grasp-ai.png')\n                await page1.close()\n                \n                # \u83b7\u53d6\u6216\u521b\u5efa\u4e0a\u4e0b\u6587\n                contexts = browser.contexts\n                context = contexts[0] if contexts else await browser.new_context()\n                \n                # \u521b\u5efa\u7b2c\u4e8c\u4e2a\u9875\u9762\n                page2 = await context.new_page()\n                \n                # \u5c06 HTML \u5b57\u7b26\u4e32\u6e32\u67d3\u5230\u9875\u9762\u4e2d\n                await page2.set_content('<h1>Hello Grasp</h1>', wait_until='networkidle')\n                \n                # \u622a\u56fe\u6f14\u793a\n                await page2.screenshot(path='hello-world.png', full_page=True)\n                \n                # \u6e05\u7406\u8d44\u6e90\n                await page2.close()\n                await context.close()\n                await browser.close()\n                \n            print('\u2705 \u4efb\u52a1\u5b8c\u6210\u3002')\n            \n        except Exception as e:\n            print(f\"\u274c \u6267\u884c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u9519\u8bef: {str(e)}\")\n            raise\n        \n        finally:\n            # \u6ce8\u610f\uff1a\u4f7f\u7528 GraspServer \u4e0a\u4e0b\u6587\u7ba1\u7406\u5668\u65f6\uff0c\u8d44\u6e90\u4f1a\u81ea\u52a8\u6e05\u7406\n            print(\"\u7a0b\u5e8f\u7ed3\u675f\uff0c\u8d44\u6e90\u5c06\u81ea\u52a8\u6e05\u7406\")\n\nif __name__ == '__main__':\n    asyncio.run(main())\n```\n\n## \ud83c\udfd7\ufe0f Architecture\n\nThe Python implementation mirrors the Node.js/TypeScript version:\n\n```\npy-src/\n\u251c\u2500\u2500 __init__.py              # Main package exports\n\u251c\u2500\u2500 grasp_server.py          # Main GraspServer class\n\u251c\u2500\u2500 services/                # Core services\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 sandbox_service.py   # E2B sandbox management\n\u2502   \u2514\u2500\u2500 browser_service.py   # Browser automation\n\u251c\u2500\u2500 types/                   # Type definitions\n\u2502   \u2514\u2500\u2500 __init__.py\n\u251c\u2500\u2500 utils/                   # Utilities\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 config.py           # Configuration management\n\u2502   \u251c\u2500\u2500 logger.py           # Logging utilities\n\u2502   \u2514\u2500\u2500 auth.py             # Authentication\n\u251c\u2500\u2500 cli/                     # Command line interface\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u2514\u2500\u2500 main.py\n\u2514\u2500\u2500 tests/                   # Test suite\n    \u2514\u2500\u2500 ...\n```\n\n## \ud83d\udd11 Environment Variables\n\n```bash\n# Required\nE2B_API_KEY=your_e2b_api_key_here\n\n# Optional\nGRASP_LOG_LEVEL=info\nGRASP_TIMEOUT=30000\nGRASP_TEMPLATE=python\n```\n\n## \ud83e\uddea Development\n\n### Quick Setup\n\n```bash\n# Install development dependencies automatically\npython install_dev_deps.py\n\n# Or manually install\npip install -e \".[dev]\"\n```\n\n### Running Tests\n\n```bash\n# Simple tests (no pytest required)\npython test_connect_simple.py\n\n# Full test suite (requires pytest)\npytest tests/\n\n# Run specific test file\npytest tests/test_connect.py -v\n```\n\n### Code Quality\n\n```bash\n# Format code\nblack .\nisort .\n\n# Type checking\nmypy .\n\n# Linting\nflake8 .\n```\n\n### Examples\n\n```bash\n# Run Connect usage examples\npython example_connect.py\n```\n\n## \ud83d\udcda API Reference\n\n### GraspServer (Recommended)\n\nAsync context manager for automatic sandbox resource management and browser automation.\n\n```python\nclass GraspServer:\n    def __init__(self, options: Optional[Dict[str, Any]] = None)\n    async def __aenter__(self) -> Dict[str, Any]  # Returns connection info\n    async def __aexit__(self, exc_type, exc_val, exc_tb) -> None\n```\n\n**Usage:**\n```python\nasync with GraspServer(options) as connection:\n    # connection contains: {'id', 'ws_url', 'http_url'}\n    # Automatic cleanup on exit\n```\n\n**Options:**\n- `key`: Your Grasp API key (loaded from environment if not provided)\n- `type`: Browser type ('chromium' or 'chrome-stable')\n- `headless`: Run in headless mode (default: True)\n- `adblock`: Enable adblock (default: False)\n- `debug`: Enable debug mode (default: False)\n- `timeout`: Container maximum runtime in milliseconds (default: 30000, max: 86400000)\n\n### GraspServer\n\nMain class for interacting with E2B sandboxes and browser automation.\n\n```python\nclass GraspServer:\n    def __init__(self, sandbox_config: Optional[Dict[str, Any]] = None)\n    async def create_browser_task(self, browser_type: str = 'chromium', config: Optional[Dict[str, Any]] = None) -> Dict[str, Any]\n    async def cleanup(self) -> None\n    def get_status(self) -> Optional[SandboxStatus]\n    def get_sandbox_id(self) -> Optional[str]\n    @property\n    def sandbox(self) -> Optional[SandboxService]\n```\n\n## \ud83e\udd1d Compatibility\n\nThis Python implementation provides the same API surface as the Node.js/TypeScript version, ensuring:\n\n- **Feature Parity**: All features available in both implementations\n- **API Consistency**: Same method names and behavior\n- **Type Safety**: Equivalent type definitions using TypedDict and Pydantic\n- **Error Handling**: Consistent error types and messages\n\n## \ud83d\udcc4 License\n\nMIT License - see the [LICENSE](../LICENSE) file for details.\n\n## \ud83d\udccb Release History\n\n### v0.1.4 (2025-01-27)\n- Version synchronization update\n- Package metadata improvements\n- Documentation updates\n\n### v0.1.0 (2025-01-27)\n- Initial release\n- Core functionality implementation\n- Complete API compatibility with Node.js version\n\n## \ud83d\udd17 Related\n\n- [Node.js/TypeScript Implementation](../src/)\n- [E2B Platform](https://e2b.dev/)\n- [Playwright Python](https://playwright.dev/python/)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Home-Page", "Requires-Python"], "home_page": "https://github.com/grasp-team/grasp-e2b", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "grasp-sdk", "package_url": "https://pypi.org/project/grasp-sdk/", "platform": null, "project_url": "https://pypi.org/project/grasp-sdk/", "project_urls": {"Bug Reports": "https://github.com/grasp-team/grasp-e2b/issues", "Documentation": "https://docs.grasp.com", "Homepage": "https://github.com/grasp-team/grasp-e2b", "Source": "https://github.com/grasp-team/grasp-e2b"}, "provides_extra": ["dev", "browser", "validation"], "release_url": "https://pypi.org/project/grasp-sdk/0.2.0b3/", "requires_dist": ["aiohttp>=3.9.0", "python-dotenv>=1.0.0", "typing-extensions>=4.8.0", "websockets>=12.0", "e2b>=1.5.0", "e2b-code-interpreter>=1.5.0", "pytest>=7.0.0; extra == \"dev\"", "pytest-asyncio>=0.21.0; extra == \"dev\"", "black>=23.0.0; extra == \"dev\"", "flake8>=6.0.0; extra == \"dev\"", "mypy>=1.0.0; extra == \"dev\"", "playwright>=1.40.0; extra == \"browser\"", "pydantic>=2.5.0; extra == \"validation\""], "requires_python": ">=3.8", "summary": "Python SDK for Grasp E2B - Browser automation and sandbox management", "version": "0.2.0b3", "yanked": false, "yanked_reason": null}, "last_serial": 30395095, "urls": [{"comment_text": null, "digests": {"blake2b_256": "018d6b4e66f7167d206557b6c957fb5d8ac580f2dd7ea118ed789d4e8df988d0", "md5": "7988c38110a5ed46d20cb56b09226e10", "sha256": "957f871bdcb47e53dc88e583ddc68542bf0fea8e91c73972a4785bb35a624511"}, "downloads": -1, "filename": "grasp_sdk-0.2.0b3-py3-none-any.whl", "has_sig": false, "md5_digest": "7988c38110a5ed46d20cb56b09226e10", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 57121, "upload_time": "2025-07-29T02:46:34", "upload_time_iso_8601": "2025-07-29T02:46:34.019296Z", "url": "https://files.pythonhosted.org/packages/01/8d/6b4e66f7167d206557b6c957fb5d8ac580f2dd7ea118ed789d4e8df988d0/grasp_sdk-0.2.0b3-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "611ac8d6605a63da1f28ab1d2271486cedb09a36f5818f8ffe1cc23a0c877eb9", "md5": "92c123cf301e965c9756f4078ac0e881", "sha256": "f6be9464010f6e6f9421b64f40587db202e9d747110adc013c5a018d111ad09a"}, "downloads": -1, "filename": "grasp_sdk-0.2.0b3.tar.gz", "has_sig": false, "md5_digest": "92c123cf301e965c9756f4078ac0e881", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 50228, "upload_time": "2025-07-29T02:46:35", "upload_time_iso_8601": "2025-07-29T02:46:35.850697Z", "url": "https://files.pythonhosted.org/packages/61/1a/c8d6605a63da1f28ab1d2271486cedb09a36f5818f8ffe1cc23a0c877eb9/grasp_sdk-0.2.0b3.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:46:32 GMT", "package": "odoo-addon-crm-phonecall-result", "version": "18.0.1.0.0.3", "json": {"info": {"author": "Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n====================\nCrm Phonecall Result\n====================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:a785005a087b4de18fdd407e656e124277d77b37e64addbe44759cb2d990aeb6\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fcrm-lightgray.png?logo=github\n    :target: https://github.com/OCA/crm/tree/18.0/crm_phonecall_result\n    :alt: OCA/crm\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/crm-18-0/crm-18-0-crm_phonecall_result\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/crm&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nAdds a field to set the result of CRM phone calls, allows creating new\nresult options, and enables filtering and grouping by call result.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nUsage\n=====\n\nTo use this module, you need to:\n\n1. In CRM > Configuration > Calls, you can define new phone call\n   results.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/crm/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/crm/issues/new?body=module:%20crm_phonecall_result%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nContributors\n------------\n\n- `Sygel <https://www.sygel.es>`__:\n\n  - \u00c1ngel Rivas\n  - Valent\u00edn Vinagre\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/crm <https://github.com/OCA/crm/tree/18.0/crm_phonecall_result>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/crm", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-crm-phonecall-result", "package_url": "https://pypi.org/project/odoo-addon-crm-phonecall-result/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-crm-phonecall-result/", "project_urls": {"Homepage": "https://github.com/OCA/crm"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-crm-phonecall-result/18.0.1.0.0.3/", "requires_dist": ["odoo-addon-crm_phonecall==18.0.*", "odoo==18.0.*"], "requires_python": ">=3.10", "summary": "Adds phone call result tracking and reporting to CRM phonecalls", "version": "18.0.1.0.0.3", "yanked": false, "yanked_reason": null}, "last_serial": 30395090, "urls": [{"comment_text": "", "digests": {"blake2b_256": "9f0f38c30bec3634f4283fcdd80eb6f78447b2ee216b95702cbe57c2d4fe107e", "md5": "597c26e130751b19e9bdbea1e89002d0", "sha256": "ff36247a01b5a4ee3bb05e1ab82170cf64321e8c43f9cc52a51329c491f10959"}, "downloads": -1, "filename": "odoo_addon_crm_phonecall_result-18.0.1.0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "597c26e130751b19e9bdbea1e89002d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 45630, "upload_time": "2025-07-29T02:46:32", "upload_time_iso_8601": "2025-07-29T02:46:32.259361Z", "url": "https://files.pythonhosted.org/packages/9f/0f/38c30bec3634f4283fcdd80eb6f78447b2ee216b95702cbe57c2d4fe107e/odoo_addon_crm_phonecall_result-18.0.1.0.0.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:46:07 GMT", "package": "project-llm-trainer", "version": "0.5.12", "json": {"info": {"author": "qibin", "author_email": "qibin0506@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Summary"], "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "project-llm-trainer", "package_url": "https://pypi.org/project/project-llm-trainer/", "platform": null, "project_url": "https://pypi.org/project/project-llm-trainer/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/project-llm-trainer/0.5.12/", "requires_dist": null, "requires_python": null, "summary": "LLM and VLM trainer", "version": "0.5.12", "yanked": false, "yanked_reason": null}, "last_serial": 30395064, "urls": [{"comment_text": null, "digests": {"blake2b_256": "49c7a985e86d8a779412fa842070da2b5351bc482d9d27894fbf7aaa84211515", "md5": "123231056f978b2bb371353eca01f1e5", "sha256": "caf37021a9667d71450248268f8ddfdd6db7e025890b7b8eaf86ff919a7db46e"}, "downloads": -1, "filename": "project_llm_trainer-0.5.12-py3-none-any.whl", "has_sig": false, "md5_digest": "123231056f978b2bb371353eca01f1e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 42950, "upload_time": "2025-07-29T02:46:07", "upload_time_iso_8601": "2025-07-29T02:46:07.069480Z", "url": "https://files.pythonhosted.org/packages/49/c7/a985e86d8a779412fa842070da2b5351bc482d9d27894fbf7aaa84211515/project_llm_trainer-0.5.12-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:45:57 GMT", "package": "dspin", "version": "1.4.0", "json": {"info": {"author": "Jialong Jiang", "author_email": "jiangjl@caltech.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.9", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Physics"], "description": "# D-SPIN: Constructing regulatory network models from scRNA-seq perturbation profiling  \n\nD-SPIN is a computational framework for constructing regulatory network models of genes or gene programs from single-cell RNA-seq profiling of perturbation conditions. D-SPIN integrates information from multiple perturbation conditions for network inference with improved efficienty and accuracy. The regulatory network can be defined on single genes or gene programs (groups of coexpressed genes). The package includes implementation of gene program discovery, network inference, and network analysis. \n\nIf D-SPIN is useful for your research, consider citing \"D-SPIN constructs gene regulatory network models from multiplexed scRNA-seq data revealing organizing principles of cellular perturbation response\" ([bioRxiv](https://www.biorxiv.org/content/10.1101/2023.04.19.537364)).\n\n## Contact \n\nFor any questions and feedback regarding D-SPIN, please contact us at [jiangjl@caltech.edu](mailto:jiangjl@caltech.edu) or open an issue on GitHub.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "Keywords", "License", "License-File", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/JialongJiang/DSPIN", "keywords": "network inference, single cell, transcriptomics", "license": "Apache-2.0 license", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "dspin", "package_url": "https://pypi.org/project/dspin/", "platform": null, "project_url": "https://pypi.org/project/dspin/", "project_urls": {"Homepage": "https://github.com/JialongJiang/DSPIN"}, "provides_extra": null, "release_url": "https://pypi.org/project/dspin/1.4.0/", "requires_dist": ["anndata", "matplotlib", "scanpy", "tqdm", "igraph", "leidenalg"], "requires_python": ">=3.6", "summary": "Regulatory network models from single-cell perturbation profiling", "version": "1.4.0", "yanked": false, "yanked_reason": null}, "last_serial": 30395054, "urls": [{"comment_text": null, "digests": {"blake2b_256": "e3fd8911f48f9132c1fb2c0e608e979eab2c7da855b7f6819b8183b76cea808f", "md5": "a038865e10e065dc7cd793aff6aa6d64", "sha256": "553d30118dd88c9ecf8f28c28dd401ffeeb43a8a1330b2f5ce39bbe6cb7ab7ef"}, "downloads": -1, "filename": "dspin-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a038865e10e065dc7cd793aff6aa6d64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 43974, "upload_time": "2025-07-29T02:45:57", "upload_time_iso_8601": "2025-07-29T02:45:57.086459Z", "url": "https://files.pythonhosted.org/packages/e3/fd/8911f48f9132c1fb2c0e608e979eab2c7da855b7f6819b8183b76cea808f/dspin-1.4.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "dbfe55a0f135019dc7b7192f613b7fa708e519d37bd6367ae620304f610c8625", "md5": "d187bc7e9b03981bd0892fe5ce471055", "sha256": "b1ec67a942dac506540fb1e4a0b53e8e091a207f8848d65120dd2f1f24ce0f3b"}, "downloads": -1, "filename": "dspin-1.4.0.tar.gz", "has_sig": false, "md5_digest": "d187bc7e9b03981bd0892fe5ce471055", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 77022, "upload_time": "2025-07-29T02:45:58", "upload_time_iso_8601": "2025-07-29T02:45:58.015359Z", "url": "https://files.pythonhosted.org/packages/db/fe/55a0f135019dc7b7192f613b7fa708e519d37bd6367ae620304f610c8625/dspin-1.4.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:45:11 GMT", "package": "aws-lambda-proxy", "version": "1.0.0", "json": {"info": {"author": null, "author_email": "Lucas Messenger <1335960+layertwo@users.noreply.github.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12"], "description": "# aws-lambda-proxy\n\n[![Packaging status](https://badge.fury.io/py/aws-lambda-proxy.svg)](https://badge.fury.io/py/aws-lambda-proxy)\n\nForked from https://github.com/vincentsarago/lambda-proxy/\n\nA zero-requirement proxy linking AWS API Gateway `{proxy+}` requests and AWS Lambda.\n\n<img width=\"600\" alt=\"\" src=\"https://user-images.githubusercontent.com/10407788/58742966-6ff50480-83f7-11e9-81f7-3ba7aa2310bb.png\">\n\n## Install\n\n```bash\n$ pip install -U pip\n$ pip install aws-lambda-proxy\n```\n\nOr install from source:\n\n```bash\n$ git clone https://github.com/layertwo/aws-lambda-proxy.git\n$ cd aws-lambda-proxy\n$ pip install -U pip\n$ pip install -e .\n```\n\n# Usage\n\nLambda proxy is designed to work well with both API Gateway's REST API and the\nnewer and cheaper HTTP API. If you have issues using with the HTTP API, please\nopen an issue.\n\nWith GET request\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test/tests/<id>', methods=['GET'], cors=True)\ndef print_id(id):\n    return ('OK', 'plain/text', id)\n```\n\nWith POST request\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test/tests/<id>', methods=['POST'], cors=True)\ndef print_id(id, body):\n    return ('OK', 'plain/text', id)\n```\n\n## Binary body\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test', methods=['POST']e)\ndef print_id(body):\n    body = json.loads(body)\n```\n\n# Routes\n\nRoute schema is simmilar to the one used in [Flask](http://flask.pocoo.org/docs/1.0/api/#url-route-registrations)\n\n> Variable parts in the route can be specified with angular brackets `/user/<username>`. By default a variable part in the URL accepts any string without a slash however a different converter can be specified as well by using `<converter:name>`.\n\nConverters:\n- `int`: integer\n- `string`: string\n- `float`: float number\n- `uuid`: UUID\n\nexample:\n- `/app/<user>/<id>` (`user` and `id` are variables)\n- `/app/<string:value>/<float:num>` (`value` will be a string, while `num` will be a float)\n\n## Regex\nYou can also add regex parameters descriptions using special converter `regex()`\n\nexample:\n```python\n@APP.get(\"/app/<regex([a-z]+):regularuser>\")\ndef print_user(regularuser):\n    return ('OK', 'plain/text', f\"regular {regularuser}\")\n\n@APP.get(\"/app/<regex([A-Z]+):capitaluser>\")\ndef print_user(capitaluser):\n    return ('OK', 'plain/text', f\"CAPITAL {capitaluser}\")\n```\n\n#### Warning\n\nwhen using **regex()** you must use different variable names or the route might not show up in the documentation.\n\n```python\n@APP.get(\"/app/<regex([a-z]+):user>\")\ndef print_user(user):\n    return ('OK', 'plain/text', f\"regular {user}\")\n\n@APP.get(\"/app/<regex([A-Z]+):user>\")\ndef print_user(user):\n    return ('OK', 'plain/text', f\"CAPITAL {user}\")\n```\nThis app will work but the documentation will only show the second route because in `openapi.json`, route names will be `/app/{user}` for both routes.\n\n# Route Options\n\n- **path**: the URL rule as string\n- **methods**: list of HTTP methods allowed, default: [\"GET\"]\n- **cors**: allow CORS, default: `False`\n- **token**: set `access_token` validation\n- **payload_compression_method**: Enable and select an output body compression\n- **binary_b64encode**: base64 encode the output body (API Gateway)\n- **ttl**: Cache Control setting (Time to Live) \n- **cache_control**: Cache Control setting\n- **description**: route description (for documentation)\n- **tag**: list of tags (for documentation)\n\n## Cache Control\n\nAdd a Cache Control header with a Time to Live (TTL) in seconds.\n\n```python\nfrom aws_lambda_proxy import API\nAPP = API(app_name=\"app\")\n\n@APP.get('/test/tests/<id>', cors=True, cache_control=\"public,max-age=3600\")\ndef print_id(id):\n   return ('OK', 'plain/text', id)\n```\n\nNote: If function returns other then \"OK\", Cache-Control will be set to `no-cache`\n\n## Binary responses\n\nWhen working with binary on API-Gateway we must return a base64 encoded string\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get('/test/tests/<filename>.jpg', cors=True, binary_b64encode=True)\ndef print_id(filename):\n    with open(f\"{filename}.jpg\", \"rb\") as f:\n        return ('OK', 'image/jpeg', f.read())\n```\n\n## Compression\n\nEnable compression if \"Accept-Encoding\" if found in headers.\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get(\n   '/test/tests/<filename>.jpg',\n   cors=True,\n   binary_b64encode=True,\n   payload_compression_method=\"gzip\"\n)\ndef print_id(filename):\n    with open(f\"{filename}.jpg\", \"rb\") as f:\n       return ('OK', 'image/jpeg', f.read())\n```\n\n## Simple Auth token\n\nLambda-proxy provide a simple token validation system.\n\n-  a \"TOKEN\" variable must be set in the environment\n-  each request must provide a \"access_token\" params (e.g curl\n   http://myurl/test/tests/myid?access_token=blabla)\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get('/test/tests/<id>', cors=True, token=True)\ndef print_id(id):\n    return ('OK', 'plain/text', id)\n```\n\n## URL schema and request parameters\n\nQueryString parameters are passed as function's options.\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get('/<id>', cors=True)\ndef print_id(id, name=None):\n    return ('OK', 'plain/text', f\"{id}{name}\")\n```\n\nrequests:\n\n```bash\n$ curl /000001\n   0001\n\n$ curl /000001?name=layertwo\n   0001layertwo\n```\n\n## Multiple Routes\n\n```python\nfrom aws_lambda_proxy import API\nAPP = API(name=\"app\")\n\n@APP.get('/<id>', cors=True)\n@APP.get('/<id>/<int:number>', cors=True)\ndef print_id(id, number=None, name=None):\n    return ('OK', 'plain/text', f\"{id}-{name}-{number}\")\n```\nrequests:\n\n```bash\n\n$ curl /000001\n   0001--\n\n$ curl /000001?name=layertwo\n   0001-layertwo-\n\n$ curl /000001/1?name=layertwo\n   0001-layertwo-1\n```\n\n# Advanced features\n\n## Context and Event passing\n\nPass event and context to the handler function.\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.get(\"/<id>\", cors=True)\n@APP.pass_event\n@APP.pass_context\ndef print_id(ctx, evt, id):\n    print(ctx)\n    print(evt)\n    return ('OK', 'plain/text', f\"{id}\")\n```\n\n# Automatic OpenAPI documentation\n\nBy default the APP (`aws_lambda_proxy.API`) is provided with three (3) routes:\n- `/openapi.json`: print OpenAPI JSON definition\n\n- `/docs`: swagger html UI\n![swagger](https://user-images.githubusercontent.com/10407788/58707335-9cbb0480-8382-11e9-927f-8d992cf2531a.jpg)\n\n- `/redoc`: Redoc html UI\n![redoc](https://user-images.githubusercontent.com/10407788/58707338-9dec3180-8382-11e9-8dec-18173e39258f.jpg)\n\n**Function annotations**\n\nTo be able to render full and precise API documentation, aws_lambda_proxy uses python type hint and annotations [link](https://www.python.org/dev/peps/pep-3107/).\n\n```python\nfrom aws_lambda_proxy import API\n\nAPP = API(name=\"app\")\n\n@APP.route('/test/<int:id>', methods=['GET'], cors=True)\ndef print_id(id: int, num: float = 0.2) -> Tuple(str, str, str):\n    return ('OK', 'plain/text', id)\n```\n\nIn the example above, our route `/test/<int:id>` define an input `id` to be a `INT`, while we also add this hint to the function `print_id` we also specify the type (and default) of the `num` option.\n\n# Custom Domain and path mapping\n\nNote: When using path mapping other than `root` (`/`), `/` route won't be available.\n\n```python\nfrom aws_lambda_proxy import API\n\napi = API(name=\"api\", debug=True)\n\n\n# This route won't work when using path mapping\n@api.get(\"/\", cors=True)\n# This route will work only if the path mapping is set to /api\n@api.get(\"/api\", cors=True)\ndef index():\n    html = \"\"\"<!DOCTYPE html>\n    <html>\n        <header><title>This is title</title></header>\n        <body>\n            Hello world\n        </body>\n    </html>\"\"\"\n    return (\"OK\", \"text/html\", html)\n\n\n@api.get(\"/yo\", cors=True)\ndef yo():\n    return (\"OK\", \"text/plain\", \"YOOOOO\")\n```\n\n# Examples\n\n-  https://github.com/aws-lambda-proxy/tree/main/example\n\n\n# Contribution & Devellopement\n\nIssues and pull requests are more than welcome.\n\n**Dev install & Pull-Request**\n\n```bash\n$ git clone https://github.com/layertwo/aws-lambda-proxy.git\n$ cd lambda-proxy\n$ pip install -e .[dev]\n```\n\n### License\n\nSee [LICENSE.txt](/LICENSE.txt>).\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": "aws, lambda, apigateway, proxy", "license": "BSD", "license_expression": null, "license_files": ["LICENSE.txt"], "maintainer": null, "maintainer_email": null, "name": "aws-lambda-proxy", "package_url": "https://pypi.org/project/aws-lambda-proxy/", "platform": null, "project_url": "https://pypi.org/project/aws-lambda-proxy/", "project_urls": null, "provides_extra": ["test"], "release_url": "https://pypi.org/project/aws-lambda-proxy/1.0.0/", "requires_dist": ["pytest==8.4.1; extra == \"test\"", "pytest-cov==6.2.1; extra == \"test\"", "black==25.1.0; extra == \"test\"", "isort==6.0.1; extra == \"test\"", "flake8==7.3.0; extra == \"test\"", "Flake8-pyproject==1.2.3; extra == \"test\""], "requires_python": ">=3.10", "summary": "Simple AWS Lambda proxy to handle API Gateway request", "version": "1.0.0", "yanked": false, "yanked_reason": null}, "last_serial": 30395006, "urls": [{"comment_text": null, "digests": {"blake2b_256": "c41693880c1d5a3d1f04b08cd3ce8ac7b2a7af62caa9c053a473099d0fe3abcc", "md5": "eab72529db10152aa57a1f20b4e2fe6e", "sha256": "352b8ff84f3ba6972868bbb3e618515e3b2852558555668d7fbbcac782bfafed"}, "downloads": -1, "filename": "aws_lambda_proxy-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "eab72529db10152aa57a1f20b4e2fe6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 12582, "upload_time": "2025-07-29T02:45:11", "upload_time_iso_8601": "2025-07-29T02:45:11.899192Z", "url": "https://files.pythonhosted.org/packages/c4/16/93880c1d5a3d1f04b08cd3ce8ac7b2a7af62caa9c053a473099d0fe3abcc/aws_lambda_proxy-1.0.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "82466bd033aef00fa3c3d4ae73d28ed274b5d2ed39fb04a7f64d08b625500f04", "md5": "406fb1528c993f081d48cfaa70f3db96", "sha256": "53edef5927423a47d2f81e00bd32d778754c622985fefc71d92f887bb52cc209"}, "downloads": -1, "filename": "aws_lambda_proxy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "406fb1528c993f081d48cfaa70f3db96", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 20142, "upload_time": "2025-07-29T02:45:12", "upload_time_iso_8601": "2025-07-29T02:45:12.937292Z", "url": "https://files.pythonhosted.org/packages/82/46/6bd033aef00fa3c3d4ae73d28ed274b5d2ed39fb04a7f64d08b625500f04/aws_lambda_proxy-1.0.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:44:37 GMT", "package": "mcp-metricflow", "version": "1.0.1b1", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# mcp-metricflow\n\n[![Python](https://img.shields.io/badge/python-3.10+-blue.svg)](https://www.python.org/downloads/)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)\n[![Coverage](https://img.shields.io/badge/coverage-100%25-brightgreen.svg)](htmlcov/index.html)\n[![Code style: ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n[![Package manager: uv](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json)](https://github.com/astral-sh/uv)\n\nA Model Context Protocol (MCP) server that provides MetricFlow CLI tools through both SSE (with optional API key authentication) and STDIO interfaces.\n\n> [!WARNING]\n> This repository is a learning project focused on MetricFlow integration with MCP. For production use cases, please refer to the official [dbt-mcp](https://github.com/dbt-labs/dbt-mcp) implementation by dbt Labs.\n\n## Table of Contents\n\n- [mcp-metricflow](#mcp-metricflow)\n  - [Table of Contents](#table-of-contents)\n  - [Overview](#overview)\n  - [Setup](#setup)\n  - [Configuration](#configuration)\n  - [Running the MCP Server](#running-the-mcp-server)\n    - [STDIO Mode](#stdio-mode)\n    - [SSE Mode](#sse-mode)\n      - [API Key Authentication](#api-key-authentication)\n  - [Available Tools](#available-tools)\n  - [Project Structure](#project-structure)\n  - [Contributing \u2728](#contributing-)\n  - [TODO](#todo)\n\n## Overview\n\nThis project provides a Model Context Protocol (MCP) server that wraps MetricFlow CLI commands, making them accessible through both Server-Sent Events (SSE) and Standard Input/Output (STDIO) interfaces. It enables seamless integration with Claude Desktop and other MCP-compatible clients.\n\n## Setup\n\n```bash\n# Install uv at https://docs.astral.sh/uv/getting-started/installation/\n\n# Copy environment template\ncp .env.template .env\n# ...and then jump to # Configuration section to fulfill it\n```\n\n## Configuration\n\nEdit the `.env` file with your specific configuration:\n\n```bash\n# Required: Path to your dbt project\nDBT_PROJECT_DIR=/path/to/your/dbt/project e.g. /Users/dat/repos/il/jaffle-shop\n\n# Optional: Other configurations\nDBT_PROFILES_DIR=~/.dbt\nMF_PATH=mf\nMF_TMP_DIR=/tmp\n\n# SSE server configuration (optional)\nMCP_HOST=localhost\nMCP_PORT=8000\n\n# API key authentication for SSE mode (optional)\nMCP_API_KEY=your-secret-api-key\nMCP_REQUIRE_AUTH=false\n```\n\n## Running the MCP Server\n\n### STDIO Mode\n\nFor integration with Claude Desktop (or any other MCP Client tool), use STDIO mode with the following `uvx` command:\n\n```bash\nuvx --env-file /path/to/.env mcp-metricflow\n\n```\n\nAdd this configuration to the respective client's config file:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-metricflow\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"--env-file\",\n        \"<path-to-.env-file>\",\n        \"mcp-metricflow\"\n      ]\n    },\n  }\n}\n```\n\n### SSE Mode\n\nFor web-based integration or direct HTTP access:\n\n```bash\n# export DBT_PROFILES_DIR=~/.dbt\nuv run python src/main_sse.py\n```\n\nThe server will start on `http://localhost:8000` (or the host/port specified in your environment variables).\n\n#### API Key Authentication\n\nThe SSE server supports optional API key authentication. To enable authentication:\n\n1. Set the required environment variables:\n   ```bash\n   export MCP_API_KEY=\"your-secret-api-key\"\n   export MCP_REQUIRE_AUTH=\"true\"\n   ```\n\n2. Access authenticated endpoints by including the API key in the Authorization header:\n   ```bash\n   # Health check (no authentication required)\n   curl http://localhost:8000/health\n\n   # SSE endpoint (requires authentication when enabled)\n   curl -H \"Authorization: Bearer your-secret-api-key\" http://localhost:8000/sse\n   ```\n\n**Authentication Configuration:**\n- `MCP_API_KEY`: The secret API key for authentication (required when `MCP_REQUIRE_AUTH=true`)\n- `MCP_REQUIRE_AUTH`: Enable/disable authentication (`true`, `1`, `yes`, `on` to enable; default: `false`)\n\n**Security Notes:**\n- The `/health` endpoint is always accessible without authentication for monitoring purposes\n- The `/sse` endpoint requires authentication when `MCP_REQUIRE_AUTH=true`\n- API keys are case-sensitive and support special characters\n- Store API keys securely and avoid committing them to version control\n\n## Available Tools\n\nThe MCP server exposes the following MetricFlow CLI tools:\n\n| Tool | Description | Required Parameters | Optional Parameters |\n|------|-------------|-------------------|-------------------|\n| `query` | Execute MetricFlow queries | `session_id`, `metrics` | `group_by`, `start_time`, `end_time`, `where`, `order`, `limit`, `saved_query`, `explain`, `show_dataflow_plan`, `show_sql_descriptions` |\n| `list_metrics` | List available metrics | None | `search`, `show_all_dimensions` |\n| `list_dimensions` | List available dimensions | None | `metrics` |\n| `list_entities` | List available entities | None | `metrics` |\n| `list_dimension_values` | List values for a dimension | `dimension`, `metrics` | `start_time`, `end_time` |\n| `validate_configs` | Validate model configurations | None | `dw_timeout`, `skip_dw`, `show_all`, `verbose_issues`, `semantic_validation_workers` |\n| `health_checks` | Perform system health checks | None | None |\n\nEach tool includes comprehensive documentation accessible through the MCP interface.\n\n## Project Structure\n\n```\nsrc/\n\u251c\u2500\u2500 config/\n\u2502   \u2514\u2500\u2500 config.py              # Configuration management\n\u251c\u2500\u2500 server/\n\u2502   \u251c\u2500\u2500 auth.py                # API key authentication\n\u2502   \u251c\u2500\u2500 sse_server.py          # SSE server implementation\n\u2502   \u2514\u2500\u2500 stdio_server.py        # STDIO server implementation\n\u251c\u2500\u2500 tools/\n\u2502   \u251c\u2500\u2500 prompts/mf_cli/        # Tool documentation (*.md files)\n\u2502   \u251c\u2500\u2500 metricflow/            # MetricFlow CLI wrappers\n\u2502   \u2502   \u251c\u2500\u2500 base.py            # Shared command execution\n\u2502   \u2502   \u251c\u2500\u2500 query.py           # Query functionality\n\u2502   \u2502   \u251c\u2500\u2500 list_metrics.py    # List metrics\n\u2502   \u2502   \u251c\u2500\u2500 list_dimensions.py # List dimensions\n\u2502   \u2502   \u251c\u2500\u2500 list_entities.py   # List entities\n\u2502   \u2502   \u251c\u2500\u2500 list_dimension_values.py # List dimension values\n\u2502   \u2502   \u251c\u2500\u2500 validate_configs.py # Configuration validation\n\u2502   \u2502   \u2514\u2500\u2500 health_checks.py   # Health checks\n\u2502   \u2514\u2500\u2500 cli_tools.py           # MCP tool registration\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 logger.py              # Logging configuration\n\u2502   \u2514\u2500\u2500 prompts.py             # Prompt loading utilities\n\u251c\u2500\u2500 main_sse.py                # SSE server entry point\n\u2514\u2500\u2500 main_stdio.py              # STDIO server entry point\n```\n\n## Contributing \u2728\n\nIf you've ever wanted to contribute to this tool, and a great cause, now is your chance!\n\nSee the contributing docs [CONTRIBUTING](CONTRIBUTING.md) for more information.\n\nIf you've found this tool to be very helpful, please consider giving the repository a star, sharing it on social media, or even writing a blog post about it \ud83d\udc8c\n\n[![mcp-metricflow stars](https://img.shields.io/github/stars/datnguye/mcp-metricflow.svg?logo=github&style=for-the-badge&label=Star%20this%20repo)](https://github.com/datnguye/mcp-metricflow)\n[![buy me a coffee](https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?logo=buy-me-a-coffee&logoColor=white&labelColor=ff813f&style=for-the-badge)](https://www.buymeacoffee.com/datnguye)\n\nFinally, super thanks to our *Contributors*:\n\n<a href=\"https://github.com/datnguye/mcp-metricflow/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=datnguye/mcp-metricflow\" />\n</a>\n\n## TODO\n- Test STDIO mode\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "MIT License\n         \n         Copyright (c) 2025 Dat Nguyen\n         \n         Permission is hereby granted, free of charge, to any person obtaining a copy\n         of this software and associated documentation files (the \"Software\"), to deal\n         in the Software without restriction, including without limitation the rights\n         to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         copies of the Software, and to permit persons to whom the Software is\n         furnished to do so, subject to the following conditions:\n         \n         The above copyright notice and this permission notice shall be included in all\n         copies or substantial portions of the Software.\n         \n         THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n         SOFTWARE.\n         ", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "mcp-metricflow", "package_url": "https://pypi.org/project/mcp-metricflow/", "platform": null, "project_url": "https://pypi.org/project/mcp-metricflow/", "project_urls": null, "provides_extra": ["dev", "test"], "release_url": "https://pypi.org/project/mcp-metricflow/1.0.1b1/", "requires_dist": ["fastapi>=0.115.12", "uvicorn>=0.34.2", "dbt-metricflow>=0.8.2", "python-dotenv>=1.1.0", "mcp>=1.3.2", "black>=25.1.0; extra == \"dev\"", "ruff<=0.11.10,>=0.11.0; extra == \"dev\"", "bandit>=1.8.3; extra == \"dev\"", "pre-commit>=4.2.0; extra == \"dev\"", "poethepoet>=0.34.0; extra == \"dev\"", "dbt-snowflake>=1.8.0; extra == \"dev\"", "pytest>=8.0.0; extra == \"test\"", "pytest-asyncio>=0.25.0; extra == \"test\"", "pytest-cov>=6.0.0; extra == \"test\"", "pytest-mock>=3.14.0; extra == \"test\"", "pytest-sugar>=1.0.0; extra == \"test\"", "coverage[toml]>=7.6.0; extra == \"test\""], "requires_python": ">=3.10", "summary": "A Model Context Protocol (MCP) server that provides MetricFlow CLI tools", "version": "1.0.1b1", "yanked": false, "yanked_reason": null}, "last_serial": 30395181, "urls": [{"comment_text": null, "digests": {"blake2b_256": "306fe3278533bbef1918fde2cc93354d68ded01fe6121470dc05810989ead436", "md5": "f69c1a5c5223824591948b7c5f5ab84d", "sha256": "444555bf18c92bada5cf5b36d4f014f5276f47274e7ae80437f78ef6199c506c"}, "downloads": -1, "filename": "mcp_metricflow-1.0.1b1-py3-none-any.whl", "has_sig": false, "md5_digest": "f69c1a5c5223824591948b7c5f5ab84d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 28465, "upload_time": "2025-07-29T02:44:37", "upload_time_iso_8601": "2025-07-29T02:44:37.236452Z", "url": "https://files.pythonhosted.org/packages/30/6f/e3278533bbef1918fde2cc93354d68ded01fe6121470dc05810989ead436/mcp_metricflow-1.0.1b1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "1fafbf22fc6418098655044566fc2d831c8c10998e792b3bdb01703885c41ca9", "md5": "af4d3759e7dfc3301c64ac4be272c3af", "sha256": "5f9b644e4a31fbe520873e0854dd1d2a8f512ac0d8d6af3dd66f4e69c92cb13c"}, "downloads": -1, "filename": "mcp_metricflow-1.0.1b1.tar.gz", "has_sig": false, "md5_digest": "af4d3759e7dfc3301c64ac4be272c3af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 38772, "upload_time": "2025-07-29T02:44:38", "upload_time_iso_8601": "2025-07-29T02:44:38.286494Z", "url": "https://files.pythonhosted.org/packages/1f/af/bf22fc6418098655044566fc2d831c8c10998e792b3bdb01703885c41ca9/mcp_metricflow-1.0.1b1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:43:28 GMT", "package": "mifc-mcp-server", "version": "1.0.1", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "\u53d1\u5e03\u5230PyPi\nuv build \nuv publish --token [pypi-xxxxxxxxxx (token) ]\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "mifc-mcp-server", "package_url": "https://pypi.org/project/mifc-mcp-server/", "platform": null, "project_url": "https://pypi.org/project/mifc-mcp-server/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/mifc-mcp-server/1.0.1/", "requires_dist": ["bs4>=0.0.2", "dashscope>=1.23.5", "dotenv>=0.9.9", "httpx>=0.28.1", "mcp[cli]>=1.9.4", "mcp~=1.9.4", "pydantic~=2.11.7", "requests~=2.32.4"], "requires_python": ">=3.12", "summary": "MIFC\u52a9\u624b", "version": "1.0.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394929, "urls": [{"comment_text": null, "digests": {"blake2b_256": "40e827eca2de0fdf7145c6d38923c00aa8c6284d6a57cbd28a0d3eafb394044b", "md5": "f6e159ff6d63243a1a089075c14ee3af", "sha256": "ab19acfcc1229b91fd95535643ccb1ff410f493c8a2287f1d29bb7c31e6d06f1"}, "downloads": -1, "filename": "mifc_mcp_server-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f6e159ff6d63243a1a089075c14ee3af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.12", "size": 3207, "upload_time": "2025-07-29T02:43:28", "upload_time_iso_8601": "2025-07-29T02:43:28.028912Z", "url": "https://files.pythonhosted.org/packages/40/e8/27eca2de0fdf7145c6d38923c00aa8c6284d6a57cbd28a0d3eafb394044b/mifc_mcp_server-1.0.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "b91f848cd368f04c19c4d1e1a3720ab8649eaa2430593939d95a645aa29c3adf", "md5": "41a6571c074c7a9bf529563c8b955732", "sha256": "c25cd94a18ed26c3677210bc811f66e72c499961ce854cd96178d6cfaeb4c2e8"}, "downloads": -1, "filename": "mifc_mcp_server-1.0.1.tar.gz", "has_sig": false, "md5_digest": "41a6571c074c7a9bf529563c8b955732", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.12", "size": 49491, "upload_time": "2025-07-29T02:43:32", "upload_time_iso_8601": "2025-07-29T02:43:32.463970Z", "url": "https://files.pythonhosted.org/packages/b9/1f/848cd368f04c19c4d1e1a3720ab8649eaa2430593939d95a645aa29c3adf/mifc_mcp_server-1.0.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:43:24 GMT", "package": "wunderkafka", "version": "0.19.0", "json": {"info": {"author": null, "author_email": "Kirill Tribunsky <tribunsky.kir@yandex.ru>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Wunderkafka\n\n>The power of librdkafka for <s>humans</s> pythons\n\nWunderkafka provides a handful of facades for C-powered consumer/producer. It's built on top of the [confluent-kafka](https://pypi.org/project/confluent-kafka/)\n\nFor a quick view on what is going on, please check [Quickstart](https://wunderkafka.github.io/wunderkafka/pages/quickstart/) and [Documentation](https://wunderkafka.github.io/wunderkafka/)\n\nInstallation process described [here](https://wunderkafka.github.io/wunderkafka/pages/install/)\n\n## Features\n\n### #TypeSafe librdkafka config\n\nInstead of passing just a `dict` to consumer/producer config, the [pydantic-powered](https://github.com/marcosschroh/dataclasses-avroschema) config is used.\nIt is extracted directly from librdkafka's [CONFIGURATION.md](https://github.com/confluentinc/librdkafka/blob/master/CONFIGURATION.md) with some rough parsing.\n\n### Confluent & Cloudera Schema Registry support\n\nConfluent is used as-is, but hortonworks/cloudera schema registry client and (de)serialization protocol are implemented as well (no \"admin\" methods support).\n\n### Building Kit\n\nWunderkafka allows you to relatively simply build your own transport for message (de)serialization and eliminate boilerplates for typical cases.\n\n#### Pre-defined config models\n```python\nimport os\nfrom functools import partial\n\nfrom pydantic import field_validator, Field\nfrom wunderkafka.time import now\nfrom wunderkafka import SRConfig, ConsumerConfig, SecurityProtocol, AvroConsumer\n\n\n# If you are a fan of 12 factors, you may want to config via env variables\nclass OverridenSRConfig(SRConfig):\n    url: str = Field(alias='SCHEMA_REGISTRY_URL')\n\n    @field_validator('sasl_username')\n    @classmethod\n    def from_env(cls, v) -> str:\n        # And to use 'native' kerberos envs\n        return '{0}@{1}'.format(os.environ.get('KRB5_USER'), os.environ.get('KRB5_REALM'))\n\n\n# Or you want to override some defaults by default (pun intended)\nclass OverridenConfig(ConsumerConfig):\n    # Consumer which do not commit messages automatically\n    enable_auto_commit: bool = False\n    # And knows nothing after restart due to new gid.\n    group_id: str = 'wunderkafka-{0}'.format(now())\n    # More 12 factors\n    bootstrap_servers: str = Field(env='BOOTSTRAP_SERVER')\n    security_protocol: SecurityProtocol = SecurityProtocol.sasl_ssl\n    sasl_kerberos_kinit_cmd: str = ''\n    sr: SRConfig = OverridenSRConfig()\n\n    @field_validator('sasl_kerberos_kinit_cmd')\n    @classmethod\n    def format_keytab(cls, v) -> str:\n        if not v:\n            return 'kinit {0}@{1} -k -t {0}.keytab'.format(os.environ.get('KRB5_USER'), os.environ.get('KRB5_REALM'))\n        # Still allowing to set it manually\n        return str(v)\n\n\n# After this, you can `partial` your own Producer/Consumer, something like...\nMyConsumer = partial(AvroConsumer, config=OverridenConfig())\n# OR\nclass MyConsumer(AvroConsumer):\n    def __init__(self, config: ConsumerConfig = OverridenConfig()):\n        super().__init__(config)\n```\n#### Building your own transport\n\n```python\nfrom typing import Optional\n\nfrom pydantic import Field\n\nfrom wunderkafka.config.generated import enums\nfrom wunderkafka.consumers.bytes import BytesConsumer\nfrom wunderkafka.schema_registry import ClouderaSRClient\nfrom wunderkafka.serdes.headers import ConfluentClouderaHeadersHandler\nfrom wunderkafka.consumers.constructor import HighLevelDeserializingConsumer\nfrom wunderkafka.schema_registry.cache import SimpleCache\nfrom wunderkafka.schema_registry.transport import KerberizableHTTPClient\nfrom wunderkafka.serdes.avro.deserializers import FastAvroDeserializer\nfrom wunderkafka import SRConfig, ConsumerConfig, SecurityProtocol\n\n\nclass SRConfig(SRConfig):\n    url: str = Field(alias=\"SCHEMA_REGISTRY_URL\")\n    security_protocol: SecurityProtocol = SecurityProtocol.sasl_ssl\n    sasl_mechanism: str = \"SCRAM-SHA-512\"\n    sasl_username: str = Field(alias=\"SASL_USERNAME\")\n    sasl_password: str = Field(alias=\"SASL_PASSWORD\")\n\n\nclass OverridenConsumerConfig(ConsumerConfig):\n    enable_auto_commit: bool = False\n    auto_offset_reset: enums.AutoOffsetReset = enums.AutoOffsetReset.earliest\n    bootstrap_servers: str = Field(env=\"BOOTSTRAP_SERVERS\")\n    security_protocol: SecurityProtocol = SecurityProtocol.sasl_ssl\n    sasl_mechanism: str = \"SCRAM-SHA-512\"\n    sasl_username: str = Field(alias=\"SASL_USERNAME\")\n    sasl_password: str = Field(alias=\"SASL_PASSWORD\")\n    sr: SRConfig = Field(default_factory=SRConfig)\n\n\n# Pydantic/FastAPI style, but you can inherit from `HighLevelDeserializingConsumer` directly\ndef MyAvroConsumer(\n    config: Optional[ConsumerConfig] = None,\n) -> HighLevelDeserializingConsumer:\n    config = config or OverridenConsumerConfig()\n    return HighLevelDeserializingConsumer(\n        consumer=BytesConsumer(config),\n        schema_registry=ClouderaSRClient(KerberizableHTTPClient(config.sr), SimpleCache()),\n        headers_handler=ConfluentClouderaHeadersHandler().parse,\n        deserializer=FastAvroDeserializer(),\n    )\n```\n\n### Avro on-the-fly schema derivation\n\nSupports `dataclasses` and `pydantic.BaseModel` for avro serialization powered by [dataclasses-avroschema](https://github.com/marcosschroh/dataclasses-avroschema) and some rough \"metaprogramming\":\n```python\n# dataclass to AVRO schema example\nfrom dataclasses import dataclass\nfrom dataclasses_avroschema import AvroModel\n\n@dataclass\nclass SomeData(AvroModel):\n    field1: int\n    field2: str\n```\nfor a topic `topic_name` will become\n```json\n{\n      \"type\": \"record\",\n      \"name\": \"topic_name_value\",\n      \"fields\": [\n          {\n              \"name\": \"field1\",\n              \"type\": \"long\"\n          },\n          {\n              \"name\": \"field2\",\n              \"type\": \"string\"\n          }\n      ]\n  }\n```\nand\n```python\n# pydantic.BaseModel to AVRO schema example\n\nfrom typing import Optional\nfrom pydantic import BaseModel\n\nclass Event(BaseModel):\n  id: Optional[int]\n  ts: Optional[int] = None\n\n  class Meta:\n      namespace = \"any.data\"\n```\nfor a topic `topic_name` will become\n```json\n{\n      \"type\": \"record\",\n      \"name\": \"topic_name_value\",\n      \"namespace\": \"any.data\",\n      \"fields\": [\n          {\n              \"type\": [\"long\", \"null\"],\n              \"name\": \"id\"\n          },\n          {\n              \"type\": [\"null\", \"long\"],\n              \"name\": \"ts\",\n              \"default\": null\n          }\n      ]\n  }\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": "kafka, cloudera, confluent", "license": "Apache-2.0", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "wunderkafka", "package_url": "https://pypi.org/project/wunderkafka/", "platform": null, "project_url": "https://pypi.org/project/wunderkafka/", "project_urls": {"Bug Tracker": "https://github.com/wunderkafka/wunderkafka/issues", "Homepage": "https://github.com/wunderkafka/wunderkafka"}, "provides_extra": ["krb", "json", "iam"], "release_url": "https://pypi.org/project/wunderkafka/0.19.0/", "requires_dist": ["confluent-kafka[schema-registry]>=1.9.0", "avro-python3>=1.10.0", "dataclasses-avroschema[pydantic]>=0.53.0", "fastavro>=1.4.7", "pydantic-settings>2.0", "pydantic>=2.7.0", "setuptools>=80.3.1", "requests-kerberos>=0.13.0; extra == \"krb\"", "python-dateutil; extra == \"krb\"", "jsonschema>=4.17.3; extra == \"json\"", "aws-msk-iam-sasl-signer-python>=1.0.2; extra == \"iam\""], "requires_python": ">=3.9", "summary": "librdkafka-powered client for Kafka for python with (hopefully) more handful API", "version": "0.19.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394920, "urls": [{"comment_text": null, "digests": {"blake2b_256": "c56894998b27fc32ec6ddd3407470943cc03db184e318e51b769d6db7b4ce43c", "md5": "f4aa45570d9a0a7a7772a3dfcf23bc24", "sha256": "539d301213f4801d173966b37757aa93241a7bee98dae72297738c87710dbaf1"}, "downloads": -1, "filename": "wunderkafka-0.19.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f4aa45570d9a0a7a7772a3dfcf23bc24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.9", "size": 142902, "upload_time": "2025-07-29T02:43:24", "upload_time_iso_8601": "2025-07-29T02:43:24.117060Z", "url": "https://files.pythonhosted.org/packages/c5/68/94998b27fc32ec6ddd3407470943cc03db184e318e51b769d6db7b4ce43c/wunderkafka-0.19.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "902009f1e6b91a912111b86b6c6939b11e4be71c86bd2e02962efbac3a711a2b", "md5": "93ebf7677f9909986d48150c62d43ba4", "sha256": "8fb0b641e41fdd02f78f8b67e945518910947d37ad088470553ebe877923b15f"}, "downloads": -1, "filename": "wunderkafka-0.19.0.tar.gz", "has_sig": false, "md5_digest": "93ebf7677f9909986d48150c62d43ba4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 61358, "upload_time": "2025-07-29T02:43:25", "upload_time_iso_8601": "2025-07-29T02:43:25.380746Z", "url": "https://files.pythonhosted.org/packages/90/20/09f1e6b91a912111b86b6c6939b11e4be71c86bd2e02962efbac3a711a2b/wunderkafka-0.19.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:42:49 GMT", "package": "realitydefender", "version": "0.1.8", "json": {"info": {"author": "Reality Defender", "author_email": "Reality Defender <support@realitydefender.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Multimedia :: Graphics", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Security", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Reality Defender SDK for Python\n\n[![codecov](https://codecov.io/gh/Reality-Defender/realitydefender-sdk-python/graph/badge.svg?token=S64OCTEW6B)](https://codecov.io/gh/Reality-Defender/realitydefender-sdk-python)\n\nA Python SDK for the Reality Defender API to detect deepfakes and manipulated media.\n\n## Installation\n\n```bash\n# Using pip\npip install realitydefender\n\n# Using poetry\npoetry add realitydefender\n```\n\n## Getting Started\n\nFirst, you need to obtain an API key from the [Reality Defender Platform](https://app.realitydefender.ai).\n\n### Asynchronous Approach\n\nThis approach uses direct polling to wait for the analysis results.\n\n```python\nimport asyncio\nfrom realitydefender import RealityDefender\n\n\nasync def main():\n    # Initialize the SDK with your API key\n    print(\"Initializing Reality Defender SDK...\")\n    rd = RealityDefender(api_key=\"your-api-key\")\n\n    # Upload a file for analysis\n    print(\"Uploading file for analysis...\")\n    response = await rd.upload(file_path=\"/path/to/your/file.jpg\")\n    request_id = response[\"request_id\"]\n    print(f\"File uploaded successfully. Request ID: {request_id}\")\n\n    # Get results by polling until completion\n    print(\"Waiting for analysis results...\")\n    result = await rd.get_result(request_id)\n    print(\"Analysis complete!\")\n\n    # Process the results\n    print(\"\\nResults:\")\n    print(f\"Status: {result['status']}\")\n    print(f\"Score: {result['score']}\")\n\n    # List model results\n    print(\"\\nModel details:\")\n    for model in result[\"models\"]:\n        print(f\"{model['name']}: {model['status']} (Score: {model['score']})\")\n\n\n# Run the async function\nasyncio.run(main())\n```\n\n### Event-Based Approach\n\nThis approach uses event handlers to process results when they become available.\n\n```python\nimport asyncio\nfrom realitydefender import RealityDefender\n\n\nasync def main():\n    # Initialize the SDK\n    print(\"Initializing Reality Defender SDK...\")\n    rd = RealityDefender(api_key=\"your-api-key\")\n\n    # Set up event handlers\n    print(\"Setting up event handlers...\")\n    rd.on(\"result\", lambda result: print(f\"Result received: {result['status']} (Score: {result['score']})\"))\n    rd.on(\"error\", lambda error: print(f\"Error occurred: {error.message}\"))\n\n    # Upload and start polling\n    print(\"Uploading file for analysis...\")\n    response = await rd.upload(file_path=\"/path/to/your/file.jpg\")\n    request_id = response[\"request_id\"]\n    print(f\"File uploaded successfully. Request ID: {request_id}\")\n\n    print(\"Starting to poll for results...\")\n    await rd.poll_for_results(response[\"request_id\"])\n    print(\"Polling complete!\")\n\n\n# Run the async function\nasyncio.run(main())\n```\n\n## Architecture\n\nThe SDK is designed with a modular architecture for better maintainability and testability:\n\n- **Client**: HTTP communication with the Reality Defender API\n- **Core**: Configuration, constants, and callbacks\n- **Detection**: Media upload and results processing\n- **Models**: Data classes for API responses and SDK interfaces\n- **Utils**: File operations and helper functions\n\n## API Reference\n\nThe Reality Defender SDK uses asynchronous operations throughout.\n\n### Initialize the SDK\n\n```python\nrd = RealityDefender(\n    api_key=\"your-api-key\",  # Required: Your API key\n)\n```\n\n### Upload Media for Analysis\n\n```python\n# Must be called from within an async function\nresponse = await rd.upload(file_path=\"/path/to/file.jpg\")  # Required: Path to the file to analyze\n)\n```\n\nReturns: `{\"request_id\": str, \"media_id\": str}`\n\n### Get Results via Polling\n\n```python\n# Must be called from within an async function\n# This will poll until the analysis is complete\nresult = await rd.get_result(request_id)\n```\n\nReturns a dictionary with detection results:\n\n```python\n{\n    \"status\": str,  # Overall status (e.g., \"MANIPULATED\", \"AUTHENTIC\")\n    \"score\": float,  # Overall confidence score (0-1)\n    \"models\": [  # Array of model-specific results\n        {\n            \"name\": str,  # Model name\n            \"status\": str,  # Model-specific status\n            \"score\": float  # Model-specific score (0-1)\n        }\n    ]\n}\n```\n\n### Event-Based Results\n\n```python\n# Set up event handlers before polling\nrd.on(\"result\", callback_function)  # Called when results are available\nrd.on(\"error\", error_callback_function)  # Called if an error occurs\n\n# Start polling (must be called from within an async function)\nawait rd.poll_for_results(request_id)\n\n# Clean up when done (must be called from within an async function)\nawait rd.cleanup()\n```\n\n## Error Handling\n\nThe SDK raises exceptions for various error scenarios:\n\n```python\ntry:\n    result = rd.upload(file_path=\"/path/to/file.jpg\")\nexcept RealityDefenderError as error:\n    print(f\"Error: {error.message} ({error.code})\")\n    # Error codes: 'unauthorized', 'server_error', 'timeout', \n    # 'invalid_file', 'upload_failed', 'not_found', 'unknown_error'\n```\n\n## Supported file types and size limits\n\nThere is a size limit for each of the supported file types.\n\n| File Type | Extensions                                 | Size Limit (bytes) | Size Limit (MB) |\n|-----------|--------------------------------------------|--------------------|-----------------|\n| Video     | .mp4, .mov                                 | 262,144,000        | 250 MB          |\n| Image     | .jpg, .png, .jpeg, .gif, .webp             | 52,428,800         | 50 MB           |\n| Audio     | .flac, .wav, .mp3, .m4a, .aac, .alac, .ogg | 20,971,520         | 20 MB           |\n| Text      | .txt                                       | 5,242,880          | 5 MB            |\n\n## Examples\n\nSee the `examples` directory for more detailed usage examples.\n\n## Running Examples\n\nTo run the example code in this SDK, follow these steps:\n\n```bash\n# Navigate to the python directory\ncd python\n\n# Install the package in development mode\npip install -e .\n\n# Set your API key\nexport REALITY_DEFENDER_API_KEY='<your-api-key>'\n\n# Run the example\npython examples/basic_usage.py\n```\n\nThe example code demonstrates how to upload a sample image and process the detection results. ", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "deepfake, ai, detection, reality defender, media authentication, computer vision", "license": null, "license_expression": "Apache-2.0", "license_files": null, "maintainer": null, "maintainer_email": null, "name": "realitydefender", "package_url": "https://pypi.org/project/realitydefender/", "platform": null, "project_url": "https://pypi.org/project/realitydefender/", "project_urls": {"Documentation": "https://github.com/Reality-Defender/eng-sdk/tree/main/python", "Issue Tracker": "https://github.com/Reality-Defender/eng-sdk/issues", "Source": "https://github.com/Reality-Defender/eng-sdk"}, "provides_extra": null, "release_url": "https://pypi.org/project/realitydefender/0.1.8/", "requires_dist": ["aiohttp>=3.8.0", "asyncio-atexit>=1.0.1", "certifi>=2025.4.26"], "requires_python": ">=3.10", "summary": "SDK for the Reality Defender deepfake detection API", "version": "0.1.8", "yanked": false, "yanked_reason": null}, "last_serial": 30394888, "urls": [{"comment_text": null, "digests": {"blake2b_256": "a6cb280103cbbb7a2387bb17927f2f7afc3e86cf2f5d399470d9118f3eff4a71", "md5": "5a8347e3eace84c354be4b7eda1543f4", "sha256": "d42a0096f27be21bfe73651e1b1d81aab079ce62e76f45613bc0c59e3e465598"}, "downloads": -1, "filename": "realitydefender-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "5a8347e3eace84c354be4b7eda1543f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 20857, "upload_time": "2025-07-29T02:42:49", "upload_time_iso_8601": "2025-07-29T02:42:49.621750Z", "url": "https://files.pythonhosted.org/packages/a6/cb/280103cbbb7a2387bb17927f2f7afc3e86cf2f5d399470d9118f3eff4a71/realitydefender-0.1.8-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "9eec2041aa0499cdd9190c435f5bded0f9a79ad58c5db909f6b00a31f6103566", "md5": "cffa1190f8d6c349aa3dee30a71c8448", "sha256": "c04dd3d7ca338290c05774533636818ffa85d4560b972abe8eb716b98341a6b5"}, "downloads": -1, "filename": "realitydefender-0.1.8.tar.gz", "has_sig": false, "md5_digest": "cffa1190f8d6c349aa3dee30a71c8448", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 14991, "upload_time": "2025-07-29T02:42:50", "upload_time_iso_8601": "2025-07-29T02:42:50.563331Z", "url": "https://files.pythonhosted.org/packages/9e/ec/2041aa0499cdd9190c435f5bded0f9a79ad58c5db909f6b00a31f6103566/realitydefender-0.1.8.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:41:45 GMT", "package": "detaillogger", "version": "0.1.0", "json": {"info": {"author": null, "author_email": "Ryan LaPine <github.stunt845@passinbox.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# \ud83d\udccb DetailLogger\r\n\r\n[![Python](https://img.shields.io/badge/python-3.10%2B-blue)](https://www.python.org/downloads/)\r\n[![License](https://img.shields.io/badge/license-MIT-green)](LICENSE)\r\n[![GitHub Stars](https://img.shields.io/github/stars/rlapine/detaillogger?style=social)](https://github.com/rlapine/detaillogger/stargazers)\r\n[![GitHub Forks](https://img.shields.io/github/forks/rlapine/detaillogger?style=social)](https://github.com/rlapine/detaillogger/network/members)\r\n[![Tests](https://github.com/rlapine/detaillogger/actions/workflows/python-tests.yml/badge.svg)](https://github.com/rlapine/detaillogger/actions)\r\n\r\n**Version:** 1.0  \r\n**Date:** July 28, 2025\r\n\r\nDetailLogger is a lightweight Python utility for enhanced logging and exception tracing. It automatically captures contextual information\u2014such as file name, function, and line number\u2014whenever messages or exceptions are logged. Ideal for debugging, monitoring, and building maintainable systems.\r\n\r\n---\r\n\r\n## \ud83d\udce6 Installation\r\n\r\nClone this repository:\r\n\r\n```bash\r\ngit clone https://github.com/rlapine/detaillogger.git\r\ncd detaillogger\r\n```\r\n\r\nNo external dependencies are required.\r\n\r\n---\r\n\r\n## \u2699\ufe0f Features\r\n\r\n- \u2705 Logs messages with caller context  \r\n- \u2705 Captures exceptions with full traceback  \r\n- \u2705 Supports console and file-based logging  \r\n- \u2705 Uses wrapper functions for quick integration  \r\n- \u2705 Built entirely on standard libraries\r\n\r\n---\r\n\r\n## \ud83e\uddea Usage\r\n\r\n### Run the built-in CLI for testing:\r\n\r\n```bash\r\npython detaillogger.py\r\n```\r\n\r\n### Embedded Example\r\n\r\n```python\r\nfrom detaillogger import log, log_exception\r\n\r\nlog(\"This is a message to log.\")\r\n\r\ntry:\r\n    x = 1 / 0\r\nexcept Exception as e:\r\n    log_exception(e, details=\"Divide-by-zero detected\")\r\n```\r\n\r\n**Console Output:**\r\n\r\n```\r\n2025-07-28 17:02:27,674 - DEBUG - Details:  This is a message to log.\r\n2025-07-28 17:02:27,674 - DEBUG - From:     c:\\Users\\ryan\\...detaillogger.py\r\n2025-07-28 17:02:27,675 - DEBUG - Function: main()\r\n2025-07-28 17:02:27,675 - DEBUG - Line:     178\r\n```\r\n\r\nlog_exception(ZeroDivisionEX, \"Additional info\")\r\n\r\n**Console Output:**\r\n\r\n```\r\n2025-07-28 17:05:22,185 - DEBUG - Exception type:    ZeroDivisionError\r\n2025-07-28 17:05:22,186 - DEBUG - Exception message: division by zero\r\n2025-07-28 17:05:22,186 - DEBUG - Details:           Additional info\r\n2025-07-28 17:05:22,186 - DEBUG - File:              ...detaillogger.py\r\n2025-07-28 17:05:22,186 - DEBUG - Function:          main\r\n2025-07-28 17:05:22,186 - DEBUG - Line:              185\r\n```\r\n\r\nTo specify a log file or change logging level, instantiate the `DetailLogger` class with `filename` and `level` parameters:\r\n\r\n---\r\n\r\n## \u270d\ufe0f API Overview\r\n\r\n- `DetailLogger(level, fmt, file_name)`: Create an instance with optional file output and log level  \r\n- `log(message: str)`: Logs message with caller metadata  \r\n- `log_exception(ex: BaseException, details: Optional[str])`: Logs exception type, message, optional details, and source context\r\n\r\n---\r\n\r\n## \ud83e\uddf1 File Structure\r\n\r\n```\r\ndetaillogger/\r\n\u251c\u2500\u2500 detaillogger.py       # Core module\r\n\u251c\u2500\u2500 test_detaillogger.py  # Unit test suite\r\n\u251c\u2500\u2500 README.md             # Documentation\r\n\u251c\u2500\u2500 detaillogger.log      # Optional output log file\r\n```\r\n\r\n---\r\n\r\n## \ud83d\udea6 Continuous Integration\r\n\r\nTests are run on every push and pull request using GitHub Actions.  \r\nYou can view results [here](https://github.com/rlapine/detaillogger/actions).\r\n\r\n---\r\n\r\n## \ud83d\udee0\ufe0f Future Enhancements\r\n\r\n- Support asynchronous logging  \r\n- Add JSON output mode  \r\n- Enable depth-limited stack inspection\r\n- Add db logging\r\n\r\n---\r\n\r\n## \ud83e\udd1d Contributing\r\n\r\nPull requests are welcome! For major changes, open an issue to discuss improvements first.\r\n\r\n---\r\n\r\n## \ud83d\udcc4 License\r\n\r\nThis project is licensed under the [MIT License](LICENSE).\r\n\r\n---\r\n\r\n## \ud83d\udc64 Author\r\n\r\nCreated by [@rlapine](https://github.com/rlapine) \u2014 a technically skilled developer focused on clarity, maintainability, and audience-ready documentation. This class is part of a broader effort to build reusable, well-documented tools for data-driven projects.\r\n\r\n---\r\n\r\n## \ud83d\udcec Contact\r\n\r\nFeel free to reach out with questions or collaboration ideas:\r\n\r\n\ud83d\udce7 github.stunt845@passinbox.com  \r\n\ud83d\udd17 GitHub: [@rlapine](https://github.com/rlapine)\r\n```\r\n\r\n---\r\n\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": null, "license": "MIT License\r\n        \r\n        Copyright (c) 2025 Ryan LaPine\r\n        \r\n        Permission is hereby granted, free of charge, to any person obtaining a copy\r\n        of this software and associated documentation files (the \"Software\"), to deal\r\n        in the Software without restriction, including without limitation the rights\r\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n        copies of the Software, and to permit persons to whom the Software is\r\n        furnished to do so, subject to the following conditions:\r\n        \r\n        The above copyright notice and this permission notice shall be included in all\r\n        copies or substantial portions of the Software.\r\n        \r\n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n        SOFTWARE.\r\n        ", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": "Ryan LaPine <github.stunt845@passinbox.com>", "name": "detaillogger", "package_url": "https://pypi.org/project/detaillogger/", "platform": null, "project_url": "https://pypi.org/project/detaillogger/", "project_urls": {"Documentation": "https://github.com/rlapine/detaillogger#readme", "Homepage": "https://github.com/rlapine/detaillogger", "Issues": "https://github.com/rlapine/detaillogger/issues", "Source": "https://github.com/rlapine/detaillogger"}, "provides_extra": null, "release_url": "https://pypi.org/project/detaillogger/0.1.0/", "requires_dist": ["typing-extensions"], "requires_python": ">=3.8", "summary": "# \ud83d\udccb DetailLogger", "version": "0.1.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394832, "urls": [{"comment_text": null, "digests": {"blake2b_256": "72ea2678fe648a1385247a562485585f98f9d8e118db0a7805a88ac55f42df33", "md5": "58de7a390438d5d452ee396a9fc9b581", "sha256": "fdccd80f05495748918835e79fea19e3cefaeeeb423b739ecad6528d266fafda"}, "downloads": -1, "filename": "detaillogger-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "58de7a390438d5d452ee396a9fc9b581", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 4815, "upload_time": "2025-07-29T02:41:45", "upload_time_iso_8601": "2025-07-29T02:41:45.474865Z", "url": "https://files.pythonhosted.org/packages/72/ea/2678fe648a1385247a562485585f98f9d8e118db0a7805a88ac55f42df33/detaillogger-0.1.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "6e54eecb9606cb813f9b9d8ace11eef691792a206aa14d096c4290e33fa24a79", "md5": "2e0b72152ca6c8ec6ec3f135f5645890", "sha256": "ad217b2b18856530a2dd032a77001f3be956d60c1bd5487db8bfa8b69963c424"}, "downloads": -1, "filename": "detaillogger-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2e0b72152ca6c8ec6ec3f135f5645890", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4209, "upload_time": "2025-07-29T02:41:46", "upload_time_iso_8601": "2025-07-29T02:41:46.499380Z", "url": "https://files.pythonhosted.org/packages/6e/54/eecb9606cb813f9b9d8ace11eef691792a206aa14d096c4290e33fa24a79/detaillogger-0.1.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:41:13 GMT", "package": "odoo-addon-calendar-export-ics", "version": "18.0.1.0.1.4", "json": {"info": {"author": "ForgeFlow S.L.,Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n=====================\nCalendar - Export ics\n=====================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:7069d306372ffbd91fe053e0a34f3b0fb777ad34ca7f7db992ccc799e61293ac\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fcalendar-lightgray.png?logo=github\n    :target: https://github.com/OCA/calendar/tree/18.0/calendar_export_ics\n    :alt: OCA/calendar\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/calendar-18-0/calendar-18-0-calendar_export_ics\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/calendar&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module adds a new wizard that allows you to export odoo calendar\ninto an .ics file.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nUsage\n=====\n\nTo use this module, follow these steps:\n\n1. Navigate to the Calendar App.\n2. Go to Configuration.\n3. Select Export to ICS File.\n\nWhen exporting, you have two options:\n\n- Specify the maximum date of the calendar you want to export.\n- Leave the date field empty to export all events from your calendar.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/calendar/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/calendar/issues/new?body=module:%20calendar_export_ics%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* ForgeFlow S.L.\n\nContributors\n------------\n\n- Arnau Cruz <arnau.cruz@forgeflow.com>\n\nDo not contact contributors directly about support or help with\ntechnical issues.\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/calendar <https://github.com/OCA/calendar/tree/18.0/calendar_export_ics>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/calendar", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-calendar-export-ics", "package_url": "https://pypi.org/project/odoo-addon-calendar-export-ics/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-calendar-export-ics/", "project_urls": {"Homepage": "https://github.com/OCA/calendar"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-calendar-export-ics/18.0.1.0.1.4/", "requires_dist": ["odoo==18.0.*"], "requires_python": ">=3.10", "summary": "Allow exporting odoo calendar to an ics file", "version": "18.0.1.0.1.4", "yanked": false, "yanked_reason": null}, "last_serial": 30394812, "urls": [{"comment_text": "", "digests": {"blake2b_256": "865d68e0abe95ff0753b843d81b2efecd4674b0659748cffc5d024edb3420558", "md5": "1c099ccf52ac136dd5239aba101282af", "sha256": "e1a6fe8039167fbe18a66f101bb3632b2e915c2682384f05d23c648bd1d70c84"}, "downloads": -1, "filename": "odoo_addon_calendar_export_ics-18.0.1.0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1c099ccf52ac136dd5239aba101282af", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 25945, "upload_time": "2025-07-29T02:41:13", "upload_time_iso_8601": "2025-07-29T02:41:13.157046Z", "url": "https://files.pythonhosted.org/packages/86/5d/68e0abe95ff0753b843d81b2efecd4674b0659748cffc5d024edb3420558/odoo_addon_calendar_export_ics-18.0.1.0.1.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:41:10 GMT", "package": "odoo-addon-calendar-import-ics", "version": "18.0.1.0.1.3", "json": {"info": {"author": "ForgeFlow S.L.,Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n=====================\nCalendar - Import ics\n=====================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:0b76e943a6186b958123d04eef313d6d66e7b9361daf4122b045fbca02b88b23\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fcalendar-lightgray.png?logo=github\n    :target: https://github.com/OCA/calendar/tree/18.0/calendar_import_ics\n    :alt: OCA/calendar\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/calendar-18-0/calendar-18-0-calendar_import_ics\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/calendar&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module adds a new wizard that allows you to import .ics files into\nodoo calendar, importing events and the following attributes:\n\n- Summary\n- Start Date\n- End Date\n- UID\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nUsage\n=====\n\nTo use this module, follow these steps:\n\n1. Navigate to the Calendar App.\n2. Go to Configuration.\n3. Select Import ICS File.\n\nWhen importing, you have two options:\n\n- Specify start and end dates to import events occurring within that\n  range.\n- Leave the date fields empty to import all events from the entire file.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/calendar/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/calendar/issues/new?body=module:%20calendar_import_ics%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* ForgeFlow S.L.\n\nContributors\n------------\n\n- Arnau Cruz <arnau.cruz@forgeflow.com>\n\nDo not contact contributors directly about support or help with\ntechnical issues.\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/calendar <https://github.com/OCA/calendar/tree/18.0/calendar_import_ics>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/calendar", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-calendar-import-ics", "package_url": "https://pypi.org/project/odoo-addon-calendar-import-ics/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-calendar-import-ics/", "project_urls": {"Homepage": "https://github.com/OCA/calendar"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-calendar-import-ics/18.0.1.0.1.3/", "requires_dist": ["odoo==18.0.*"], "requires_python": ">=3.10", "summary": "Allow importing an ics file to our calendar", "version": "18.0.1.0.1.3", "yanked": false, "yanked_reason": null}, "last_serial": 30394808, "urls": [{"comment_text": "", "digests": {"blake2b_256": "6fae840d2203ee5c9ddd9e2b8fabb9bb83f3284680e7eef2423fdcfe11d4796b", "md5": "e5a301f987ed6ed2c97b458fe15f723f", "sha256": "936a4bbaab3903f901ce6d95552f30c74dd88eb6ae37588b02a67044c1bb50e2"}, "downloads": -1, "filename": "odoo_addon_calendar_import_ics-18.0.1.0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e5a301f987ed6ed2c97b458fe15f723f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 29778, "upload_time": "2025-07-29T02:41:10", "upload_time_iso_8601": "2025-07-29T02:41:10.563707Z", "url": "https://files.pythonhosted.org/packages/6f/ae/840d2203ee5c9ddd9e2b8fabb9bb83f3284680e7eef2423fdcfe11d4796b/odoo_addon_calendar_import_ics-18.0.1.0.1.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:41:02 GMT", "package": "insurgentai-shared-utils", "version": "0.4.16", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# Knowledge Graph Shared Utils\n\nShared utilities for the Knowledge Graph system, providing database clients, SQL models, and query utilities for both regular PostgreSQL operations and Apache AGE graph database operations.\n\n## Features\n\n- **Dual Database Support**: Separate clients for PostgreSQL (SQLModel) and Apache AGE (psycopg)\n- **Type-Safe Models**: SQLModel-based SQL models with proper relationships\n- **Query Utilities**: Modular query functions for different data types\n- **Connection Management**: Scoped and persistent session support\n- **Event Contracts**: Standardized event definitions for system communication\n\n## Quick Start\n\n```python\nfrom shared_utils.clients.db_client import create_db_client\nfrom shared_utils.clients.age_client import create_age_client\nfrom shared_utils.queries import documents, apache_age\n\n# Regular database operations\ndb_client = create_db_client()\nwith db_client.scoped_session() as session:\n    doc = documents.get_document(session, document_id)\n\n# Graph database operations  \nage_client = create_age_client()\nwith age_client.scoped_session() as conn:\n    nodes = apache_age.find_nodes(conn, age_client.get_graph_name(), \"Person\")\n```\n\n## Documentation\n\nSee [ARCHITECTURE.md](./ARCHITECTURE.md) for detailed documentation on:\n- Database client architecture\n- SQL models and relationships\n- Query module organization\n- Environment configuration\n- Best practices and migration notes\n\n## Installation\n\nInstall with your package manager:\n```bash\npip install -e .\n```\n\nRequired dependencies are specified in `pyproject.toml`.\n\n## Environment Variables\n\nSee the architecture guide for complete environment variable requirements for both PostgreSQL and Apache AGE connections.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "insurgentai-shared-utils", "package_url": "https://pypi.org/project/insurgentai-shared-utils/", "platform": null, "project_url": "https://pypi.org/project/insurgentai-shared-utils/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/insurgentai-shared-utils/0.4.16/", "requires_dist": ["fastapi[standard]>=0.115.12", "psycopg[binary,pool]>=3.2.6", "pydantic>=2.11.7", "sqlmodel>=0.0.24", "redis", "aioboto3", "asyncpg>=0.29.0", "sqlalchemy[asyncio]>=2.0.0"], "requires_python": ">=3.12", "summary": "A collection of shared utility functions for InsurgentAI microservices.", "version": "0.4.16", "yanked": false, "yanked_reason": null}, "last_serial": 30394803, "urls": [{"comment_text": null, "digests": {"blake2b_256": "0267e7ff329f9d87e5e7f0264d0d82a0b793fc1d439ebe67c5c27c80ef458aaf", "md5": "718fc7fea862702ca3536ec686f64853", "sha256": "2fec2b87c96a428948d4d7440eaba39d11b288961e6725384168e45716ede63e"}, "downloads": -1, "filename": "insurgentai_shared_utils-0.4.16-py3-none-any.whl", "has_sig": false, "md5_digest": "718fc7fea862702ca3536ec686f64853", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.12", "size": 33547, "upload_time": "2025-07-29T02:41:02", "upload_time_iso_8601": "2025-07-29T02:41:02.783376Z", "url": "https://files.pythonhosted.org/packages/02/67/e7ff329f9d87e5e7f0264d0d82a0b793fc1d439ebe67c5c27c80ef458aaf/insurgentai_shared_utils-0.4.16-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:40:59 GMT", "package": "macrotype", "version": "0.2.0", "json": {"info": {"author": null, "author_email": "Kurt Rose <kurt@kurtrose.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only"], "description": "# Macrotype\r\n\r\nConsider this:\r\n\r\n```python\r\nVAL = 42\r\n\r\ndef get() -> type(VAL):\r\n    return VAL\r\n```\r\n\r\nThis is perfectly valid python, but type checkers don't accept it.\r\nInstead, you are supposed to write out all type references statically,\r\nor use very limited global aliases.\r\n\r\n`macrotype` makes this work exactly as you expect, with all static\r\ntype checkers.  So your types can be as dynamic as the rest of your\r\npython code.\r\n\r\n# How?\r\n\r\n`macrotype` is a CLI tool intended to be run before static type checking:\r\n\r\n```bash\r\nmacrotype your_module\r\n```\r\n\r\n`macrotype` imports your modules under normal python,\r\nand then generates corresponding `.pyi` files with\r\nall types pinned statically so the type checker can understand them.\r\n\r\nIn our example, `macrotype` would generate this:\r\n\r\n```python\r\nVAL: int\r\n\r\ndef get() -> int: ...\r\n```\r\n\r\n`macrotype` is the bridge between static type checkers\r\nand your dynamic code.  `macrotype` will import your modules as\r\npython, and then re-export the runtime types back out into a form\r\nthat static type checkers can consume.\r\n\r\n# What else?\r\n\r\nIn addition to the CLI tool, there are also helpers for generating\r\ndynamic types.  See `macrotype.meta_types`.  These are intended\r\nfor you to import to enable dynamic programming patterns which\r\nwould be unthinkable without `macrotype`.\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": null, "license": "MIT License\r\n        \r\n        Copyright (c) 2025 Kurt Rose\r\n        \r\n        Permission is hereby granted, free of charge, to any person obtaining a copy\r\n        of this software and associated documentation files (the \"Software\"), to deal\r\n        in the Software without restriction, including without limitation the rights\r\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n        copies of the Software, and to permit persons to whom the Software is\r\n        furnished to do so, subject to the following conditions:\r\n        \r\n        The above copyright notice and this permission notice shall be included in all\r\n        copies or substantial portions of the Software.\r\n        \r\n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\n        SOFTWARE.\r\n        ", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "macrotype", "package_url": "https://pypi.org/project/macrotype/", "platform": null, "project_url": "https://pypi.org/project/macrotype/", "project_urls": null, "provides_extra": ["test", "build"], "release_url": "https://pypi.org/project/macrotype/0.2.0/", "requires_dist": ["mypy; extra == \"test\"", "ruff; extra == \"test\"", "pytest; extra == \"test\"", "build; extra == \"build\"", "twine; extra == \"build\""], "requires_python": ">=3.12", "summary": "Generate .pyi stub files from existing modules", "version": "0.2.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394801, "urls": [{"comment_text": null, "digests": {"blake2b_256": "e43a6948ed3036617a6c1be07a7d3498243bb4650319f79573a7d13de1c881f3", "md5": "a576db89062ab6111c34678c0781186f", "sha256": "48d49390a64714a28d7b78b6be994094922cdd237c004f4bd93fa3a2623c7776"}, "downloads": -1, "filename": "macrotype-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a576db89062ab6111c34678c0781186f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.12", "size": 37926, "upload_time": "2025-07-29T02:40:59", "upload_time_iso_8601": "2025-07-29T02:40:59.929600Z", "url": "https://files.pythonhosted.org/packages/e4/3a/6948ed3036617a6c1be07a7d3498243bb4650319f79573a7d13de1c881f3/macrotype-0.2.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "6214e6dd965e7174e4bd07670c7e778d70bbeb5785ddbe8b90bf063b10f27589", "md5": "c5217d7add5de96d00d9064aa38d2d62", "sha256": "9b9860c21295bd8d15070ac05858094548fcac7ba5edbeb477860eb3ad916985"}, "downloads": -1, "filename": "macrotype-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c5217d7add5de96d00d9064aa38d2d62", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.12", "size": 28980, "upload_time": "2025-07-29T02:41:00", "upload_time_iso_8601": "2025-07-29T02:41:00.836049Z", "url": "https://files.pythonhosted.org/packages/62/14/e6dd965e7174e4bd07670c7e778d70bbeb5785ddbe8b90bf063b10f27589/macrotype-0.2.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:40:49 GMT", "package": "rcabench", "version": "1.0.57", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# RCABench SDK\n\nA Python SDK for interacting with RCABench services.\n\n## Installation\n\n### From PyPI\n\n```bash\npip install rcabench\n```\n\n### From Source\n\n```bash\n# Clone the repository\ngit clone https://github.com/your-username/rcabench.git\ncd rcabench/sdk/python\n\n# Install the package\npip install -e .\n```\n\n## Building the Package\n\nTo build the package for distribution:\n\n```bash\n# Install build dependencies\npip install build\n\n# Build the package\npython -m build\n\n# This will create distribution files in the dist/ directory\n```\n\n## Usage\n\n```python\nfrom rcabench import RCABenchSDK\n\n# Initialize the SDK\nsdk = RCABenchSDK(\"http://localhost:8082\")\n\n# Get available algorithms\nalgorithms = sdk.algorithm.list()\nprint(algorithms)\n\n# Submit an injection task\ninjection_payload = [{\n    \"duration\": 1,\n    \"faultType\": 5,\n    \"injectNamespace\": \"ts\",\n    \"injectPod\": \"ts-preserve-service\",\n    \"spec\": {\"CPULoad\": 1, \"CPUWorker\": 3},\n    \"benchmark\": \"clickhouse\",\n}]\nresponse = sdk.injection.execute(injection_payload)\nprint(response)\n\n# Run an algorithm\nalgorithm_payload = [{\n    \"benchmark\": \"clickhouse\",\n    \"algorithm\": \"e-diagnose\", \n    \"dataset\": \"dataset-name\",\n}]\nresponse = sdk.algorithm.execute(algorithm_payload)\nprint(response)\n```\n\n## API Reference\n\nThe SDK provides the following main components:\n\n- `RCABenchSDK`: The main entry point for the SDK\n  - `algorithm`: For interacting with algorithm endpoints\n  - `evaluation`: For interacting with evaluation endpoints\n  - `injection`: For interacting with injection endpoints\n\nFor detailed API documentation, please refer to the code docstrings.\n\n## Requirements\n\n- Python 3.8 or higher\n- `requests` and `aiohttp` libraries\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "rcabench", "package_url": "https://pypi.org/project/rcabench/", "platform": null, "project_url": "https://pypi.org/project/rcabench/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/rcabench/1.0.57/", "requires_dist": ["aiohttp>=3.8.0", "click>=8.2.1", "loguru>=0.7.3", "pydantic>=2.10.6", "python-dateutil>=2.9.0.post0", "requests>=2.32.3", "rich>=13.0.0", "setuptools>=75.6.0", "tqdm>=4.67.1", "twine>=5.1.1", "typer>=0.16.0", "typing-extensions>=4.12.2", "urllib3<3.0.0,>=2.2.3", "wheel>=0.45.1"], "requires_python": ">=3.10", "summary": "RCABench SDK", "version": "1.0.57", "yanked": false, "yanked_reason": null}, "last_serial": 30394795, "urls": [{"comment_text": null, "digests": {"blake2b_256": "85fb55ffadef2710c17b349480a171432f432f4d673d3b513bd4de5ec58ca492", "md5": "3969ae0e19064afb345b5b1c01f3876d", "sha256": "cf5cc8a6fb8c05ecc512d8577276026e4dbf5f2d95c528f378fc9b75200e1d51"}, "downloads": -1, "filename": "rcabench-1.0.57-py3-none-any.whl", "has_sig": false, "md5_digest": "3969ae0e19064afb345b5b1c01f3876d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 718541, "upload_time": "2025-07-29T02:40:49", "upload_time_iso_8601": "2025-07-29T02:40:49.215226Z", "url": "https://files.pythonhosted.org/packages/85/fb/55ffadef2710c17b349480a171432f432f4d673d3b513bd4de5ec58ca492/rcabench-1.0.57-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "e2d909d60046934c69fbf56ebeed9290bcbebd43da1f30ebfccbe57aa9e16b49", "md5": "7b66a6343b16933bbcc7dc348bd8d380", "sha256": "284da46a5ccd634861a0d4390a3a0090ea9cd3b58d9a0c0d820a09a52eb4e9aa"}, "downloads": -1, "filename": "rcabench-1.0.57.tar.gz", "has_sig": false, "md5_digest": "7b66a6343b16933bbcc7dc348bd8d380", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 252222, "upload_time": "2025-07-29T02:40:51", "upload_time_iso_8601": "2025-07-29T02:40:51.048455Z", "url": "https://files.pythonhosted.org/packages/e2/d9/09d60046934c69fbf56ebeed9290bcbebd43da1f30ebfccbe57aa9e16b49/rcabench-1.0.57.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:39:42 GMT", "package": "terraformat", "version": "0.1.4", "json": {"info": {"author": "Henry Upton-Birdsall", "author_email": "henryupton@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "# terraformat\n\nA wrapper for the Terraform CLI that provides a formatted plan summary.\n\n## Overview\n\n**terraformat** is a command-line tool designed to improve the readability of `terraform plan` outputs. It runs your Terraform plan and summarizes the planned resource changes (create, update, destroy) in a color-coded, tabular format. This helps teams more quickly and safely review infrastructure changes before applying them.\n\n## Features\n\n- Runs any `terraform` command, but enhances `terraform plan` with a summary table\n- Color-coded output for quick identification of create (green), update (yellow), and destroy (red) actions\n- Parses complex Terraform resource addresses, including those in modules\n- Integrates seamlessly into existing Terraform workflows\n\n## Installation\n\n```bash\npip install .\npip install git+https://github.com/henryupton/terraformat.git\n```\n\n## Requirements\n* Python 3.7+\n* Terraform installed and available in your PATH\n\n### Python dependencies (installed automatically):\n* click\n* tabulate\n\n## Usage\n\nAfter installation, you can use terraformat as a drop-in replacement for terraform. All commands are passed through to Terraform, but plan will be summarized:\n\n```bash\nterraformat plan [ARGS...]\n```\n\n#### Example output\n```bash\n\ud83d\ude80 Running 'terraform plan'...\n--- Original Terraform Output ---\n[standard terraform plan output here]\n\n==================================================\n\ud83d\udcca Terraformat Summary\n==================================================\n+----------------+---------+---------+----------+\n| Resource Type  | Create  | Update  | Destroy  |\n+================+=========+=========+==========+\n| aws_instance   |   1     |   0     |    1     |\n| local_file     |   1     |   0     |    0     |\n| random_pet     |   0     |   1     |    0     |\n+----------------+---------+---------+----------+\n| Total          |   2     |   1     |    1     |\n+----------------+---------+---------+----------+\n```\n\nIf you run other Terraform commands, they\u2019re just passed through unchanged:\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "License-File", "Provides-Extra", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/henryupton/terraformat", "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "terraformat", "package_url": "https://pypi.org/project/terraformat/", "platform": null, "project_url": "https://pypi.org/project/terraformat/", "project_urls": {"Homepage": "https://github.com/henryupton/terraformat"}, "provides_extra": ["test"], "release_url": "https://pypi.org/project/terraformat/0.1.4/", "requires_dist": ["click", "tabulate", "pytest; extra == \"test\""], "requires_python": ">=3.7", "summary": "A wrapper for the Terraform CLI that provides a formatted plan summary.", "version": "0.1.4", "yanked": false, "yanked_reason": null}, "last_serial": 30395176, "urls": [{"comment_text": null, "digests": {"blake2b_256": "910795adc52e0860adb629b8b8e937318dbfb37d84e1325850fa827db8225138", "md5": "6462a6194d5349770b6055f03f5e24b4", "sha256": "cab5bacad25dbff94213cb863f84e3e54806d6d251293ab1aba11129960f9c8f"}, "downloads": -1, "filename": "terraformat-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "6462a6194d5349770b6055f03f5e24b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6735, "upload_time": "2025-07-29T02:39:42", "upload_time_iso_8601": "2025-07-29T02:39:42.230906Z", "url": "https://files.pythonhosted.org/packages/91/07/95adc52e0860adb629b8b8e937318dbfb37d84e1325850fa827db8225138/terraformat-0.1.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "a4daeb0d467ff725822279f91d64cdc4ad84971d4e8fa40e40b6ade581caa9e9", "md5": "055c4ddee084bc23817e54d57d87a5df", "sha256": "6e1b8d66f973d750500411199cc15d01d7289fb2aa57a2e1e0d8146f634fd674"}, "downloads": -1, "filename": "terraformat-0.1.4.tar.gz", "has_sig": false, "md5_digest": "055c4ddee084bc23817e54d57d87a5df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7458, "upload_time": "2025-07-29T02:39:43", "upload_time_iso_8601": "2025-07-29T02:39:43.473969Z", "url": "https://files.pythonhosted.org/packages/a4/da/eb0d467ff725822279f91d64cdc4ad84971d4e8fa40e40b6ade581caa9e9/terraformat-0.1.4.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:39:41 GMT", "package": "odoo-addon-account-payment-sepa-credit-transfer", "version": "18.0.3.0.0.2", "json": {"info": {"author": "Akretion, Tecnativa, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n====================================\nAccount Banking SEPA Credit Transfer\n====================================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:f2ccdffda451ce8b789031eb7b1c81de0dc7b9ae530c3fdbe6b38487bfb86ba6\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fbank--payment--alternative-lightgray.png?logo=github\n    :target: https://github.com/OCA/bank-payment-alternative/tree/18.0/account_payment_sepa_credit_transfer\n    :alt: OCA/bank-payment-alternative\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/bank-payment-alternative-18-0/bank-payment-alternative-18-0-account_payment_sepa_credit_transfer\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/bank-payment-alternative&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nModule to export payment orders in ISO 20022 XML file format.\n\n`ISO 20022 <https://www.iso20022.org/>`__ is the new international\nstandard for bank XML files. This module implements SEPA Credit Transfer\n(SCT), more specifically ISO 20022 PAIN (PAyment INitiation) versions\n001.001.03 and 001.001.09. It follows the `SEPA credit transfer\nimplementation\nguidelines <https://www.europeanpaymentscouncil.eu/what-we-do/epc-payment-schemes/sepa-credit-transfer/sepa-credit-transfer-rulebook-and>`__\nof the `European Payments\nCouncil <https://www.europeanpaymentscouncil.eu>`__.\n\nThis module also supports PAIN version 001.003.03 which is used in\nGermany. You can read more about this in german on\n`ebics.de <https://www.ebics.de/>`__.\n\nMoreover, this module supports:\n\n- SEPA **instant** credit transfer,\n- non-SEPA credit transfer files, which can be used for wire transfer in\n  currencies other then euro and/or to countries outside the `SEPA\n  zone <https://en.wikipedia.org/wiki/Single_Euro_Payments_Area>`__.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nInstallation\n============\n\nThis module depends on : \\* account_payment_sepa_base\n\nThis module is part of the OCA/bank-payment-alternative suite.\n\nConfiguration\n=============\n\n- Create a Payment Method dedicated to SEPA Credit Transfer.\n- Select the Technical Payment Method *SEPA Credit Transfer to\n  suppliers* (which is automatically created upon module installation).\n- Check that this technical payment method uses the proper version of\n  PAIN.\n\nUsage\n=====\n\nIn the menu *Invoicing/Accounting > Vendors > Payment Orders*, create a\nnew payment order and select the *Payment Method* dedicated to SEPA\nCredit Transfer that you created during the configuration step.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/bank-payment-alternative/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/bank-payment-alternative/issues/new?body=module:%20account_payment_sepa_credit_transfer%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* Akretion\n* Tecnativa\n\nContributors\n------------\n\n- Alexis de Lattre <alexis.delattre@akretion.com>\n- St\u00e9phane Bidoul <stephane.bidoul@acsone.eu>\n- Stefan Rijnhart\n- Julien Laloux\n- Alexandre Fayolle\n- Rapha\u00ebl Valyi\n- Erwin van der Ploeg\n- Sandy Carter\n- `Tecnativa <https://www.tecnativa.com>`__:\n\n  - Antonio Espinosa\n  - Pedro M. Baeza\n  - Carlos Roca\n\n- `DynApps NV <https://www.dynapps.be>`__:\n\n  - Axel Priem <axel.priem@dynapps.be>\n\n- `Sygel Technology <https://www.sygel.es>`__:\n\n  - Valentin Vinagre <valentin.vinagre@sygel.es>\n  - Manuel Regidor <manuel.regidor@sygel.es>\n\n- `Trobz <https://trobz.com>`__:\n\n  - Dung Tran <dungtd@trobz.com>\n\nOther credits\n-------------\n\nThe migration of this module from 15.0 to 16.0 was financially supported\nby Camptocamp\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/bank-payment-alternative <https://github.com/OCA/bank-payment-alternative/tree/18.0/account_payment_sepa_credit_transfer>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/bank-payment-alternative", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-account-payment-sepa-credit-transfer", "package_url": "https://pypi.org/project/odoo-addon-account-payment-sepa-credit-transfer/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-account-payment-sepa-credit-transfer/", "project_urls": {"Homepage": "https://github.com/OCA/bank-payment-alternative"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-account-payment-sepa-credit-transfer/18.0.3.0.0.2/", "requires_dist": ["odoo-addon-account_payment_sepa_base==18.0.*", "odoo==18.0.*"], "requires_python": ">=3.10", "summary": "Create SEPA XML files for Credit Transfers", "version": "18.0.3.0.0.2", "yanked": false, "yanked_reason": null}, "last_serial": 30394742, "urls": [{"comment_text": "", "digests": {"blake2b_256": "503c7d96a3f646078ba915fd232ccb0d55d445eba51d5a084627822cc31975be", "md5": "475c3ab7ece577249f0dea6668192066", "sha256": "fff3ad32145d58c0a28e63cf473b6649f289219723f4d0c8f3ccb5f541edd84e"}, "downloads": -1, "filename": "odoo_addon_account_payment_sepa_credit_transfer-18.0.3.0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "475c3ab7ece577249f0dea6668192066", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 72225, "upload_time": "2025-07-29T02:39:41", "upload_time_iso_8601": "2025-07-29T02:39:41.504271Z", "url": "https://files.pythonhosted.org/packages/50/3c/7d96a3f646078ba915fd232ccb0d55d445eba51d5a084627822cc31975be/odoo_addon_account_payment_sepa_credit_transfer-18.0.3.0.0.2-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:39:38 GMT", "package": "odoo-addon-account-payment-batch-oca", "version": "18.0.3.0.0.2", "json": {"info": {"author": "ACSONE SA/NV, Therp BV, Tecnativa, Akretion, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Development Status :: 6 - Mature", "Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n=========================\nAccount Payment Batch OCA\n=========================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:abf74ee3e7943c4af07e07eaa553fd722395ff4cf8c0de85b2aaf7ad13c8edbe\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Mature-brightgreen.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Mature\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Fbank--payment--alternative-lightgray.png?logo=github\n    :target: https://github.com/OCA/bank-payment-alternative/tree/18.0/account_payment_batch_oca\n    :alt: OCA/bank-payment-alternative\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/bank-payment-alternative-18-0/bank-payment-alternative-18-0-account_payment_batch_oca\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/bank-payment-alternative&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module adds support for payment orders and debit orders.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nConfiguration\n=============\n\nThis module adds several options on Payment Methods, cf\nInvoicing/Accounting > Configuration > Management > Payment Methods.\n\nUsage\n=====\n\nYou can create a Payment order via the menu Invoicing/Accounting >\nVendors > Payment Orders and then select the move lines to pay.\n\nYou can create a Debit order via the menu Invoicing/Accounting >\nCustomers > Debit Orders and then select the move lines to debit.\n\nThis module also adds an action *Add to Payment Order* on supplier\ninvoices and *Add to Debit Order* on customer invoices.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/bank-payment-alternative/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/bank-payment-alternative/issues/new?body=module:%20account_payment_batch_oca%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* ACSONE SA/NV\n* Therp BV\n* Tecnativa\n* Akretion\n\nContributors\n------------\n\n- St\u00e9phane Bidoul <stephane.bidoul@acsone.eu>\n- Alexis de Lattre <alexis.delattre@akretion.com>\n- Adrien Peiffer <adrien.peiffer@acsone.eu>\n- Stefan Rijnhart\n- Laurent Mignon <laurent.mignon@acsone.eu>\n- Alexandre Fayolle\n- Danimar Ribeiro\n- Erwin van der Ploeg\n- Rapha\u00ebl Valyi\n- Sandy Carter\n- Angel Moya <angel.moya@domatix.com>\n- Jose Mar\u00eda Alzaga <jose.alzaga@aselcis.com>\n- Meyomesse Gilles <meyomesse.gilles@gmail.com>\n- Denis Roussel <denis.roussel@acsone.eu>\n- `DynApps <https://www.dynapps.be>`__:\n\n  - Raf Ven <raf.ven@dynapps.be>\n\n- Andrea Stirpe <a.stirpe@onestein.nl>\n- `Jarsa <https://www.jarsa.com.mx>`__:\n\n  - Alan Ramos <alan.ramos@jarsa.com.mx>\n\n- `Tecnativa <https://www.tecnativa.com>`__:\n\n  - Pedro M. Baeza\n  - Carlos Dauden\n  - Carlos Roca\n\n- `Open Source Integrators <https://www.opensourceintegrators.com>`__:\n\n  - Ammar Officewala <aofficewala@opensourceintegrators.com>\n\n- Mar\u00e7al Isern <marsal.isern@qubiq.es>\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/bank-payment-alternative <https://github.com/OCA/bank-payment-alternative/tree/18.0/account_payment_batch_oca>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/bank-payment-alternative", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-account-payment-batch-oca", "package_url": "https://pypi.org/project/odoo-addon-account-payment-batch-oca/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-account-payment-batch-oca/", "project_urls": {"Homepage": "https://github.com/OCA/bank-payment-alternative"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-account-payment-batch-oca/18.0.3.0.0.2/", "requires_dist": ["odoo-addon-account_payment_base_oca==18.0.*", "odoo==18.0.*"], "requires_python": ">=3.10", "summary": "Add payment orders and debit orders", "version": "18.0.3.0.0.2", "yanked": false, "yanked_reason": null}, "last_serial": 30394737, "urls": [{"comment_text": "", "digests": {"blake2b_256": "46d86fa416f6513c30c07909bc1780f4287e2ee8636012c2ed3d162913ad9e14", "md5": "f58bce60c163cdaf3a011fa52fc6e043", "sha256": "c3b4b8837be1395b5be626696ee6a329ac3361ac6882f7b6224cc7d2519221ab"}, "downloads": -1, "filename": "odoo_addon_account_payment_batch_oca-18.0.3.0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f58bce60c163cdaf3a011fa52fc6e043", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 405423, "upload_time": "2025-07-29T02:39:38", "upload_time_iso_8601": "2025-07-29T02:39:38.271433Z", "url": "https://files.pythonhosted.org/packages/46/d8/6fa416f6513c30c07909bc1780f4287e2ee8636012c2ed3d162913ad9e14/odoo_addon_account_payment_batch_oca-18.0.3.0.0.2-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:39:21 GMT", "package": "yunfan", "version": "0.0.6", "json": {"info": {"author": "Wei Zhang", "author_email": "<zhangw355@foxmail.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3"], "description": "Yunfan platform interface toolkit. The toolkit includes: dataset offline pulling, dataset online reading, etc.\n\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "python, yunfan", "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "yunfan", "package_url": "https://pypi.org/project/yunfan/", "platform": null, "project_url": "https://pypi.org/project/yunfan/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/yunfan/0.0.6/", "requires_dist": null, "requires_python": null, "summary": "Yunfan platform interface toolkit.", "version": "0.0.6", "yanked": false, "yanked_reason": null}, "last_serial": 30394725, "urls": [{"comment_text": "", "digests": {"blake2b_256": "8396a9c0d0f1073536b0195ff4232b55137fabe3fc03c107abb6281e453f406f", "md5": "114b386989e883e8f5fd650e0f882a95", "sha256": "075637ff7759d857ca4ecd44a02dfacd8af4519b469da59ddf564c5133a1e7c0"}, "downloads": -1, "filename": "yunfan-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "114b386989e883e8f5fd650e0f882a95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4816, "upload_time": "2025-07-29T02:39:21", "upload_time_iso_8601": "2025-07-29T02:39:21.209417Z", "url": "https://files.pythonhosted.org/packages/83/96/a9c0d0f1073536b0195ff4232b55137fabe3fc03c107abb6281e453f406f/yunfan-0.0.6-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "c691b21aa37e89cc1a4a8047c441c2b965e63a2e8b509a86098874ebac7af8df", "md5": "aaf673977cad61458826621f0ad15537", "sha256": "1e558fadbf474cb0d48e5e20b4eb88298028545cae7cba4dafcb5104783c8e8f"}, "downloads": -1, "filename": "yunfan-0.0.6.tar.gz", "has_sig": false, "md5_digest": "aaf673977cad61458826621f0ad15537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4556, "upload_time": "2025-07-29T02:39:22", "upload_time_iso_8601": "2025-07-29T02:39:22.336472Z", "url": "https://files.pythonhosted.org/packages/c6/91/b21aa37e89cc1a4a8047c441c2b965e63a2e8b509a86098874ebac7af8df/yunfan-0.0.6.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:38:50 GMT", "package": "bhp-pro", "version": "0.2.4", "json": {"info": {"author": "ssskingsss12", "author_email": "smalls3000i@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": "Run the script using bhp_pro follow the on screen instructions for the first time installing, after install  it will take you to the main menu, the script is 40 tools combined\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Requires-Python", "Summary"], "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "bhp-pro", "package_url": "https://pypi.org/project/bhp-pro/", "platform": null, "project_url": "https://pypi.org/project/bhp-pro/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/bhp-pro/0.2.4/", "requires_dist": null, "requires_python": ">=3.12", "summary": "Web Enumeration Tool", "version": "0.2.4", "yanked": false, "yanked_reason": null}, "last_serial": 30394698, "urls": [{"comment_text": null, "digests": {"blake2b_256": "8566570cf723551a188fba5ae136c9a2a0925eefcfdcf0710df0f5b59668cd4c", "md5": "1c3383195774969a6e9138de24bdb19d", "sha256": "94fef023f0d3631a807d39e0951ba835d431f89d9a611e34cdb7ccecf2730baf"}, "downloads": -1, "filename": "bhp_pro-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1c3383195774969a6e9138de24bdb19d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.12", "size": 90534, "upload_time": "2025-07-29T02:38:50", "upload_time_iso_8601": "2025-07-29T02:38:50.116243Z", "url": "https://files.pythonhosted.org/packages/85/66/570cf723551a188fba5ae136c9a2a0925eefcfdcf0710df0f5b59668cd4c/bhp_pro-0.2.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "910bfa9183e185d4fc9a19ce4b1300c7d840d25daefc09016fceae9ce5ae31c9", "md5": "5d7615609299b4fe33f4c6188e2b815a", "sha256": "03de691b1373aa6380ec9240d82be629e6e65691261079754d5eef248da62740"}, "downloads": -1, "filename": "bhp_pro-0.2.4.tar.gz", "has_sig": false, "md5_digest": "5d7615609299b4fe33f4c6188e2b815a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.12", "size": 89357, "upload_time": "2025-07-29T02:38:51", "upload_time_iso_8601": "2025-07-29T02:38:51.219773Z", "url": "https://files.pythonhosted.org/packages/91/0b/fa9183e185d4fc9a19ce4b1300c7d840d25daefc09016fceae9ce5ae31c9/bhp_pro-0.2.4.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:38:30 GMT", "package": "odoo-addon-account-reconcile-oca", "version": "16.0.2.4.7.1", "json": {"info": {"author": "CreuBlanca,Dixmit,Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 16.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n=====================\nAccount Reconcile Oca\n=====================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:13312c9fbbfc16a8a59f7d6184b57e9b3ddc28b0a61fe5ae280f99e5cf8d2940\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Faccount--reconcile-lightgray.png?logo=github\n    :target: https://github.com/OCA/account-reconcile/tree/16.0/account_reconcile_oca\n    :alt: OCA/account-reconcile\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/account-reconcile-16-0/account-reconcile-16-0-account_reconcile_oca\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/account-reconcile&target_branch=16.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis addon allows to reconcile bank statements and account marked as `reconcile`.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nUsage\n=====\n\nBank reconcile\n~~~~~~~~~~~~~~\n\nAccess `Invoicing / Dashboard` with a user with Full Acounting capabilities.\nSelect reconcile on the journal of your choice.\n\nAccount reconcile\n~~~~~~~~~~~~~~~~~\n\nAccess `Invoicing / Accounting / Actions / Reconcile`\nAll the possible reconcile options will show and you will be able to reconcile properly.\nYou can access the same widget from accounts and Partners.\n\n\nNote : in case this module is installed on a migrated database, the reconciliation models will not be set by default. So they need to be set manually. \n\n![Reconciliation model : full payment](../static/description/reconcile-model-full.png)\n\n![Reconciliation model : partial payment](../static/description/reconcile-model-partial.png)\n\nKnown issues / Roadmap\n======================\n\nThe following bugs are already detected:\n\n* Creation of activities on the chatter do show automatically\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/account-reconcile/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/account-reconcile/issues/new?body=module:%20account_reconcile_oca%0Aversion:%2016.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n~~~~~~~\n\n* CreuBlanca\n* Dixmit\n\nContributors\n~~~~~~~~~~~~\n\n* Enric Tobella\n\nOther credits\n~~~~~~~~~~~~~\n\nThe system has been improved to handle currency amounts more effectively with the financial support of Sygel Technology.\n\nMaintainers\n~~~~~~~~~~~\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-etobella| image:: https://github.com/etobella.png?size=40px\n    :target: https://github.com/etobella\n    :alt: etobella\n\nCurrent `maintainer <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-etobella| \n\nThis module is part of the `OCA/account-reconcile <https://github.com/OCA/account-reconcile/tree/16.0/account_reconcile_oca>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/account-reconcile", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-account-reconcile-oca", "package_url": "https://pypi.org/project/odoo-addon-account-reconcile-oca/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-account-reconcile-oca/", "project_urls": {"Homepage": "https://github.com/OCA/account-reconcile"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-account-reconcile-oca/16.0.2.4.7.1/", "requires_dist": ["odoo-addon-account-statement-base<16.1dev,>=16.0dev", "odoo<16.1dev,>=16.0a"], "requires_python": ">=3.10", "summary": "Reconcile addons for Odoo CE accounting", "version": "16.0.2.4.7.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394679, "urls": [{"comment_text": "", "digests": {"blake2b_256": "351a9014d5ffa7c4701be59c4feea832f7f6a805bd44c0a719795e8927a11edd", "md5": "d7404140c7e21ea7910829d966bf47d7", "sha256": "3fd0fc13180f7a85605b84a04c65d9eaf7e7451ceecf81562b16979842b9459d"}, "downloads": -1, "filename": "odoo_addon_account_reconcile_oca-16.0.2.4.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d7404140c7e21ea7910829d966bf47d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 358229, "upload_time": "2025-07-29T02:38:30", "upload_time_iso_8601": "2025-07-29T02:38:30.771098Z", "url": "https://files.pythonhosted.org/packages/35/1a/9014d5ffa7c4701be59c4feea832f7f6a805bd44c0a719795e8927a11edd/odoo_addon_account_reconcile_oca-16.0.2.4.7.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:38:30 GMT", "package": "terraformat", "version": "0.1.3", "json": {"info": {"author": "Henry Upton-Birdsall", "author_email": "henryupton@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Software Development :: Build Tools"], "description": "# terraformat\n\nA wrapper for the Terraform CLI that provides a formatted plan summary.\n\n## Overview\n\n**terraformat** is a command-line tool designed to improve the readability of `terraform plan` outputs. It runs your Terraform plan and summarizes the planned resource changes (create, update, destroy) in a color-coded, tabular format. This helps teams more quickly and safely review infrastructure changes before applying them.\n\n## Features\n\n- Runs any `terraform` command, but enhances `terraform plan` with a summary table\n- Color-coded output for quick identification of create (green), update (yellow), and destroy (red) actions\n- Parses complex Terraform resource addresses, including those in modules\n- Integrates seamlessly into existing Terraform workflows\n\n## Installation\n\n```bash\npip install .\npip install git+https://github.com/henryupton/terraformat.git\n```\n\n## Requirements\n* Python 3.7+\n* Terraform installed and available in your PATH\n\n### Python dependencies (installed automatically):\n* click\n* tabulate\n\n## Usage\n\nAfter installation, you can use terraformat as a drop-in replacement for terraform. All commands are passed through to Terraform, but plan will be summarized:\n\n```bash\nterraformat plan [ARGS...]\n```\n\n#### Example output\n```bash\n\ud83d\ude80 Running 'terraform plan'...\n--- Original Terraform Output ---\n[standard terraform plan output here]\n\n==================================================\n\ud83d\udcca Terraformat Summary\n==================================================\n+----------------+---------+---------+----------+\n| Resource Type  | Create  | Update  | Destroy  |\n+================+=========+=========+==========+\n| aws_instance   |   1     |   0     |    1     |\n| local_file     |   1     |   0     |    0     |\n| random_pet     |   0     |   1     |    0     |\n+----------------+---------+---------+----------+\n| Total          |   2     |   1     |    1     |\n+----------------+---------+---------+----------+\n```\n\nIf you run other Terraform commands, they\u2019re just passed through unchanged:\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "License-File", "Provides-Extra", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/henryupton/terraformat", "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "terraformat", "package_url": "https://pypi.org/project/terraformat/", "platform": null, "project_url": "https://pypi.org/project/terraformat/", "project_urls": {"Homepage": "https://github.com/henryupton/terraformat"}, "provides_extra": ["test"], "release_url": "https://pypi.org/project/terraformat/0.1.3/", "requires_dist": ["click", "tabulate", "pytest; extra == \"test\""], "requires_python": ">=3.7", "summary": "A wrapper for the Terraform CLI that provides a formatted plan summary.", "version": "0.1.3", "yanked": false, "yanked_reason": null}, "last_serial": 30395176, "urls": [{"comment_text": null, "digests": {"blake2b_256": "03b95f482986e5f3c1e5657e0bba625ec17229ec631c96e6af40b71bff878311", "md5": "cf3b991777c04ffb2769cac88ceee429", "sha256": "ba7c23038d7a4ddb3b07f0bdef302fe4ed6f89acb5d045cba9d77f60a73446b0"}, "downloads": -1, "filename": "terraformat-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "cf3b991777c04ffb2769cac88ceee429", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 6737, "upload_time": "2025-07-29T02:38:30", "upload_time_iso_8601": "2025-07-29T02:38:30.198815Z", "url": "https://files.pythonhosted.org/packages/03/b9/5f482986e5f3c1e5657e0bba625ec17229ec631c96e6af40b71bff878311/terraformat-0.1.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "99905abb4817a1c1618db433a1f54e206d7606c020539c12ffdcaaea47da837d", "md5": "0a7746de1fd8ed33038d1d9990b69578", "sha256": "b18430e3d138e2fa964c6892c90f9ce3343c9ac9498a280abf0059ac5887f42c"}, "downloads": -1, "filename": "terraformat-0.1.3.tar.gz", "has_sig": false, "md5_digest": "0a7746de1fd8ed33038d1d9990b69578", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7441, "upload_time": "2025-07-29T02:38:31", "upload_time_iso_8601": "2025-07-29T02:38:31.177227Z", "url": "https://files.pythonhosted.org/packages/99/90/5abb4817a1c1618db433a1f54e206d7606c020539c12ffdcaaea47da837d/terraformat-0.1.3.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:37:44 GMT", "package": "django-ses-backend", "version": "0.1.1", "json": {"info": {"author": "Almaz Kunpeissov", "author_email": "hello@akun.dev", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 4.2", "Framework :: Django :: 5.0", "Framework :: Django :: 5.1", "Framework :: Django :: 5.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Communications :: Email"], "description": "# django-ses-backend\n\nDjango AWS SES (Amazon Simple Email Service) email backend.\n\n## Features\n- Send emails via AWS SES without needing `boto3` or any other AWS SDK.\n- No SMTP configuration required and faster email sending.\n- Supports sending TXT and HTML emails.\n- Lightweight and easy to integrate.\n- Supports `EmailMessage` from Django's built-in mail framework.\n- Custom SES client implementation for signing and sending requests.\n\n## Requirements\n- Python 3.11+\n- Django 4.2+\n\n## Installation\n\nInstall the package using pip:\n\n```bash\npip install django-ses-backend\n```\n\n## AWS Setup\n\n### Step 1: Create an AWS SES Account\n1. Sign in to the [AWS Management Console](https://aws.amazon.com/console/).\n2. Navigate to **Amazon SES** service.\n3. Verify your email address or domain in the **Verified Identities** section.\n4. Move your SES account out of **Sandbox Mode** (if needed) by requesting production access.\n\n### Step 2: Create an IAM User for SES\n1. Go to **IAM** in the AWS Console.\n2. Create a new user and enable **Programmatic access**.\n3. Attach the policy **AmazonSESFullAccess** (or create a custom policy with `ses:SendEmail` permissions).\n4. Save the **Access Key ID** and **Secret Access Key**.\n\n## Configuration\n\nUpdate your Django settings:\n\n```python\n# settings.py\nEMAIL_BACKEND = 'django_ses_backend.backends.SESEmailBackend'\n\nSES_AWS_ACCESS_KEY_ID = 'YOUR_AWS_ACCESS_KEY_ID'\nSES_AWS_SECRET_ACCESS_KEY = 'YOUR_AWS_SECRET_ACCESS_KEY'\nSES_AWS_REGION = 'YOUR_AWS_REGION'\n```\n\n## Usage\n\nYou can send emails using Django's built-in `send_mail` or `EmailMessage`:\n\n```python\nfrom django.core.mail import send_mail\n\nsend_mail(\n    subject=\"Hello from AWS SES\",\n    message=\"This is a test email.\",\n    from_email=\"your-email@example.com\",\n    recipient_list=[\"recipient@example.com\"],\n)\n```\n\nOr using `EmailMessage` for more customization:\n\n```python\nfrom django.core.mail import EmailMessage\n\nemail = EmailMessage(\n    subject=\"Hello from AWS SES\",\n    body=\"This is a test email.\",\n    from_email=\"your-email@example.com\",\n    to=[\"recipient@example.com\"],\n)\nemail.send()\n```\n\n## Advanced Features\n\n### Sending HTML Emails\n\n```python\nemail = EmailMessage(\n    subject=\"HTML Email Test\",\n    body=\"<h1>Hello from AWS SES</h1>\",\n    from_email=\"your-email@example.com\",\n    to=[\"recipient@example.com\"],\n)\nemail.content_subtype = \"html\"\nemail.send()\n```\n\n## Error Handling\n\nIf sending an email fails, a `SESClientError` is raised. You can handle errors gracefully:\n\n```python\ntry:\n    email.send()\nexcept Exception as e:\n    print(f\"Failed to send email: {e}\")\n```\n\n## Logging\n\nEnable logging to track email sending:\n\n```python\nimport logging\n\nlogging.basicConfig(level=logging.DEBUG)\nlogger = logging.getLogger(\"django_ses_backend\")\n```\n\n## Notes\n- Ensure your AWS SES account is verified and out of sandbox mode to send emails to unverified addresses.\n- Configure AWS IAM policies to grant `ses:SendEmail` permissions to your credentials.\n\n## Contributing\nFeel free to submit issues or pull requests on GitHub to improve this package.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/almazkun/django-ses-backend", "keywords": "django, email, aws, ses, backend", "license": "MIT", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "django-ses-backend", "package_url": "https://pypi.org/project/django-ses-backend/", "platform": null, "project_url": "https://pypi.org/project/django-ses-backend/", "project_urls": {"Bug Tracker": "https://github.com/akun/django-ses-backend/issues", "Documentation": "https://github.com/almazkun/django-ses-backend#readme", "Homepage": "https://github.com/almazkun/django-ses-backend", "Repository": "https://github.com/almazkun/django-ses-backend"}, "provides_extra": null, "release_url": "https://pypi.org/project/django-ses-backend/0.1.1/", "requires_dist": ["django<6,>=4.2"], "requires_python": ">=3.11", "summary": "Django email backend for AWS SES (Amazon Simple Email Service) without boto3", "version": "0.1.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394651, "urls": [{"comment_text": "", "digests": {"blake2b_256": "5d5e6cb6cc865dc31994085540fc4edb08849982c1004a98ee92d4cf9be8319b", "md5": "5bfcad57985b56d27b4c496cb3265368", "sha256": "bfa57c9bfa572cc2ae54155895e31a186e7007005583539250a2da0236e24a5d"}, "downloads": -1, "filename": "django_ses_backend-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5bfcad57985b56d27b4c496cb3265368", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.11", "size": 6136, "upload_time": "2025-07-29T02:37:44", "upload_time_iso_8601": "2025-07-29T02:37:44.776046Z", "url": "https://files.pythonhosted.org/packages/5d/5e/6cb6cc865dc31994085540fc4edb08849982c1004a98ee92d4cf9be8319b/django_ses_backend-0.1.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "396742be0ecdcc8e7953d9a4b2d8454ed65c09c185a484171d3fc260aa56a3be", "md5": "aaf56b1962a3ed51cdb3a6d235c75c30", "sha256": "7b78d88fb9843918702a71e21ab59a3f9aa0fab49ffbeaa319bcad7d30122aa8"}, "downloads": -1, "filename": "django_ses_backend-0.1.1.tar.gz", "has_sig": false, "md5_digest": "aaf56b1962a3ed51cdb3a6d235c75c30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.11", "size": 5356, "upload_time": "2025-07-29T02:37:46", "upload_time_iso_8601": "2025-07-29T02:37:46.009886Z", "url": "https://files.pythonhosted.org/packages/39/67/42be0ecdcc8e7953d9a4b2d8454ed65c09c185a484171d3fc260aa56a3be/django_ses_backend-0.1.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:37:15 GMT", "package": "qontract-reconcile", "version": "0.10.2.dev293", "json": {"info": {"author": null, "author_email": "Red Hat App-SRE Team <sd-app-sre@redhat.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.11"], "description": "# qontract-reconcile\n\n[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n[![uv](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json)](https://github.com/astral-sh/uv)\n[![PyPI](https://img.shields.io/pypi/v/qontract-reconcile)][pypi-link]\n[![PyPI platforms][pypi-platforms]][pypi-link]\n![PyPI - License](https://img.shields.io/pypi/l/qontract-reconcile)\n[![Checked with mypy](https://www.mypy-lang.org/static/mypy_badge.svg)](https://mypy-lang.org/)\n\nA tool to reconcile services with their desired state as defined in app-interface.\nAdditional tools that use the libraries created by the reconciliations are also hosted here.\n\n## Usage\n\nUse [config.toml.example](config.toml.example) as a template to create a `config.toml` file.\n\nRun a reconcile integration like this:\n\n```sh\nqontract-reconcile --config config.toml --dry-run <subcommand>\n\n# review output and run without `--dry-run` to perform actual changes\nqontract-reconcile --config config.toml <subcommand>\n```\n\n> Note: you can use the `QONTRACT_CONFIG` environment variable instead of using `--config`.\n\n### OpenShift usage\n\nOpenShift templates can be found [here](/openshift/qontract-reconcile.yaml). In order to add integrations there please use the [helm](/helm/README.md) chart provided.\n\n## Available Integrations\n\n`qontract-reconcile` includes the following integrations:\n\n```text\n  acs-policies                    Manages RHACS security policy configurations\n  acs-rbac                        Manages RHACS rbac configuration\n  advanced-upgrade-scheduler      Manage Cluster Upgrade Policy schedules in\n                                  OCM organizations based on OCM labels.\n  aws-account-manager             Create and manage AWS accounts.\n  aws-ami-cleanup                 Cleanup old and unused AMIs.\n  aws-ami-share                   Share AMI and AMI tags between accounts.\n  aws-cloudwatch-log-retention    Set up retention period for Cloudwatch logs.\n  aws-ecr-image-pull-secrets      Generate AWS ECR image pull secrets and\n                                  store them in Vault.\n  aws-iam-keys                    Delete IAM access keys by access key ID.\n  aws-iam-password-reset          Reset IAM user password by user reference.\n  aws-saml-idp                    Manage the SAML IDP config for all AWS\n                                  accounts.\n  aws-saml-roles                  Manage the SAML IAM roles for all AWS\n                                  accounts with SSO enabled.\n  aws-support-cases-sos           Scan AWS support cases for reports of leaked\n                                  keys and remove them (only submits PR)\n  aws-version-sync                Sync AWS asset version numbers to App-\n                                  Interface\n  blackbox-exporter-endpoint-monitoring\n                                  Manages Prometheus Probe resources for\n                                  blackbox-exporter\n  change-log-tracking             Analyze bundle diffs by change types.\n  change-owners                   Detects owners for changes in app-interface\n                                  PRs and allows them to self-service merge.\n  cluster-auth-rhidp              Manages the OCM subscription labels for\n                                  clusters with RHIDP authentication. Part of\n                                  RHIDP.\n  cluster-deployment-mapper       Maps ClusterDeployment resources to Cluster\n                                  IDs.\n  dashdotdb-dora                  Collects dora metrics.\n  dashdotdb-dvo                   Collects the DeploymentValidations from all\n                                  the clusters and posts them to Dashdotdb.\n  dashdotdb-slo                   Collects the ServiceSloMetrics from all the\n                                  clusters and posts them to Dashdotdb.\n  database-access-manager         Manage Databases and Database Users.\n  deadmanssnitch                  Automate Deadmanssnitch Creation/Deletion\n  dynatrace-token-provider        Automatically provide dedicated Dynatrace\n                                  tokens to management clusters\n  email-sender                    Send email notifications to app-interface\n                                  audience.\n  endpoints-discovery             Discover routes and update endpoints\n  external-resources              Manages External Resources\n  external-resources-secrets-sync\n                                  Syncs External Resources Secrets from Vault\n                                  to Clusters\n  gabi-authorized-users           Manages user access for GABI instances.\n  gcr-mirror                      Mirrors external images into Google\n                                  Container Registry.\n  github                          Configures the teams and members in a GitHub\n                                  org.\n  github-owners                   Configures owners in a GitHub org.\n  github-repo-invites             Accept GitHub repository invitations for\n                                  known repositories.\n  github-repo-permissions-validator\n                                  Validates permissions in github\n                                  repositories.\n  github-validator                Validates GitHub organization settings.\n  gitlab-fork-compliance          Ensures that forks of App Interface are\n                                  compliant.\n  gitlab-housekeeping             Manage issues and merge requests on GitLab\n                                  projects.\n  gitlab-labeler                  Guesses and adds labels to merge requests\n                                  according to changed paths.\n  gitlab-members                  Manage GitLab group members.\n  gitlab-mr-sqs-consumer          Listen to SQS and creates MRs out of the\n                                  messages.\n  gitlab-owners                   Manages labels on gitlab merge requests\n                                  based on OWNERS files schema.\n  gitlab-permissions              Manage permissions on GitLab projects.\n  gitlab-projects                 Create GitLab projects.\n  glitchtip                       Configure and enforce glitchtip instance\n                                  configuration.\n  glitchtip-project-alerts        Configure Glitchtip project alerts.\n  glitchtip-project-dsn           Glitchtip project dsn as openshift secret.\n  integrations-manager            Manages Qontract Reconcile integrations.\n  jenkins-job-builder             Manage Jenkins jobs configurations using\n                                  jenkins-jobs.\n  jenkins-job-builds-cleaner      Clean up jenkins job history.\n  jenkins-roles                   Manage Jenkins roles association via REST\n                                  API.\n  jenkins-webhooks                Manage web hooks to Jenkins jobs.\n  jenkins-webhooks-cleaner        Remove webhooks to previous Jenkins\n                                  instances.\n  jenkins-worker-fleets           Manage Jenkins worker fleets via JCasC.\n  jira-permissions-validator      Validate permissions in Jira.\n  ldap-groups                     Manages LDAP groups based on App-Interface\n                                  roles.\n  ldap-users                      Removes users which are not found in LDAP\n                                  search.\n  ocm-additional-routers          Manage additional routers in OCM.\n  ocm-addons                      Manages cluster Addons in OCM.\n  ocm-addons-upgrade-scheduler-org\n                                  Manage Addons Upgrade Policy schedules in\n                                  OCM organizations.\n  ocm-addons-upgrade-tests-trigger\n                                  Trigger jenkins jobs following Addon\n                                  upgrades.\n  ocm-aws-infrastructure-access   Grants AWS infrastructure access to members\n                                  in AWS groups via OCM.\n  ocm-clusters                    Manages clusters via OCM.\n  ocm-external-configuration-labels\n                                  Manage External Configuration labels in OCM.\n  ocm-groups                      Manage membership in OpenShift groups via\n                                  OCM.\n  ocm-internal-notifications      Notifications to internal Red Hat users\n                                  based on conditions in OCM.\n  ocm-labels                      Manage cluster OCM labels.\n  ocm-machine-pools               Manage Machine Pools in OCM.\n  ocm-oidc-idp                    Manage OIDC cluster configuration in OCM\n                                  organizations based on OCM labels. Part of\n                                  RHIDP.\n  ocm-standalone-user-management  Manages OCM cluster usergroups and\n                                  notifications via OCM labels.\n  ocm-update-recommended-version  Update recommended version for OCM orgs\n  ocm-upgrade-scheduler-org       Manage Upgrade Policy schedules in OCM\n                                  organizations.\n  ocm-upgrade-scheduler-org-updater\n                                  Update Upgrade Policy schedules in OCM\n                                  organizations.\n  openshift-cluster-bots          Manages dedicated-admin and cluster-admin\n                                  creds.\n  openshift-clusterrolebindings   Configures ClusterRolebindings in OpenShift\n                                  clusters.\n  openshift-groups                Manages OpenShift Groups.\n  openshift-limitranges           Manages OpenShift LimitRange objects.\n  openshift-namespace-labels      Manages labels on OpenShift namespaces.\n  openshift-namespaces            Manages OpenShift Namespaces.\n  openshift-network-policies      Manages OpenShift NetworkPolicies.\n  openshift-prometheus-rules      Manages OpenShift Prometheus Rules.\n  openshift-resourcequotas        Manages OpenShift ResourceQuota objects.\n  openshift-resources             Manages OpenShift Resources.\n  openshift-rolebindings          Configures Rolebindings in OpenShift\n                                  clusters.\n  openshift-routes                Manages OpenShift Routes.\n  openshift-saas-deploy           Manage OpenShift resources defined in Saas\n                                  files.\n  openshift-saas-deploy-change-tester\n                                  Runs openshift-saas-deploy for each saas-\n                                  file that changed within a bundle.\n  openshift-saas-deploy-trigger-cleaner\n                                  Clean up deployment related resources.\n  openshift-saas-deploy-trigger-configs\n                                  Trigger deployments when configuration\n                                  changes.\n  openshift-saas-deploy-trigger-images\n                                  Trigger deployments when images are pushed.\n  openshift-saas-deploy-trigger-moving-commits\n                                  Trigger deployments when a commit changed\n                                  for a ref.\n  openshift-saas-deploy-trigger-upstream-jobs\n                                  Trigger deployments when upstream job runs.\n  openshift-serviceaccount-tokens\n                                  Use OpenShift ServiceAccount tokens across\n                                  namespaces/clusters.\n  openshift-tekton-resources      Manages custom resources for Tekton based\n                                  deployments.\n  openshift-upgrade-watcher       Watches for OpenShift upgrades and sends\n                                  notifications.\n  openshift-users                 Deletion of users from OpenShift clusters.\n  openshift-vault-secrets         Manages OpenShift Secrets from Vault.\n  prometheus-rules-tester         Tests prometheus rules using promtool.\n  quay-membership                 Configures the teams and members in Quay.\n  quay-mirror                     Mirrors external images into Quay.\n  quay-mirror-org                 Mirrors entire Quay orgs.\n  quay-permissions                Manage permissions for Quay Repositories.\n  quay-repos                      Creates and Manages Quay Repos.\n  query-validator                 Validate queries to maintain consumer schema\n                                  compatibility.\n  requests-sender                 Send emails to users based on requests\n                                  submitted to app-interface.\n  resource-scraper                Get resources from clusters and store in\n                                  Vault.\n  resource-template-tester        Tests templating of resources.\n  rhidp-sso-client                Manage Keycloak SSO clients for OCM\n                                  clusters. Part of RHIDP.\n  saas-auto-promotions-manager    Manage auto-promotions defined in SaaS files\n  saas-file-validator             Validates Saas files.\n  sendgrid-teammates              Manages SendGrid teammates for a given\n                                  account.\n  service-dependencies            Validate dependencies are defined for each\n                                  service.\n  signalfx-prometheus-endpoint-monitoring\n                                  Manages Prometheus Probe resources for\n                                  signalfx exporter\n  skupper-network                 Manages Skupper Networks.\n  slack-usergroups                Manage Slack User Groups (channels and\n                                  users).\n  sql-query                       Runs SQL Queries against app-interface RDS\n                                  resources.\n  status-board-exporter           Export Product and Application informnation\n                                  to Status Board.\n  status-page-components          Manages components on statuspage.io hosted\n                                  status pages.\n  status-page-maintenances        Manages maintenances on statuspage.io hosted\n                                  status pages.\n  template-renderer               Render datafile templates in app-interface.\n  template-validator              Test app-interface templates.\n  terraform-aws-route53           Manage AWS Route53 resources using\n                                  Terraform.\n  terraform-cloudflare-dns        Manage Cloudflare DNS using Terraform.\n  terraform-cloudflare-resources  Manage Cloudflare Resources using Terraform.\n  terraform-cloudflare-users      Manage Cloudflare Users using Terraform.\n  terraform-init                  Initialize AWS accounts for Terraform usage.\n  terraform-repo                  Manages raw HCL Terraform from a separate\n                                  repository.\n  terraform-resources             Manage AWS Resources using Terraform.\n  terraform-tgw-attachments       Manages Transit Gateway attachments.\n  terraform-users                 Manage AWS users using Terraform.\n  terraform-vpc-peerings          Manage VPC peerings between OSD clusters and\n                                  AWS accounts or other OSD clusters.\n  terraform-vpc-resources         Manage VPC creation\n  unleash-feature-toggles         Manage Unleash feature toggles.\n  vault-replication               Allow vault to replicate secrets to other\n                                  instances.\n  version-gate-approver           Approves OCM cluster upgrade version gates.\n  vpc-peerings-validator          Validates that VPC peerings do not exist\n                                  between public and internal clusters.\n```\n\n## Tools\n\nAdditionally, the following tools are available:\n\n- `app-interface-metrics-exporter`: Exports metrics from App-Interface.\n- `app-interface-reporter`: Creates service reports and submits PR to App-Interface.\n- `glitchtip-access-reporter`: Creates a report of users with access to Glitchtip.\n- `glitchtip-access-revalidation`: Requests a revalidation of Glitchtip access.\n- `qontract-cli`: A cli tool for qontract (currently very good at getting information).\n- `run-integration`: A script to run qontract-reconcile in a container.\n- `saas-metrics-exporter`: This tool is responsible for exposing/exporting SaaS metrics and data.\n- `template-validation`: Run template validation.\n\n## Installation\n\nInstall the package from PyPI:\n\n```sh\nuv tool install --python 3.11 qontract-reconcile\n```\n\nor via `pip`:\n\n```sh\npip install qontract-reconcile\n```\n\nInstall runtime requirements:\n\nVersions can be found in [qontract-reconcile-base Dockerfile](https://github.com/app-sre/container-images/blob/master/qontract-reconcile-base/Dockerfile).\n\n- amtool\n- git-secrets\n- helm\n- kubectl\n- oc\n- promtool\n- skopeo\n- terraform\n\n## Development\n\nThis project targets Python version 3.11.x for best compatibility and leverages [uv](https://docs.astral.sh/uv/) for the dependency managment.\n\nCreate a local development environment with all required dependencies:\n\n```sh\nuv sync --python 3.11\n```\n\n### Image build\n\nIn order to speed up frequent builds and avoid issues with dependencies, docker image\nmakes use [`qontract-reconcile-build`](https://quay.io/repository/app-sre/qontract-reconcile-base?tag=latest&tab=tags)\nimage. See [`app-sre/coontainer-images`](https://github.com/app-sre/container-images)\nrepository if you want to make changes to the base image.\n\nThis repo [`Dockerfile`](dockerfiles/Dockerfile) must only contain instructions related to the Python code build.\n\nThe [README](dockerfiles/README.md) contains more information about the Dockerfile and the build stages.\n\n### Testing\n\nThis project uses [pytset](https://docs.pytest.org/en/stable/) as the test runner and\nthese tools for static analysis and type checking:\n\n- [ruff](https://docs.astral.sh/ruff/): A fast Python linter and code formatter.\n- [mypy](https://mypy.readthedocs.io/en/stable/): A static type checker for Python.\n\nThe [Makefile](Makefile) contains several targets to help with testing, linting,\nformatting, and type checking:\n\n- `make all-tests`: Run all available tests.\n- `make linter-test`: Run the linter and formatter tests.\n- `make types-test`: Run the type checker tests.\n- `make qenerate-test`: Run the query classes generation tests.\n- `make helm-test`: Run the helm chart tests.\n- `make unittest`: Run all Python unit tests.\n\n## Run reconcile loop for an integration locally in a container\n\nThis is currently only tested with the docker container engine.\n\nFor more flexible way to run in container, please see [qontract-development-cli](https://github.com/app-sre/qontract-development-cli).\n\n### Prepare config.toml\n\nMake sure the file `./config.dev.toml` exists and contains your current configuration.\nYour `config.dev.toml` should point to the following qontract-server address:\n\n```toml\n[graphql]\nserver = \"http://host.docker.internal:4000/graphql\"\n```\n\n### Run qontract-server\n\nStart the [qontract-server](https://github.com/app-sre/qontract-server) in a different window, e.g., via:\n\nRun this in the root dir of `qontract-server` repo:\n\n```shell\nmake build-dev\n```\n\n### Trigger integration\n\n```shell\nmake dev-reconcile-loop INTEGRATION_NAME=terraform-resources DRY_RUN=--dry-run LOG_LEVEL=DEBUG INTEGRATION_EXTRA_ARGS=--light SLEEP_DURATION_SECS=100\n```\n\n## Query Classes\n\nWe use [qenerate](https://github.com/app-sre/qenerate) to generate data classes for GQL queries.\nGQL definitions and generated classes can be found [here](reconcile/gql_definitions/).\n\n### Workflow\n\n1. Define your query or fragment in a `.gql` file somewhere in `reconcile/gql_definitions`.\n2. Every gql file must hold exactly one `query` OR `fragment` definition. You must not have multiple definitions within one file.\n3. Do not forget to add `# qenerate: plugin=pydantic_v1` in the beginning of the file. This tells `qenerate` which plugin is used to render the code.\n4. Have an up-to-date schema available at localhost:4000\n5. `make gql-introspection` gets the type definitions. They will be stored in `reconcile/gql_definitions/introspection.json`\n6. `make gql-query-classes` generates the data classes for your queries and fragments\n\n## Design Patterns\n\nThis project follows a set of established architectural and implementation patterns to ensure consistency, reliability, and scalability. For a detailed explanation of these concepts, please see the **[Design Patterns Documentation](docs/patterns/README.md)**.\n\nUnderstanding these patterns, especially the `qenerate` workflow for GraphQL data binding, is highly recommended for new developers.\n\n## Troubleshooting\n\n`faulthandler` is enabled for this project and SIGUSR1 is registered to dump the traceback. To do so, you can use `kill -USR1 pid` where pid is the ID of the qontract-reconcile process.\n\n## Profiling\n\nEnable the Python cProfile module by setting the environment variable `ENABLE_PROFILING=1` before running the integration. This will generate a profile file `/tmp/profile.prof`.\n\nYou can then analyze the profile using `snakeviz`:\n\n```sh\nsnakeviz /tmp/profile.prof\n```\n\n> :information_source: Note\n>\n> `cProfile` doesn't support multithreading, but it can still highlight performance issues on the main thread.\n> If you need to profile multithreaded code, consider using [py-spy](https://github.com/benfred/py-spy) or similar tools that support sampling profiling.\n> Also [memray](https://github.com/bloomberg/memray) could be beneficial for memory profiling.\n\n## Code style guide\n\nQontract-reconcile uses [PEP8](https://peps.python.org/pep-0008/) as the code style guide.\nThe style is enforced via PR checks (`make test`) with the help of the following utilities:\n\n- [Ruff - An extremely fast Python linter and code formatter, written in Rust.](https://docs.astral.sh/ruff/)\n- [Mypy](https://mypy.readthedocs.io/en/stable/)\n\nRun `make format` before you commit your changes to keep the code compliant.\n\n## Release\n\nRelease version are calculated from git tags of the form X.Y.Z.\n\n- If the current commit has such a tag, it will be used as is\n- Otherwise the latest tag of that format is used and:\n  - the patch label (Z) is incremented\n  - the string `.pre<count>+<commitid>` is appended. `<count>` is the number of commits since the X.Y.Z tag. `<commitid>` is... the current commit id.\n\nAfter the PR is merged, a CI job will be triggered that will publish the package to pypi: <https://pypi.org/project/qontract-reconcile>.\n\n## Licence\n\n[Apache License Version 2.0](LICENSE).\n\n## Authors\n\nThese tools have been written by the [Red Hat App-SRE Team](mailto:sd-app-sre@redhat.com).\n\n[pypi-link]:                https://pypi.org/project/qontract-reconcile/\n[pypi-platforms]:           https://img.shields.io/pypi/pyversions/qontract-reconcile\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "Apache 2.0", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "qontract-reconcile", "package_url": "https://pypi.org/project/qontract-reconcile/", "platform": null, "project_url": "https://pypi.org/project/qontract-reconcile/", "project_urls": {"documentation": "https://github.com/app-sre/qontract-reconcile", "homepage": "https://github.com/app-sre/qontract-reconcile", "repository": "https://github.com/app-sre/qontract-reconcile"}, "provides_extra": null, "release_url": "https://pypi.org/project/qontract-reconcile/0.10.2.dev293/", "requires_dist": ["anymarkup<0.9.0,>=0.7.0", "boto3==1.34.94", "botocore==1.34.94", "click<9.0,>=7.0", "croniter<1.1.0,>=1.0.15", "dateparser~=1.1.7", "deepdiff==6.7.1", "dnspython~=2.1", "dt==1.1.73", "filetype~=1.2.0", "gql==3.1.0", "hvac<0.8.0,>=0.7.0", "jenkins-job-builder~=4.3.0", "jinja2<3.2.0,>=2.10.1", "jira~=3.1", "jsonpatch~=1.33", "jsonpath-ng==1.5.3", "jsonpath-rw<1.5.0,>=1.4.0", "jsonpointer~=2.4", "kubernetes~=24.0", "ldap3<2.10.0,>=2.9.1", "markupsafe==2.1.1", "networkx~=2.8", "parse==1.18.0", "prometheus-client~=0.8", "psycopg2-binary~=2.9", "pydantic~=1.10.6", "pygithub<1.59,>=1.58", "pyjwt~=2.7", "pyopenssl~=23.0", "pypd<1.2.0,>=1.1.0", "python-gitlab==6.0.0", "requests-oauthlib~=1.3", "requests~=2.32", "rich<14.0.0,>=13.3.0", "ruamel-yaml<0.18.0,>=0.17.22", "semver~=3.0", "sendgrid<6.5.0,>=6.4.8", "sentry-sdk~=2.0", "slack-sdk<4.0,>=3.10", "sretoolbox~=2.6", "sshtunnel>=0.4.0", "tabulate<0.9.0,>=0.8.6", "terrascript==0.9.0", "toml<0.11.0,>=0.10.0", "unleashclient~=5.11", "urllib3~=2.2", "websocket-client<0.55.0,>=0.35", "yamllint==1.34.0"], "requires_python": "==3.11.*", "summary": "Collection of tools to reconcile services with their desired state as defined in the app-interface DB.", "version": "0.10.2.dev293", "yanked": false, "yanked_reason": null}, "last_serial": 30394631, "urls": [{"comment_text": null, "digests": {"blake2b_256": "07c057a7f0805a57e416faeb789244ac3a5e09122def7517c0943e374be383f8", "md5": "a765e85adbe5a6c39a398ece9dc15dc8", "sha256": "86a8a5543b4348211fe6f9fdbf66bb8bfb6392fd7dc7d08e6584252370449ee7"}, "downloads": -1, "filename": "qontract_reconcile-0.10.2.dev293-py3-none-any.whl", "has_sig": false, "md5_digest": "a765e85adbe5a6c39a398ece9dc15dc8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "==3.11.*", "size": 1329059, "upload_time": "2025-07-29T02:37:15", "upload_time_iso_8601": "2025-07-29T02:37:15.325597Z", "url": "https://files.pythonhosted.org/packages/07/c0/57a7f0805a57e416faeb789244ac3a5e09122def7517c0943e374be383f8/qontract_reconcile-0.10.2.dev293-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "e1debac855ced90e5ce728e30c028a8f3c7cc6b0ba6e8e350a43676a00dd949e", "md5": "c10cec4e5018a064e479273596c98ae8", "sha256": "9d339ee520389ba54432db796f4906dfa1a4d59bdae1ad9f76e4449b8ea1540d"}, "downloads": -1, "filename": "qontract_reconcile-0.10.2.dev293.tar.gz", "has_sig": false, "md5_digest": "c10cec4e5018a064e479273596c98ae8", "packagetype": "sdist", "python_version": "source", "requires_python": "==3.11.*", "size": 908909, "upload_time": "2025-07-29T02:37:18", "upload_time_iso_8601": "2025-07-29T02:37:18.915258Z", "url": "https://files.pythonhosted.org/packages/e1/de/bac855ced90e5ce728e30c028a8f3c7cc6b0ba6e8e350a43676a00dd949e/qontract_reconcile-0.10.2.dev293.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:36:21 GMT", "package": "gmscaffold", "version": "1.0.9", "json": {"info": {"author": "yao", "author_email": "1125564921@qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13"], "description": "[![Latest Version](https://img.shields.io/pypi/v/gmscaffold.svg)](https://pypi.python.org/pypi/gmscaffold/)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/gmscaffold.svg)](https://pypi.python.org/pypi/gmscaffold/)\n[![Downloads](https://img.shields.io/pypi/dm/gmscaffold.svg)](https://pypi.org/project/gmscaffold/)\n\ngmscaffold\n==========\n\n## 1. Preparing the Development Environment\n\n### 1.1 Introduction\n\nA scaffolding tool helps you **quickly generate the basic structure of a project**. With a simple command, it can automatically create project directories, configuration files, and initialization code, saving you the hassle of manual setup.\n\nIn this system, you can use the command-line tool `gmcli` to quickly create a standardized application project structure, enabling you to start development efficiently.\n\n---\n\n### 1.2 Environment Setup\n\n#### Install Python Environment\n\n* **Install Python 3.10 or later**\n  Visit the [official Python website](https://www.python.org/downloads/) to download and install the appropriate version for your operating system.\n\n  > \u26a0\ufe0f Currently, the scaffolding tool supports **Python 3.10 and above** only.\n\n* **Install pip (Python package manager)**\n  Most systems come with pip pre-installed. If not, please refer to the [official pip documentation](https://pip.pypa.io/en/stable/installation/) for installation instructions.\n\n---\n\n### 1.3 Install the Scaffolding Tool\n\nInstall the CLI tool via pip:\n\n```bash\npip3 install gmscaffold\n```\n\nOnce installed, you can use the `gmcli` command to create your project.\n\n---\n\n## 2. Generate a Project with the Scaffold\n\n### 2.1 Create a New Scaffolded Project\n\nRun the following command to generate the project structure:\n\n```bash\ngmcli gm_app create_app\n```\n\n> \ud83d\udca1 Tip: The project will be created in the **current working directory**, so make sure you `cd` into the desired path first.\n\n---\n\n#### Example Output:\n\n```text\n\u279c  ~ gmcli gm_app create_app\n\n     _/_/_/  _/      _/    _/_/_/    _/_/_/  _/    _/\n  _/        _/_/  _/_/  _/        _/        _/    _/\n _/  _/_/  _/  _/  _/    _/_/      _/_/    _/_/_/_/\n_/    _/  _/      _/        _/        _/  _/    _/\n _/_/_/  _/      _/  _/_/_/    _/_/_/    _/    _/\n\nPlease enter the project name: example\nPlease enter the author name: xxx\nPlease enter contact email: xxx@163.com\nPlease enter the project version: 0.0.1\nPlease enter the project description: example\nDEBUG:GmScaffold:[example] create_gm_app successfully\n\n```\n\n---\n\n### 2.2 Command Parameters\n\n| Parameter           | Description                     |\n| ------------------- | ------------------------------- |\n| `gm_app create_app` | Create a new scaffolded project |\n\n---\n\n### 2.3 Project Structure\n\nAfter execution, the following structure will be generated:\n\n```\nexample/\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 consts/           # Constants (e.g., status codes, config keys)\n\u2502   \u251c\u2500\u2500 i18n/             # Internationalization (default: English & Chinese)\n\u2502   \u251c\u2500\u2500 middlewares/      # Middleware modules (e.g., auth, request handlers)\n\u2502   \u251c\u2500\u2500 schemas/          # Data validation schemas\n\u2502   \u251c\u2500\u2500 services/         # Business logic\n\u2502   \u251c\u2500\u2500 utils/            # Utility functions (e.g., logging, tools)\n\u2502   \u2514\u2500\u2500 __init__.py\n\u251c\u2500\u2500 config.yaml           # Configuration file (logs, ports, etc.)\n\u251c\u2500\u2500 install.sh            # Optional install script (e.g., Redis, MySQL)\n\u251c\u2500\u2500 main.py               # Application entry point\n\u251c\u2500\u2500 makefile              # Build or packaging script\n\u251c\u2500\u2500 requirements.txt      # Python dependencies list\n\u251c\u2500\u2500 .gitignore            # Git ignore settings\n\u251c\u2500\u2500 ReadMe.md             # Project documentation\n```\n\n---\n\n#### Key File Descriptions:\n\n* `main.py`: Entry point of the application\n* `install.sh`: Optional script to install external services (e.g., Redis, MySQL)\n* `config.yaml`: Centralized configuration management (port, logs, DB, etc.)\n* `requirements.txt`: Python dependencies list (can also use `poetry`)\n\n---\n\n### 2.4 Usage & Extension\n\nThe generated project serves as a general-purpose API service template and can be extended for various business scenarios:\n\n* \u2705 Can be used with [**simplejrpc SDK**](https://pypi.org/project/simplejrpc/) to quickly build JSON-RPC services\n* \u2705 Also supports standalone use with custom business logic and structure\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "MIT", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "gmscaffold", "package_url": "https://pypi.org/project/gmscaffold/", "platform": null, "project_url": "https://pypi.org/project/gmscaffold/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/gmscaffold/1.0.9/", "requires_dist": ["cleo<3.0.0,>=2.1.0", "fire<0.8.0,>=0.7.0", "jinja2<4.0.0,>=3.1.4", "pydispatch<2.0.0,>=1.1.0", "pyfiglet<2.0.0,>=1.0.2"], "requires_python": "<4.0,>=3.10", "summary": "GM Scaffold", "version": "1.0.9", "yanked": false, "yanked_reason": null}, "last_serial": 30394591, "urls": [{"comment_text": null, "digests": {"blake2b_256": "3dd2e3aaa7c5075a6bc333476e093ba46de7ae3c22f64f3979365bd1d23cea55", "md5": "08bf06c2c22dc8d2ffc9688c2d69bec9", "sha256": "08b3d990913dd7541c994cee013bde7dede40586a9a438ff49e7c0f927d34b9f"}, "downloads": -1, "filename": "gmscaffold-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "08bf06c2c22dc8d2ffc9688c2d69bec9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "<4.0,>=3.10", "size": 165393, "upload_time": "2025-07-29T02:36:21", "upload_time_iso_8601": "2025-07-29T02:36:21.797241Z", "url": "https://files.pythonhosted.org/packages/3d/d2/e3aaa7c5075a6bc333476e093ba46de7ae3c22f64f3979365bd1d23cea55/gmscaffold-1.0.9-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "13c14a2cb4dc0e14bebb1c9309d51de55cf4280f7a5b2d88ebe3cbc882f980c2", "md5": "ae2fb60684d087ee20df3b10a17280be", "sha256": "2e7779670610793ebb0c504d9554578b2ef866725ae823fdb30eb94b46058993"}, "downloads": -1, "filename": "gmscaffold-1.0.9.tar.gz", "has_sig": false, "md5_digest": "ae2fb60684d087ee20df3b10a17280be", "packagetype": "sdist", "python_version": "source", "requires_python": "<4.0,>=3.10", "size": 113201, "upload_time": "2025-07-29T02:36:23", "upload_time_iso_8601": "2025-07-29T02:36:23.332230Z", "url": "https://files.pythonhosted.org/packages/13/c1/4a2cb4dc0e14bebb1c9309d51de55cf4280f7a5b2d88ebe3cbc882f980c2/gmscaffold-1.0.9.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:36:01 GMT", "package": "jxWebUI", "version": "0.3.3", "json": {"info": {"author": "\u5f90\u6653\u8f76", "author_email": "andrew@pythonpi.top", "bugtrack_url": null, "classifiers": [], "description": "\n\n\njxWebUI\u662f\u4e3apython\u7a0b\u5e8f\u5458\u5f00\u53d1\u7684\u7b80\u5355\u6613\u7528\u7684WebUI\u5e93\uff0c\u901a\u8fc7\u7b80\u5355\u7684\u6587\u672c\u5b9a\u4e49\u5373\u53ef\u5b9a\u4e49\u5404\u79cdweb\u754c\u9762\u53d1\u5e03\u4f7f\u7528\u3002\u9002\u5408\u4e0d\u8ffd\u6c42\u70ab\u9177\u7684\u754c\u9762\uff0c\u800c\u662f\u4fa7\u91cd\u5feb\u901f\u5b9e\u73b0\u529f\u80fd\u7684python\u7a0b\u5e8f\u5458\u3002\n\n### \u7248\u672c\u66f4\u65b0\u8bf4\u660e\n\n0.3.0\u7248\u672c\u7684\u4fee\u6539\uff1a\n\n1\u3001\u589e\u52a0capa\u7684Init\u4e8b\u4ef6\uff0c\u5728capa\u521d\u59cb\u5316\u65f6\u4f1a\u8c03\u7528\u8be5\u4e8b\u4ef6\n\n2\u3001\u589e\u52a0\u53d8\u91cf-\u6570\u636e\u5bf9\u8c61\u5c5e\u6027\u6620\u5c04\uff0c\u5927\u5e45\u5ea6\u7b80\u5355\u6570\u636e\u5bf9\u8c61\u7684\u8f93\u5165\u8f93\u51fa\u5de5\u4f5c\n\n3\u3001\u589e\u52a0\u4e86capa.data\u4ee5\u63d0\u4f9b\u6574\u4e2acapa\u7684\u5168\u5c40\u6027\u6570\u636e\n\n\u8be6\u89c1\u7f16\u7a0b\u6307\u5357\u4e2d\u3010\u53d8\u91cf-\u6570\u636e\u5bf9\u8c61\u5c5e\u6027\u6620\u5c04\u3011\u4e00\u8282\u3002\n\n4\u3001\u901a\u8fc7\u4e86\u5bf9\u63a5jxORM\u7684\u6d4b\u8bd5\uff0c\u5728\u6587\u6863\u90e8\u5206\u589e\u52a0\u4e86jxORM\u7684\u4f7f\u7528\u8bf4\u660e\n\n### \u8bf4\u660e\n\njxWebUI\u7684\u4f7f\u7528\u975e\u5e38\u7b80\u5355\uff0c\u4e3b\u8981\u5305\u62ec\u51e0\u4e2a\u6b65\u9aa4\uff1a\n\n1\u3001\u5bfc\u5165\u4f9d\u8d56\n\n\tfrom jxWebUI import jxWebLogger, jxWebServer, jxWebCapa, jxWebGetUser, jxWebSQLGetDBConnection\n\n2\u3001\u521b\u5efa\u4e00\u4e2acapa\n\n\tcapa = jxWebCapa('test.first_page')\n\ncapa\u5c31\u662f\u4e00\u4e2a\u6865\u3010\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u4e2a\u529f\u80fd\u6a21\u5757\u3011\uff0c\u628aweb\u754c\u9762\u548cpython\u4ee3\u7801\u8854\u63a5\u8d77\u6765\u3002\u8fd9\u91cc\u5b9a\u4e49\u4e86\u4e00\u4e2a\u540d\u4e3a\u3010test.first_page\u3011\u7684capa\u3002\u5bf9\u4e8e\u540d\u5b57\uff0ccapa\u672c\u8eab\u5e76\u65e0\u7279\u6b8a\u8981\u6c42\uff0c\u8fd9\u91cc\u662f\u4e3a\u4e86\u4fbf\u4e8e\u4ee3\u7801\u7ec4\u7ec7\uff0c\u91c7\u7528\u4e86\u70b9\u5206\u65b9\u5f0f\u3002\n\n3\u3001\u901a\u8fc7capa\u5b9a\u4e49\u4e00\u4e2a\u754c\u9762\n\n\t@capa.disp  \n\tdef test_web(ci, db, ctx):  \n\t\tjxWebLogger.info(f'testUI_tms::test_web')  \n\t    ci.setOutput('input1', '\u6d4b\u8bd5\u8f93\u51fa3')\n\n\t@capa.web  \n\tdef test_web(page):  \n        t = page.table('table1').width(900)\n        r = t.row()\n        r.text('text1').bind('text1').width(200)\n        r.input('input1').bind('input1').width(200)\n\n\u8fd9\u5c31\u5b9a\u4e49\u4e86\u4e00\u4e2a\u3010test_web\u3011\u7684\u9875\u9762\uff1a\n\n![test_web](http://115.29.52.95:10018/images/test_web_1.png)\n\n4\u3001\u5b9a\u4e49\u4e00\u4e2a\u6253\u5f00\u8fd9\u4e2a\u754c\u9762\u7684\u5feb\u6377\u680f\u83dc\u5355\n  \n\tcapa.shortCutTree_add_item('\u6d4b\u8bd5', '\u6d4b\u8bd51', 'test_web')\n\n\u8fd9\u4f1a\u5728\u5de6\u4fa7\u7684\u5feb\u6377\u5de5\u5177\u680f\u4e2d\u51fa\u73b0\u4e00\u4e2a\u4e8c\u7ea7\u76ee\u5f55\uff1a\u6d4b\u8bd5->\u6d4b\u8bd51\n\n![test_web](http://115.29.52.95:10018/images/test_web_2.png)\n\n\u70b9\u51fb\u3010\u6d4b\u8bd51\u3011\u5c31\u4f1a\u663e\u793a\u4e0a\u9762\u7684\u3010test_web\u3011\u9875\u9762\u3002\n\n5\u3001\u542f\u52a8web\u670d\u52a1\n\n\tjxWebServer.start(port=10068)\n\n\u542f\u52a8\u540e\uff0c\u6253\u5f00\uff1a http://127.0.0.1:10068/tms.html# \u4f1a\u5f39\u51fa\u4e00\u4e2a\u767b\u5f55\u7a97\u53e3\uff0c\u968f\u4fbf\u8f93\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801\u5c31\u4f1a\u767b\u5165\u3002\n\n<font color=red size=3>\u6ce8\uff1a</font>\uff1a\u7528\u6237\u8ba4\u8bc1\uff0c\u8bf7\u53c2\u8003\u3010\u7528\u6237\u3011\u4e00\u8282\n\n\u56e0\u4e3ajxWebUI\u9700\u8981\u505a\u4e00\u70b9\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff0c\u6240\u4ee5\u53ef\u80fd\u8981\u7b49\u4e24\u4e09\u79d2\u4e2d\uff0c\u5c31\u4f1a\u5728\u5de6\u4fa7\u7684\u5feb\u6377\u680f\uff0c\u51fa\u73b0\u3010\u6d4b\u8bd5->\u6d4b\u8bd51\u3011\u3002\u70b9\u51fb\u6d4b\u8bd51\u5c31\u4f1a\u5f39\u51fatest_web\u754c\u9762\u3002\n\n<font color=red size=3>\u6ce8\uff1a</font>\uff1a\u56e0python\u4ee3\u7801\u7b2c\u4e00\u6b21\u6267\u884c\u65f6\u9700\u8fdb\u884c\u7f16\u8bd1\uff0c\u542f\u52a8\u540e\u7b2c\u4e00\u6b21\u6253\u5f00\u9875\u9762\u65f6\uff0c\u7f16\u8bd1\u65f6\u95f4\u5982\u679c\u8d85\u8fc7\u4e86\u8fd9\u4e2a\u7b49\u5f85\u65f6\u95f4\uff0c\u53ef\u80fd\u5bfc\u81f4\u9875\u9762\u65e0\u6cd5\u6253\u5f00\uff0c\u591a\u5237\u65b0\u51e0\u6b21\u5373\u53ef\u3002\n\n\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u548c\u4e0a\u9762\u7684\u622a\u56fe\u4e0d\u540c\uff0c\u8f93\u5165\u6846\u4e2d\u4f1a\u51fa\u73b0\uff1a\u3010\u6d4b\u8bd5\u8f93\u51fa3\u3011\u3002\u8fd9\u662f\u56e0\u4e3a\u6211\u4eec\u8fd8\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7528\u3010@capa.disp\u3011\u4fee\u9970\u7684\u3010test_web\u3011\u4e8b\u4ef6\u51fd\u6570\u3002\n\njxWebUI\u5728\u663e\u793a\u4e00\u4e2a\u9875\u9762\u65f6\uff0c\u4f1a\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u6765\u5b9e\u73b0\u5bf9\u8be5\u9875\u9762\u7684\u521d\u59cb\u5316\u5de5\u4f5c\u3002\n\n\u521d\u59cb\u5316test_web\u51fd\u6570\u7684\u4ee3\u7801\uff1a\n\n\tjxWebLogger.info(f'testUI_tms::test_web') \n\n\u4f1a\u5c06\u5b57\u7b26\u4e32\u3010testUI_tms::test_web\u3011\u4ee5info\u7ea7\u522b\u8bb0\u5165jxWebLogger\u3002\u5176\u5bf9\u5e94\u7684\u65e5\u5fd7\u6587\u4ef6\u4f4d\u4e8e\u6267\u884c\u7a0b\u5e8f\u6240\u5728\u76ee\u5f55\u7684\u5b50\u76ee\u5f55\u3010./logs\u3011\u4e2d\u7684\u3010jxWebUI.log\u3011\u3002\n\n\tci.setOutput('input1', '\u6d4b\u8bd5\u8f93\u51fa3')\n\n\u662f\u5c06\u4e00\u4e2a\u5b57\u7b26\u4e32\u3010\u6d4b\u8bd5\u8f93\u51fa3\u3011\u8f93\u51fa\u5230web\u754c\u9762\u7684\u3010input1\u3011\u4e2d\uff0c\u6839\u636etest_web\u51fd\u6570\u4e2d\u7684\u5b9a\u4e49\uff0c\u4e5f\u5c31\u662f\u8f93\u51fa\u5230\u6587\u672c\u8f93\u5165\u6846\u4e2d\u3002\n\n\u603b\u7684\u4ee3\u7801\u662f\uff1a\n\n\tfrom jxWebUI import jxWebLogger, jxWebServer, jxWebCapa, jxWebGetUser, jxWebSQLGetDBConnection\n\n\tcapa = jxWebCapa('test.first_page')\n\n\t@capa.disp  \n\tdef test_web(ci, db, ctx):  \n\t\tjxWebLogger.info(f'testUI_tms::test_web')  \n\t    ci.setOutput('input1', '\u6d4b\u8bd5\u8f93\u51fa3')\n\n\t@capa.web  \n\tdef test_web(page):  \n        t = page.table('table1').width(900)\n        r = t.row()\n        r.text('text1').bind('text1').width(200)\n        r.input('input1').bind('input1').width(200)\n  \n\tcapa.shortCutTree_add_item('\u6d4b\u8bd5', '\u6d4b\u8bd51', 'test_web')\n\n\tjxWebServer.start(port=10068)\n\n\u5c06\u4e0a\u8ff0\u4ee3\u7801\u4fdd\u5b58\u4e3atestUI_tms.py\uff0c\u7136\u540e\u5728\u547d\u4ee4\u884c\u6267\u884c\uff1a\n\n\tpython3 testUI_tms.py\n\n\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\uff1a http://127.0.0.1:10068/tms.html# \u8fdb\u884c\u67e5\u770b\u3002\n\n### jxWebUI\u7f16\u7a0b\u6307\u5357\n\n\u8bf7\u5728python\u89e3\u91ca\u5668\u4e2d\u6267\u884c\uff1a\n\n    >>> from jxWebUI import startJxWebUIManualServer\n    >>> startJxWebUIManualServer(port=10068, web_def=True)\n    \n\u7136\u540e\u5728\u6d4f\u89c8\u5668\u4e2d\u6253\u5f00\uff1a http://127.0.0.1:10068/tms.html# \u968f\u4fbf\u8f93\u5165\u7528\u6237\u540d\u3001\u5bc6\u7801\u767b\u5f55\u540e\uff0c\u5c31\u53ef\u4ee5\u67e5\u770b\u5230\u7f16\u7a0b\u624b\u518c\u7684\u76ee\u5f55\uff1a\n\n![\u7f16\u7a0b\u624b\u518c](http://115.29.52.95:10018/images/sc_1.png)\n\n\u6574\u4f53\u8bf4\u660e\u83dc\u5355\u4e0b\u662fjxWebUI\u7f16\u7a0b\u7684\u603b\u4f53\u6982\u5ff5\u548cAPI\u8bf4\u660e\u7b49\uff0cweb\u7ec4\u4ef6\u8bf4\u660e\u83dc\u5355\u4e0b\u5219\u8be6\u7ec6\u4ecb\u7ecd\u4e86\u5df2\u5f00\u653e\u7684web\u7ec4\u4ef6\u7684\u8bf4\u660e\u548c\u5c5e\u6027\u7b49\u3002\u70b9\u51fb\u8fd9\u4e8c\u8005\u7684\u7ae0\u8282\u4f1a\u4ee5markdown\u7684\u5f62\u5f0f\u63d0\u4f9b\u76f8\u5e94\u7684\u8bf4\u660e\uff1a\n\n![\u7f16\u7a0b\u624b\u518c](http://115.29.52.95:10018/images/sc_2.png)\n\nweb\u7ec4\u4ef6\u5b9a\u4e49\u83dc\u5355\u4e0b\u5219\u63d0\u4f9b\u4e86\u4e00\u4e2ajxWebUI\u81ea\u4e3e\u7684web\u7ec4\u4ef6\u5b9a\u4e49\u548c\u5c55\u793a\u529f\u80fd\uff1a\n\n![\u7f16\u7a0b\u624b\u518c](http://115.29.52.95:10018/images/sc_3.png)\n\n![\u7f16\u7a0b\u624b\u518c](http://115.29.52.95:10018/images/sc_4.png)\n\n### \u5b89\u88c5jxWebUI\n\n\tpip install jxWebUI\n\n### \u65e5\u5fd7\n\n\u542f\u52a8jxWebUI\u540e\uff0c\u4f1a\u5728\u5f53\u524d\u76ee\u5f55\u4e0b\u7684logs\u5b50\u76ee\u5f55\u3010\u6ca1\u6709\u5219\u4f1a\u81ea\u52a8\u521b\u5efa\u3011\u4e2d\u4f1a\u521b\u5efa\u4e24\u4e2a\u65e5\u5fd7\u6587\u4ef6\uff1a\n\n- jxWebUI.log\uff1a\u662fjxWebUI\u7684\u8fd0\u884c\u65e5\u5fd7\uff0c\u5305\u62ec\u7528\u6237\u7684\u64cd\u4f5c\u7b49\n- web.log\uff1ajxWebUI\u7684web\u670d\u52a1\u6240\u4f9d\u8d56\u7684tornado\u7684\u65e5\u5fd7\n\n\u8fd9\u4e24\u79cd\u65e5\u5fd7\u90fd\u662f30\u4e2a\u65e5\u5fd7\u6587\u4ef6\u3001\u6bcf\u4e2a\u65e5\u5fd7\u6587\u4ef6500M\u8fdb\u884c\u5faa\u73af\uff0c\u6240\u4ee5\u5982\u957f\u671f\u8fd0\u884c\u9700\u6ce8\u610f\u786c\u76d8\u7a7a\u95f4\u7684\u4f7f\u7528\u60c5\u51b5\u3002\n\n\n\n    \n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://blog.csdn.net/jxandrew/article/details/148670848", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "jxWebUI", "package_url": "https://pypi.org/project/jxWebUI/", "platform": null, "project_url": "https://pypi.org/project/jxWebUI/", "project_urls": {"Homepage": "https://blog.csdn.net/jxandrew/article/details/148670848"}, "provides_extra": null, "release_url": "https://pypi.org/project/jxWebUI/0.3.3/", "requires_dist": ["importlib-resources==6.4.5", "pycryptodome", "pytz", "apscheduler", "antlr4-python3-runtime==4.7.2", "tornado"], "requires_python": ">=3.8", "summary": "\u7b80\u5355\u6613\u7528\u7684python Web UI\u5e93", "version": "0.3.3", "yanked": false, "yanked_reason": null}, "last_serial": 30394575, "urls": [{"comment_text": null, "digests": {"blake2b_256": "3025c095f099de3d9d93bc283235965592bde32856c3098059624b944b885243", "md5": "3c09db7c800f7e4d5da759b18e705b67", "sha256": "bdf4086bb336547cd59ccf43b87b56cd654e71358576d258436f17b7087e4633"}, "downloads": -1, "filename": "jxwebui-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3c09db7c800f7e4d5da759b18e705b67", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 13715533, "upload_time": "2025-07-29T02:36:01", "upload_time_iso_8601": "2025-07-29T02:36:01.858263Z", "url": "https://files.pythonhosted.org/packages/30/25/c095f099de3d9d93bc283235965592bde32856c3098059624b944b885243/jxwebui-0.3.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "d6a01ef9afcdd1f45cdde92ae361619793945242c9750be5b35c4f3c0ede1ab5", "md5": "098e869b3fd840e4674a4c4359bdb5d8", "sha256": "e34f74d28ab93c24b773dd3438a134a3b1ce03ccd3f1b9423036bde8856b8c11"}, "downloads": -1, "filename": "jxwebui-0.3.3.tar.gz", "has_sig": false, "md5_digest": "098e869b3fd840e4674a4c4359bdb5d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 12786281, "upload_time": "2025-07-29T02:36:05", "upload_time_iso_8601": "2025-07-29T02:36:05.680973Z", "url": "https://files.pythonhosted.org/packages/d6/a0/1ef9afcdd1f45cdde92ae361619793945242c9750be5b35c4f3c0ede1ab5/jxwebui-0.3.3.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:35:15 GMT", "package": "vcf2fasta", "version": "0.1.2", "json": {"info": {"author": null, "author_email": "Santiago Sanchez <santiago.sanchez@gmail.com>", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# vcf2fasta\n\n> **this package is not actively maintained**\n\n## Overview\n`vcf2fasta` is a Python package designed to convert genomic regions and intervals into FASTA alignments using VCF files, GFF/GTF files, and a reference FASTA genome. This tool is particularly useful for bioinformaticians and researchers working with genomic data.\n\n## Features\n- Convert VCF files to FASTA format.\n- Support for GFF/GTF and BED files for feature annotation.\n- Options to include reference sequences and handle incomplete CDS.\n- Command-line interface for easy usage.\n\n## Installation\nTo install `vcf2fasta`, you can use pip:\n\n```bash\npip install vcf2fasta\n```\n\n## Build\nBuild the package locally with:\n\n```\npython3 -m pip install -e .\n```\n\n## Usage\nTo use `vcf2fasta`, you can run the command line interface with the required arguments. Here is an example:\n\n```bash\nvcf2fasta -f genome.fas -v variants.vcf.gz -g intervals.gff -e CDS\n```\n\n### Command Line Options\n- `-f`, `--fasta`: Path to the reference FASTA file (required).\n- `-v`, `--vcf`: Path to the tabix-indexed VCF file (required).\n- `-g`, `--gff`: Path to the GFF/GTF file (optional).\n- `-b`, `--blend`: Concatenate GFF entries of the specified feature into a single alignment (default: False).\n- `-i`, `--inframe`: Force the first codon of the sequence to be inframe (default: False).\n- `-o`, `--out`: Name for the output directory (default: \"vcf2fasta\").\n- `-r`, `--addref`: Include the reference sequence in the FASTA alignment (default: False).\n- `-s`, `--skip`: Skip features without variants (default: False).\n\n## Contribution\nContributions are welcome! If you would like to contribute to `vcf2fasta`, please fork the repository and submit a pull request. You can also open issues for any bugs or feature requests.\n\n## License\nThis project is licensed under the MIT License. See the LICENSE file for more details.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": "vcf, fasta, bioinformatics, genomics", "license": "MIT License  Copyright (c) 2023 Santiago Sanchez  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:  1. The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.  2. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "vcf2fasta", "package_url": "https://pypi.org/project/vcf2fasta/", "platform": null, "project_url": "https://pypi.org/project/vcf2fasta/", "project_urls": {"Homepage": "https://github.com/santiagosnchez/vcf2fasta", "Repository": "https://github.com/santiagosnchez/vcf2fasta"}, "provides_extra": null, "release_url": "https://pypi.org/project/vcf2fasta/0.1.2/", "requires_dist": ["pysam", "art"], "requires_python": ">=3.10", "summary": "A package to convert VCF files to FASTA format.", "version": "0.1.2", "yanked": false, "yanked_reason": null}, "last_serial": 30394533, "urls": [{"comment_text": "", "digests": {"blake2b_256": "93fa8cb37f85877def5ff22da092397e7bdfe7fefa31dda7c91e29af726b78ad", "md5": "0668ac39241339d3ef7cb4292126d6b8", "sha256": "2823414afe95cde38d44aef03c76d7cb7f82df67d61e209939fc735fa6ca2da2"}, "downloads": -1, "filename": "vcf2fasta-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0668ac39241339d3ef7cb4292126d6b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 10412, "upload_time": "2025-07-29T02:35:15", "upload_time_iso_8601": "2025-07-29T02:35:15.771001Z", "url": "https://files.pythonhosted.org/packages/93/fa/8cb37f85877def5ff22da092397e7bdfe7fefa31dda7c91e29af726b78ad/vcf2fasta-0.1.2-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "89437dca61107966a140f91f0284e28e52e4333b10f4fba500cf5d5014eb0132", "md5": "bebec3a84f46e3c04c77948db776d45b", "sha256": "5a19f6cd18174b82949b1bf18ce80ec6c70f563ab6757dc495f07564ae47de1d"}, "downloads": -1, "filename": "vcf2fasta-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bebec3a84f46e3c04c77948db776d45b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 10424, "upload_time": "2025-07-29T02:35:16", "upload_time_iso_8601": "2025-07-29T02:35:16.558090Z", "url": "https://files.pythonhosted.org/packages/89/43/7dca61107966a140f91f0284e28e52e4333b10f4fba500cf5d5014eb0132/vcf2fasta-0.1.2.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:34:30 GMT", "package": "xyz-common", "version": "0.3.1", "json": {"info": {"author": "szuprefix", "author_email": "szuprefix@126.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Indexing", "Topic :: Utilities"], "description": "", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/szuprefix/py-xyz-common", "keywords": null, "license": "MIT", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "xyz-common", "package_url": "https://pypi.org/project/xyz-common/", "platform": null, "project_url": "https://pypi.org/project/xyz-common/", "project_urls": {"Homepage": "https://github.com/szuprefix/py-xyz-common"}, "provides_extra": null, "release_url": "https://pypi.org/project/xyz-common/0.3.1/", "requires_dist": ["django>=1.11.2"], "requires_python": null, "summary": "common", "version": "0.3.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394479, "urls": [{"comment_text": "", "digests": {"blake2b_256": "449892675bb21e9dd5fa880f863cf4f6f6765ff2651f193a6f0b0ef49fc72ce4", "md5": "d73c61eb27b499982215944e5f90f4d9", "sha256": "6221cdc569615ec10407895c8737a38649b4cc2b7a6944d1204d2a588f57fc92"}, "downloads": -1, "filename": "xyz_common-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d73c61eb27b499982215944e5f90f4d9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11888, "upload_time": "2025-07-29T02:34:30", "upload_time_iso_8601": "2025-07-29T02:34:30.607973Z", "url": "https://files.pythonhosted.org/packages/44/98/92675bb21e9dd5fa880f863cf4f6f6765ff2651f193a6f0b0ef49fc72ce4/xyz_common-0.3.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:34:08 GMT", "package": "mcp-metricflow", "version": "1.0.1b0", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# mcp-metricflow\n\n[![Python](https://img.shields.io/badge/python-3.10+-blue.svg)](https://www.python.org/downloads/)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)\n[![Coverage](https://img.shields.io/badge/coverage-100%25-brightgreen.svg)](htmlcov/index.html)\n[![Code style: ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n[![Package manager: uv](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json)](https://github.com/astral-sh/uv)\n\nA Model Context Protocol (MCP) server that provides MetricFlow CLI tools through both SSE (with optional API key authentication) and STDIO interfaces.\n\n> [!WARNING]\n> This repository is a learning project focused on MetricFlow integration with MCP. For production use cases, please refer to the official [dbt-mcp](https://github.com/dbt-labs/dbt-mcp) implementation by dbt Labs.\n\n## Table of Contents\n\n- [mcp-metricflow](#mcp-metricflow)\n  - [Table of Contents](#table-of-contents)\n  - [Overview](#overview)\n  - [Setup](#setup)\n  - [Configuration](#configuration)\n  - [Running the MCP Server](#running-the-mcp-server)\n    - [STDIO Mode](#stdio-mode)\n    - [SSE Mode](#sse-mode)\n      - [API Key Authentication](#api-key-authentication)\n  - [Available Tools](#available-tools)\n  - [Project Structure](#project-structure)\n  - [Contributing \u2728](#contributing-)\n  - [TODO](#todo)\n\n## Overview\n\nThis project provides a Model Context Protocol (MCP) server that wraps MetricFlow CLI commands, making them accessible through both Server-Sent Events (SSE) and Standard Input/Output (STDIO) interfaces. It enables seamless integration with Claude Desktop and other MCP-compatible clients.\n\n## Setup\n\n```bash\n# Install uv at https://docs.astral.sh/uv/getting-started/installation/\n\n# Copy environment template\ncp .env.template .env\n# ...and then jump to # Configuration section to fulfill it\n```\n\n## Configuration\n\nEdit the `.env` file with your specific configuration:\n\n```bash\n# Required: Path to your dbt project\nDBT_PROJECT_DIR=/path/to/your/dbt/project e.g. /Users/dat/repos/il/jaffle-shop\n\n# Optional: Other configurations\nDBT_PROFILES_DIR=~/.dbt\nMF_PATH=mf\nMF_TMP_DIR=/tmp\n\n# SSE server configuration (optional)\nMCP_HOST=localhost\nMCP_PORT=8000\n\n# API key authentication for SSE mode (optional)\nMCP_API_KEY=your-secret-api-key\nMCP_REQUIRE_AUTH=false\n```\n\n## Running the MCP Server\n\n### STDIO Mode\n\nFor integration with Claude Desktop (or any other MCP Client tool), use STDIO mode with the following `uvx` command:\n\n```bash\nuvx --env-file /path/to/.env mcp-metricflow\n\n```\n\nAdd this configuration to the respective client's config file:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-metricflow\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"--env-file\",\n        \"<path-to-.env-file>\",\n        \"mcp-metricflow\"\n      ]\n    },\n  }\n}\n```\n\n### SSE Mode\n\nFor web-based integration or direct HTTP access:\n\n```bash\n# export DBT_PROFILES_DIR=~/.dbt\nuv run python src/main_sse.py\n```\n\nThe server will start on `http://localhost:8000` (or the host/port specified in your environment variables).\n\n#### API Key Authentication\n\nThe SSE server supports optional API key authentication. To enable authentication:\n\n1. Set the required environment variables:\n   ```bash\n   export MCP_API_KEY=\"your-secret-api-key\"\n   export MCP_REQUIRE_AUTH=\"true\"\n   ```\n\n2. Access authenticated endpoints by including the API key in the Authorization header:\n   ```bash\n   # Health check (no authentication required)\n   curl http://localhost:8000/health\n\n   # SSE endpoint (requires authentication when enabled)\n   curl -H \"Authorization: Bearer your-secret-api-key\" http://localhost:8000/sse\n   ```\n\n**Authentication Configuration:**\n- `MCP_API_KEY`: The secret API key for authentication (required when `MCP_REQUIRE_AUTH=true`)\n- `MCP_REQUIRE_AUTH`: Enable/disable authentication (`true`, `1`, `yes`, `on` to enable; default: `false`)\n\n**Security Notes:**\n- The `/health` endpoint is always accessible without authentication for monitoring purposes\n- The `/sse` endpoint requires authentication when `MCP_REQUIRE_AUTH=true`\n- API keys are case-sensitive and support special characters\n- Store API keys securely and avoid committing them to version control\n\n## Available Tools\n\nThe MCP server exposes the following MetricFlow CLI tools:\n\n| Tool | Description | Required Parameters | Optional Parameters |\n|------|-------------|-------------------|-------------------|\n| `query` | Execute MetricFlow queries | `session_id`, `metrics` | `group_by`, `start_time`, `end_time`, `where`, `order`, `limit`, `saved_query`, `explain`, `show_dataflow_plan`, `show_sql_descriptions` |\n| `list_metrics` | List available metrics | None | `search`, `show_all_dimensions` |\n| `list_dimensions` | List available dimensions | None | `metrics` |\n| `list_entities` | List available entities | None | `metrics` |\n| `list_dimension_values` | List values for a dimension | `dimension`, `metrics` | `start_time`, `end_time` |\n| `validate_configs` | Validate model configurations | None | `dw_timeout`, `skip_dw`, `show_all`, `verbose_issues`, `semantic_validation_workers` |\n| `health_checks` | Perform system health checks | None | None |\n\nEach tool includes comprehensive documentation accessible through the MCP interface.\n\n## Project Structure\n\n```\nsrc/\n\u251c\u2500\u2500 config/\n\u2502   \u2514\u2500\u2500 config.py              # Configuration management\n\u251c\u2500\u2500 server/\n\u2502   \u251c\u2500\u2500 auth.py                # API key authentication\n\u2502   \u251c\u2500\u2500 sse_server.py          # SSE server implementation\n\u2502   \u2514\u2500\u2500 stdio_server.py        # STDIO server implementation\n\u251c\u2500\u2500 tools/\n\u2502   \u251c\u2500\u2500 prompts/mf_cli/        # Tool documentation (*.md files)\n\u2502   \u251c\u2500\u2500 metricflow/            # MetricFlow CLI wrappers\n\u2502   \u2502   \u251c\u2500\u2500 base.py            # Shared command execution\n\u2502   \u2502   \u251c\u2500\u2500 query.py           # Query functionality\n\u2502   \u2502   \u251c\u2500\u2500 list_metrics.py    # List metrics\n\u2502   \u2502   \u251c\u2500\u2500 list_dimensions.py # List dimensions\n\u2502   \u2502   \u251c\u2500\u2500 list_entities.py   # List entities\n\u2502   \u2502   \u251c\u2500\u2500 list_dimension_values.py # List dimension values\n\u2502   \u2502   \u251c\u2500\u2500 validate_configs.py # Configuration validation\n\u2502   \u2502   \u2514\u2500\u2500 health_checks.py   # Health checks\n\u2502   \u2514\u2500\u2500 cli_tools.py           # MCP tool registration\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 logger.py              # Logging configuration\n\u2502   \u2514\u2500\u2500 prompts.py             # Prompt loading utilities\n\u251c\u2500\u2500 main_sse.py                # SSE server entry point\n\u2514\u2500\u2500 main_stdio.py              # STDIO server entry point\n```\n\n## Contributing \u2728\n\nIf you've ever wanted to contribute to this tool, and a great cause, now is your chance!\n\nSee the contributing docs [CONTRIBUTING](CONTRIBUTING.md) for more information.\n\nIf you've found this tool to be very helpful, please consider giving the repository a star, sharing it on social media, or even writing a blog post about it \ud83d\udc8c\n\n[![mcp-metricflow stars](https://img.shields.io/github/stars/datnguye/mcp-metricflow.svg?logo=github&style=for-the-badge&label=Star%20this%20repo)](https://github.com/datnguye/mcp-metricflow)\n[![buy me a coffee](https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?logo=buy-me-a-coffee&logoColor=white&labelColor=ff813f&style=for-the-badge)](https://www.buymeacoffee.com/datnguye)\n\nFinally, super thanks to our *Contributors*:\n\n<a href=\"https://github.com/datnguye/mcp-metricflow/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=datnguye/mcp-metricflow\" />\n</a>\n\n## TODO\n- Test STDIO mode\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "MIT License\n         \n         Copyright (c) 2025 Dat Nguyen\n         \n         Permission is hereby granted, free of charge, to any person obtaining a copy\n         of this software and associated documentation files (the \"Software\"), to deal\n         in the Software without restriction, including without limitation the rights\n         to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         copies of the Software, and to permit persons to whom the Software is\n         furnished to do so, subject to the following conditions:\n         \n         The above copyright notice and this permission notice shall be included in all\n         copies or substantial portions of the Software.\n         \n         THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n         SOFTWARE.\n         ", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "mcp-metricflow", "package_url": "https://pypi.org/project/mcp-metricflow/", "platform": null, "project_url": "https://pypi.org/project/mcp-metricflow/", "project_urls": null, "provides_extra": ["dev", "test"], "release_url": "https://pypi.org/project/mcp-metricflow/1.0.1b0/", "requires_dist": ["fastapi>=0.115.12", "uvicorn>=0.34.2", "dbt-metricflow>=0.8.2", "python-dotenv>=1.1.0", "mcp>=1.3.2", "black>=25.1.0; extra == \"dev\"", "ruff<=0.11.10,>=0.11.0; extra == \"dev\"", "bandit>=1.8.3; extra == \"dev\"", "pre-commit>=4.2.0; extra == \"dev\"", "poethepoet>=0.34.0; extra == \"dev\"", "dbt-snowflake>=1.8.0; extra == \"dev\"", "pytest>=8.0.0; extra == \"test\"", "pytest-asyncio>=0.25.0; extra == \"test\"", "pytest-cov>=6.0.0; extra == \"test\"", "pytest-mock>=3.14.0; extra == \"test\"", "pytest-sugar>=1.0.0; extra == \"test\"", "coverage[toml]>=7.6.0; extra == \"test\""], "requires_python": ">=3.10", "summary": "A Model Context Protocol (MCP) server that provides MetricFlow CLI tools", "version": "1.0.1b0", "yanked": false, "yanked_reason": null}, "last_serial": 30395181, "urls": [{"comment_text": null, "digests": {"blake2b_256": "ced66ce278840ee457ad766ce3ce34f4589b19b3f8fc365c27032575e182b10a", "md5": "778475d839e3cc7ee93b8e5dc3279489", "sha256": "ee4b3672646824ce4c388061f3917bfd73c49b6a045eaf1d180b2bb07c3ff695"}, "downloads": -1, "filename": "mcp_metricflow-1.0.1b0-py3-none-any.whl", "has_sig": false, "md5_digest": "778475d839e3cc7ee93b8e5dc3279489", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 28488, "upload_time": "2025-07-29T02:34:08", "upload_time_iso_8601": "2025-07-29T02:34:08.101969Z", "url": "https://files.pythonhosted.org/packages/ce/d6/6ce278840ee457ad766ce3ce34f4589b19b3f8fc365c27032575e182b10a/mcp_metricflow-1.0.1b0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "dd4ba84aa9d3130fdcda4e84e025fec57c0cd74b2b5c51e345816f9a0e89bd1f", "md5": "a4eac3faabc246359591c51161897875", "sha256": "aa282255d6891a13149b02b0e26bb44c6ff84999b9ebc5973c0aa3cedc53067a"}, "downloads": -1, "filename": "mcp_metricflow-1.0.1b0.tar.gz", "has_sig": false, "md5_digest": "a4eac3faabc246359591c51161897875", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 38763, "upload_time": "2025-07-29T02:34:09", "upload_time_iso_8601": "2025-07-29T02:34:09.484515Z", "url": "https://files.pythonhosted.org/packages/dd/4b/a84aa9d3130fdcda4e84e025fec57c0cd74b2b5c51e345816f9a0e89bd1f/mcp_metricflow-1.0.1b0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:34:06 GMT", "package": "odoo-addon-product-category-tax", "version": "18.0.1.0.0.3", "json": {"info": {"author": "ForgeFlow S.L., Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n======================\nProduct Category Taxes\n======================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:0f55de8bf677155f8f07f41f64d3ae1ec21a29692817d8dcdd8b8084348c6ecf\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Faccount--financial--tools-lightgray.png?logo=github\n    :target: https://github.com/OCA/account-financial-tools/tree/18.0/product_category_tax\n    :alt: OCA/account-financial-tools\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/account-financial-tools-18-0/account-financial-tools-18-0-product_category_tax\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/account-financial-tools&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nEdit taxes directly in the product category.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nUsage\n=====\n\nIn case all the products within the category will use the same tax\nsetup:\n\n1. Select the taxes in the product category form\n2. Click on \"Apply to Products\"\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/account-financial-tools/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/account-financial-tools/issues/new?body=module:%20product_category_tax%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* ForgeFlow S.L.\n\nContributors\n------------\n\n- Aaron Henriquez <ahenriquez@forgeflow.com>\n- Denis Roussel <denis.roussel@acsone.eu>\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\nThis module is part of the `OCA/account-financial-tools <https://github.com/OCA/account-financial-tools/tree/18.0/product_category_tax>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/account-financial-tools", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-product-category-tax", "package_url": "https://pypi.org/project/odoo-addon-product-category-tax/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-product-category-tax/", "project_urls": {"Homepage": "https://github.com/OCA/account-financial-tools"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-product-category-tax/18.0.1.0.0.3/", "requires_dist": ["odoo-addon-product_category_product_link==18.0.*", "odoo==18.0.*"], "requires_python": ">=3.10", "summary": "Configure taxes in the product category", "version": "18.0.1.0.0.3", "yanked": false, "yanked_reason": null}, "last_serial": 30394462, "urls": [{"comment_text": "", "digests": {"blake2b_256": "fba6a41902812d9b1a20e9f2b38167681b0673e45524c39a0534209bd4c1781a", "md5": "28c7c414ed53ff4085b081c7a4545a84", "sha256": "b5f1d6cf34fd96fa830f23776c0a2220e05af71c8a8d47d8a1a9643aa0cf735a"}, "downloads": -1, "filename": "odoo_addon_product_category_tax-18.0.1.0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "28c7c414ed53ff4085b081c7a4545a84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 27885, "upload_time": "2025-07-29T02:34:06", "upload_time_iso_8601": "2025-07-29T02:34:06.547225Z", "url": "https://files.pythonhosted.org/packages/fb/a6/a41902812d9b1a20e9f2b38167681b0673e45524c39a0534209bd4c1781a/odoo_addon_product_category_tax-18.0.1.0.0.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:34:05 GMT", "package": "colordove-auto", "version": "1.0.1", "json": {"info": {"author": "Zhongshuizhou", "author_email": "zhongshuizhou@qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.8"], "description": "# Colordove Auto\r\n\r\nColordove Auto is a cross-border e-commerce automation tool designed to help merchants automate their daily tasks. By simplifying processes like order handling, payment processing, and shipment management, this tool significantly improves efficiency, reduces manual labor, and minimizes errors.\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://www.colordove.com", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "colordove-auto", "package_url": "https://pypi.org/project/colordove-auto/", "platform": null, "project_url": "https://pypi.org/project/colordove-auto/", "project_urls": {"Homepage": "https://www.colordove.com"}, "provides_extra": null, "release_url": "https://pypi.org/project/colordove-auto/1.0.1/", "requires_dist": ["beautifulsoup4==4.13.4", "blinker==1.4", "chardet==5.2.0", "flask==2.0.3", "mitmproxy==8.0.0", "openpyxl==3.1.5", "pandas==2.0.3", "pika==1.3.2", "psutil==5.8.0", "pyotp==2.4.0", "pytz==2025.2", "selenium==4.27.1", "undetected-chromedriver==3.5.5", "werkzeug==2.0.3", "xlrd==2.0.2"], "requires_python": ">=3.8", "summary": "Cross border e-commerce automation program", "version": "1.0.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394466, "urls": [{"comment_text": null, "digests": {"blake2b_256": "2c7b9db1024bab04272464ba4ecf572c488e2e2fddf193e575f8b40ef5a83dda", "md5": "5c7dd2bf158d20867bb40f529342ee43", "sha256": "47763879e12bbf657fe1b81bc223d69b242686250662be9a6762aceca8d985cf"}, "downloads": -1, "filename": "colordove_auto-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5c7dd2bf158d20867bb40f529342ee43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 2402, "upload_time": "2025-07-29T02:34:05", "upload_time_iso_8601": "2025-07-29T02:34:05.858156Z", "url": "https://files.pythonhosted.org/packages/2c/7b/9db1024bab04272464ba4ecf572c488e2e2fddf193e575f8b40ef5a83dda/colordove_auto-1.0.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "d3781c058766bb9807246b3612b4b8d736c298a10ad182dff9112f0921e66def", "md5": "dcfbc851c6ce82cc493cf517907ed310", "sha256": "4d67a3623b2647d73fabdb352d1ab9141d97c268b185dc8d23e3207b8b0e69be"}, "downloads": -1, "filename": "colordove_auto-1.0.1.tar.gz", "has_sig": false, "md5_digest": "dcfbc851c6ce82cc493cf517907ed310", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 2838, "upload_time": "2025-07-29T02:34:07", "upload_time_iso_8601": "2025-07-29T02:34:07.825366Z", "url": "https://files.pythonhosted.org/packages/d3/78/1c058766bb9807246b3612b4b8d736c298a10ad182dff9112f0921e66def/colordove_auto-1.0.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:33:58 GMT", "package": "odoo-addon-account-chart-update-l10n-eu-oss", "version": "17.0.1.0.0.4", "json": {"info": {"author": "ForgeFlow, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 17.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n=========================\nAccount Chart update OSS \n=========================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:49cc9e2f81918da140340cb40ebd1aaaeca4401cd5d6fdccff718b1429105240\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Faccount--financial--tools-lightgray.png?logo=github\n    :target: https://github.com/OCA/account-financial-tools/tree/17.0/account_chart_update_l10n_eu_oss\n    :alt: OCA/account-financial-tools\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/account-financial-tools-17-0/account-financial-tools-17-0-account_chart_update_l10n_eu_oss\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/account-financial-tools&target_branch=17.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nGlue module for account chart update and OSS. It makes the wizard ignore\nOSS taxes when updating the CoA.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/account-financial-tools/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/account-financial-tools/issues/new?body=module:%20account_chart_update_l10n_eu_oss%0Aversion:%2017.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* ForgeFlow\n\nContributors\n------------\n\n- Lois Rilo <lois.rilo@forgeflow.com>\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-LoisRForgeFlow| image:: https://github.com/LoisRForgeFlow.png?size=40px\n    :target: https://github.com/LoisRForgeFlow\n    :alt: LoisRForgeFlow\n\nCurrent `maintainer <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-LoisRForgeFlow| \n\nThis module is part of the `OCA/account-financial-tools <https://github.com/OCA/account-financial-tools/tree/17.0/account_chart_update_l10n_eu_oss>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/account-financial-tools", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-account-chart-update-l10n-eu-oss", "package_url": "https://pypi.org/project/odoo-addon-account-chart-update-l10n-eu-oss/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-account-chart-update-l10n-eu-oss/", "project_urls": {"Homepage": "https://github.com/OCA/account-financial-tools"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-account-chart-update-l10n-eu-oss/17.0.1.0.0.4/", "requires_dist": ["odoo-addon-account_chart_update<17.1dev,>=17.0dev", "odoo<17.1dev,>=17.0a"], "requires_python": ">=3.10", "summary": "Account Chart update OSS", "version": "17.0.1.0.0.4", "yanked": false, "yanked_reason": null}, "last_serial": 30394458, "urls": [{"comment_text": "", "digests": {"blake2b_256": "e768c0632260b374cb7ebb1d7b9d1e799047dd0d3fa05be388bcb8d647cd54a6", "md5": "bfe49725acac6e3031298f1c94eb2803", "sha256": "cb5cd481ea8dc8de81bc40e93588e6d96efdb6cccb6d2fa8e13cfe66bd0a037f"}, "downloads": -1, "filename": "odoo_addon_account_chart_update_l10n_eu_oss-17.0.1.0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bfe49725acac6e3031298f1c94eb2803", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 21851, "upload_time": "2025-07-29T02:33:58", "upload_time_iso_8601": "2025-07-29T02:33:58.735509Z", "url": "https://files.pythonhosted.org/packages/e7/68/c0632260b374cb7ebb1d7b9d1e799047dd0d3fa05be388bcb8d647cd54a6/odoo_addon_account_chart_update_l10n_eu_oss-17.0.1.0.0.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:33:55 GMT", "package": "rtta", "version": "0.1.8", "json": {"info": {"author": null, "author_email": "Adam DePrince <adam.deprince@gmail.com>", "bugtrack_url": null, "classifiers": [], "description": "RTTA\n======================\n\nPurpose\n-------\n\nThe purpose of this package is to implement a very low latency\nincremental technical analysis toolkit.  Most technical analysis\ntool-kits work in a \"batch mode\" where you hand them a blob of data and\nin a pandas series and they return a series with the computed data.\nIncremental updates for these require O(n) work.  There is one tool,\n[talipp](https://pypi.org/project/talipp/) that is designed to support\nincremental updates, but it is implemented in pure python and is a\nlittle more than an order of magnitude slower than rtta.  On a 5995WX\ntalipp's exponential moving average requires 465ns; rtta's requires\n36ns.  A bare python function call requires 35ns, so we're about as\nfast as fast can be.\n\nInstallation\n------------\n\n\n```bash\npip install rtta\n```\n\nUsage\n-----\n\nEach operator has a paramater fillna.  If set to false, nan values\nwill be returned until the operation is \"populated\".  If set to true,\nbest guesses will be returned until the operation is populated.\n\nSo for example, our simple moving average `SMAIndicator` works sort of like this:\n\n```python\n>>> import rtta.trend as trend\n>>> sma = trend.SMAIndicator(window=4, fillna=True)\n>>> sma.update(1)\n1\n>>> sma.update(2)\n1.5\n>>> sma.update(3)\n2\n>>> sma.update(2)\n2\n>>> sma.update(2)\n2.25 <- The 1 fell off the end of the sliding window\n```\n\nPerformance\n-----------\n\n|Indicator | Latency |\n|----------|---------|\n| SMA      | 36ns    |\n| EMA      | 36ns    |\n| MACD     | 55ns    |", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "rtta", "package_url": "https://pypi.org/project/rtta/", "platform": null, "project_url": "https://pypi.org/project/rtta/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/rtta/0.1.8/", "requires_dist": ["numpy>=2.0.2"], "requires_python": ">=3.9.8", "summary": "Low latency incremental technical analysis", "version": "0.1.8", "yanked": false, "yanked_reason": null}, "last_serial": 30394456, "urls": [{"comment_text": null, "digests": {"blake2b_256": "0d89e790344652283ab8e732b430d60188ca1a7f1c678ac9a159645ea16dbb08", "md5": "f7c57954f0a91d7bf5ad163412cb7be9", "sha256": "adb27d08f4d891ac12e8abb24ed88915e9470d72a189b472a46cfbe7df4a3655"}, "downloads": -1, "filename": "rtta-0.1.8.tar.gz", "has_sig": false, "md5_digest": "f7c57954f0a91d7bf5ad163412cb7be9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9.8", "size": 32095, "upload_time": "2025-07-29T02:33:55", "upload_time_iso_8601": "2025-07-29T02:33:55.738867Z", "url": "https://files.pythonhosted.org/packages/0d/89/e790344652283ab8e732b430d60188ca1a7f1c678ac9a159645ea16dbb08/rtta-0.1.8.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:33:53 GMT", "package": "mcex-mcp-server", "version": "2.1.0", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "\u53d1\u5e03\u5230PyPi\nuv build \nuv publish --token [pypi-xxxxxxxxxx (token) ]\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "mcex-mcp-server", "package_url": "https://pypi.org/project/mcex-mcp-server/", "platform": null, "project_url": "https://pypi.org/project/mcex-mcp-server/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/mcex-mcp-server/2.1.0/", "requires_dist": ["bs4>=0.0.2", "dashscope>=1.23.5", "dotenv>=0.9.9", "httpx>=0.28.1", "mcp[cli]>=1.9.4", "mcp~=1.9.4", "pydantic~=2.11.7", "requests~=2.32.4"], "requires_python": ">=3.12", "summary": "\u6ef4\u704c\u901a\u5ba2\u670d\u52a9\u624b", "version": "2.1.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394454, "urls": [{"comment_text": null, "digests": {"blake2b_256": "7743795950499a91404748b730129875ca2671472529e4c023b51f8ae4b4b3c4", "md5": "6322eb022b12e1b7d4d5af503a3d4ba5", "sha256": "385251c9f2b5654a1a0c57a037c8a88dce04c3f8b69d9a2201e9799daf6479c3"}, "downloads": -1, "filename": "mcex_mcp_server-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6322eb022b12e1b7d4d5af503a3d4ba5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.12", "size": 7528, "upload_time": "2025-07-29T02:33:53", "upload_time_iso_8601": "2025-07-29T02:33:53.467265Z", "url": "https://files.pythonhosted.org/packages/77/43/795950499a91404748b730129875ca2671472529e4c023b51f8ae4b4b3c4/mcex_mcp_server-2.1.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "8806e3cf8c05ebedffdcaf9fbcef33217009c85220fb60fec1b387e3175b90eb", "md5": "ebe3b98544cb52e1c3dfd12236f303b3", "sha256": "8c903c4dc8f6c73e199e08122c61b06844bc52e491bd6374b413aa1a3bf596dc"}, "downloads": -1, "filename": "mcex_mcp_server-2.1.0.tar.gz", "has_sig": false, "md5_digest": "ebe3b98544cb52e1c3dfd12236f303b3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.12", "size": 49359, "upload_time": "2025-07-29T02:33:54", "upload_time_iso_8601": "2025-07-29T02:33:54.597146Z", "url": "https://files.pythonhosted.org/packages/88/06/e3cf8c05ebedffdcaf9fbcef33217009c85220fb60fec1b387e3175b90eb/mcex_mcp_server-2.1.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:33:44 GMT", "package": "vsc-dm", "version": "0.0.1.16585153505", "json": {"info": {"author": "Matthew Ballance", "author_email": "matt.ballance@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "\n  Provides a library for constrained randomization and coverage collection\n  \n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Description", "Home-Page", "Keywords", "License", "License-File", "Requires-Dist", "Summary"], "home_page": "https://github.com/vsc-tools/vsc-dm", "keywords": "SystemVerilog, Verilog, RTL, Python", "license": "Apache 2.0", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "vsc-dm", "package_url": "https://pypi.org/project/vsc-dm/", "platform": null, "project_url": "https://pypi.org/project/vsc-dm/", "project_urls": {"Homepage": "https://github.com/vsc-tools/vsc-dm"}, "provides_extra": null, "release_url": "https://pypi.org/project/vsc-dm/0.0.1.16585153505/", "requires_dist": ["debug-mgr"], "requires_python": null, "summary": "Core Verification Stimulus and Coverage library", "version": "0.0.1.16585153505", "yanked": false, "yanked_reason": null}, "last_serial": 30394451, "urls": [{"comment_text": null, "digests": {"blake2b_256": "6d465d99406c1072ba2311fdb9362b255ed43202a7caec2352762e9e451f7424", "md5": "915de275a6240a0e2776b579ff69189c", "sha256": "37695e5d940c8c308c61e8094d132c2fb2dc6689717b01acade59bf6d1ffe59c"}, "downloads": -1, "filename": "vsc_dm-0.0.1.16585153505-cp313-cp313-macosx_14_0_arm64.whl", "has_sig": false, "md5_digest": "915de275a6240a0e2776b579ff69189c", "packagetype": "bdist_wheel", "python_version": "cp313", "requires_python": null, "size": 756309, "upload_time": "2025-07-29T02:33:44", "upload_time_iso_8601": "2025-07-29T02:33:44.238724Z", "url": "https://files.pythonhosted.org/packages/6d/46/5d99406c1072ba2311fdb9362b255ed43202a7caec2352762e9e451f7424/vsc_dm-0.0.1.16585153505-cp313-cp313-macosx_14_0_arm64.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:33:35 GMT", "package": "mcp-metricflow", "version": "1.0.0b10", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# mcp-metricflow\n\n[![Python](https://img.shields.io/badge/python-3.10+-blue.svg)](https://www.python.org/downloads/)\n[![License](https://img.shields.io/badge/license-MIT-green.svg)](LICENSE)\n[![Coverage](https://img.shields.io/badge/coverage-100%25-brightgreen.svg)](htmlcov/index.html)\n[![Code style: ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n[![Package manager: uv](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/uv/main/assets/badge/v0.json)](https://github.com/astral-sh/uv)\n\nA Model Context Protocol (MCP) server that provides MetricFlow CLI tools through both SSE (with optional API key authentication) and STDIO interfaces.\n\n> [!WARNING]\n> This repository is a learning project focused on MetricFlow integration with MCP. For production use cases, please refer to the official [dbt-mcp](https://github.com/dbt-labs/dbt-mcp) implementation by dbt Labs.\n\n## Table of Contents\n\n- [mcp-metricflow](#mcp-metricflow)\n  - [Table of Contents](#table-of-contents)\n  - [Overview](#overview)\n  - [Setup](#setup)\n  - [Configuration](#configuration)\n  - [Running the MCP Server](#running-the-mcp-server)\n    - [STDIO Mode](#stdio-mode)\n    - [SSE Mode](#sse-mode)\n      - [API Key Authentication](#api-key-authentication)\n  - [Available Tools](#available-tools)\n  - [Project Structure](#project-structure)\n  - [Contributing \u2728](#contributing-)\n  - [TODO](#todo)\n\n## Overview\n\nThis project provides a Model Context Protocol (MCP) server that wraps MetricFlow CLI commands, making them accessible through both Server-Sent Events (SSE) and Standard Input/Output (STDIO) interfaces. It enables seamless integration with Claude Desktop and other MCP-compatible clients.\n\n## Setup\n\n```bash\n# Install uv at https://docs.astral.sh/uv/getting-started/installation/\n\n# Copy environment template\ncp .env.template .env\n# ...and then jump to # Configuration section to fulfill it\n```\n\n## Configuration\n\nEdit the `.env` file with your specific configuration:\n\n```bash\n# Required: Path to your dbt project\nDBT_PROJECT_DIR=/path/to/your/dbt/project e.g. /Users/dat/repos/il/jaffle-shop\n\n# Optional: Other configurations\nDBT_PROFILES_DIR=~/.dbt\nMF_PATH=mf\nMF_TMP_DIR=/tmp\n\n# SSE server configuration (optional)\nMCP_HOST=localhost\nMCP_PORT=8000\n\n# API key authentication for SSE mode (optional)\nMCP_API_KEY=your-secret-api-key\nMCP_REQUIRE_AUTH=false\n```\n\n## Running the MCP Server\n\n### STDIO Mode\n\nFor integration with Claude Desktop (or any other MCP Client tool), use STDIO mode with the following `uvx` command:\n\n```bash\nuvx --env-file /path/to/.env mcp-metricflow\n\n```\n\nAdd this configuration to the respective client's config file:\n\n```json\n{\n  \"mcpServers\": {\n    \"mcp-metricflow\": {\n      \"command\": \"uvx\",\n      \"args\": [\n        \"--env-file\",\n        \"<path-to-.env-file>\",\n        \"mcp-metricflow\"\n      ]\n    },\n  }\n}\n```\n\n### SSE Mode\n\nFor web-based integration or direct HTTP access:\n\n```bash\n# export DBT_PROFILES_DIR=~/.dbt\nuv run python src/main_sse.py\n```\n\nThe server will start on `http://localhost:8000` (or the host/port specified in your environment variables).\n\n#### API Key Authentication\n\nThe SSE server supports optional API key authentication. To enable authentication:\n\n1. Set the required environment variables:\n   ```bash\n   export MCP_API_KEY=\"your-secret-api-key\"\n   export MCP_REQUIRE_AUTH=\"true\"\n   ```\n\n2. Access authenticated endpoints by including the API key in the Authorization header:\n   ```bash\n   # Health check (no authentication required)\n   curl http://localhost:8000/health\n\n   # SSE endpoint (requires authentication when enabled)\n   curl -H \"Authorization: Bearer your-secret-api-key\" http://localhost:8000/sse\n   ```\n\n**Authentication Configuration:**\n- `MCP_API_KEY`: The secret API key for authentication (required when `MCP_REQUIRE_AUTH=true`)\n- `MCP_REQUIRE_AUTH`: Enable/disable authentication (`true`, `1`, `yes`, `on` to enable; default: `false`)\n\n**Security Notes:**\n- The `/health` endpoint is always accessible without authentication for monitoring purposes\n- The `/sse` endpoint requires authentication when `MCP_REQUIRE_AUTH=true`\n- API keys are case-sensitive and support special characters\n- Store API keys securely and avoid committing them to version control\n\n## Available Tools\n\nThe MCP server exposes the following MetricFlow CLI tools:\n\n| Tool | Description | Required Parameters | Optional Parameters |\n|------|-------------|-------------------|-------------------|\n| `query` | Execute MetricFlow queries | `session_id`, `metrics` | `group_by`, `start_time`, `end_time`, `where`, `order`, `limit`, `saved_query`, `explain`, `show_dataflow_plan`, `show_sql_descriptions` |\n| `list_metrics` | List available metrics | None | `search`, `show_all_dimensions` |\n| `list_dimensions` | List available dimensions | None | `metrics` |\n| `list_entities` | List available entities | None | `metrics` |\n| `list_dimension_values` | List values for a dimension | `dimension`, `metrics` | `start_time`, `end_time` |\n| `validate_configs` | Validate model configurations | None | `dw_timeout`, `skip_dw`, `show_all`, `verbose_issues`, `semantic_validation_workers` |\n| `health_checks` | Perform system health checks | None | None |\n\nEach tool includes comprehensive documentation accessible through the MCP interface.\n\n## Project Structure\n\n```\nsrc/\n\u251c\u2500\u2500 config/\n\u2502   \u2514\u2500\u2500 config.py              # Configuration management\n\u251c\u2500\u2500 server/\n\u2502   \u251c\u2500\u2500 auth.py                # API key authentication\n\u2502   \u251c\u2500\u2500 sse_server.py          # SSE server implementation\n\u2502   \u2514\u2500\u2500 stdio_server.py        # STDIO server implementation\n\u251c\u2500\u2500 tools/\n\u2502   \u251c\u2500\u2500 prompts/mf_cli/        # Tool documentation (*.md files)\n\u2502   \u251c\u2500\u2500 metricflow/            # MetricFlow CLI wrappers\n\u2502   \u2502   \u251c\u2500\u2500 base.py            # Shared command execution\n\u2502   \u2502   \u251c\u2500\u2500 query.py           # Query functionality\n\u2502   \u2502   \u251c\u2500\u2500 list_metrics.py    # List metrics\n\u2502   \u2502   \u251c\u2500\u2500 list_dimensions.py # List dimensions\n\u2502   \u2502   \u251c\u2500\u2500 list_entities.py   # List entities\n\u2502   \u2502   \u251c\u2500\u2500 list_dimension_values.py # List dimension values\n\u2502   \u2502   \u251c\u2500\u2500 validate_configs.py # Configuration validation\n\u2502   \u2502   \u2514\u2500\u2500 health_checks.py   # Health checks\n\u2502   \u2514\u2500\u2500 cli_tools.py           # MCP tool registration\n\u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 logger.py              # Logging configuration\n\u2502   \u2514\u2500\u2500 prompts.py             # Prompt loading utilities\n\u251c\u2500\u2500 main_sse.py                # SSE server entry point\n\u2514\u2500\u2500 main_stdio.py              # STDIO server entry point\n```\n\n## Contributing \u2728\n\nIf you've ever wanted to contribute to this tool, and a great cause, now is your chance!\n\nSee the contributing docs [CONTRIBUTING](CONTRIBUTING.md) for more information.\n\nIf you've found this tool to be very helpful, please consider giving the repository a star, sharing it on social media, or even writing a blog post about it \ud83d\udc8c\n\n[![mcp-metricflow stars](https://img.shields.io/github/stars/datnguye/mcp-metricflow.svg?logo=github&style=for-the-badge&label=Star%20this%20repo)](https://github.com/datnguye/mcp-metricflow)\n[![buy me a coffee](https://img.shields.io/badge/buy%20me%20a%20coffee-donate-yellow.svg?logo=buy-me-a-coffee&logoColor=white&labelColor=ff813f&style=for-the-badge)](https://www.buymeacoffee.com/datnguye)\n\nFinally, super thanks to our *Contributors*:\n\n<a href=\"https://github.com/datnguye/mcp-metricflow/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=datnguye/mcp-metricflow\" />\n</a>\n\n## TODO\n- Test STDIO mode\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "MIT License\n         \n         Copyright (c) 2025 Dat Nguyen\n         \n         Permission is hereby granted, free of charge, to any person obtaining a copy\n         of this software and associated documentation files (the \"Software\"), to deal\n         in the Software without restriction, including without limitation the rights\n         to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n         copies of the Software, and to permit persons to whom the Software is\n         furnished to do so, subject to the following conditions:\n         \n         The above copyright notice and this permission notice shall be included in all\n         copies or substantial portions of the Software.\n         \n         THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n         FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n         SOFTWARE.\n         ", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "mcp-metricflow", "package_url": "https://pypi.org/project/mcp-metricflow/", "platform": null, "project_url": "https://pypi.org/project/mcp-metricflow/", "project_urls": null, "provides_extra": ["dev", "test"], "release_url": "https://pypi.org/project/mcp-metricflow/1.0.0b10/", "requires_dist": ["fastapi>=0.115.12", "uvicorn>=0.34.2", "dbt-metricflow>=0.8.2", "python-dotenv>=1.1.0", "mcp>=1.3.2", "black>=25.1.0; extra == \"dev\"", "ruff<=0.11.10,>=0.11.0; extra == \"dev\"", "bandit>=1.8.3; extra == \"dev\"", "pre-commit>=4.2.0; extra == \"dev\"", "poethepoet>=0.34.0; extra == \"dev\"", "dbt-snowflake>=1.8.0; extra == \"dev\"", "pytest>=8.0.0; extra == \"test\"", "pytest-asyncio>=0.25.0; extra == \"test\"", "pytest-cov>=6.0.0; extra == \"test\"", "pytest-mock>=3.14.0; extra == \"test\"", "pytest-sugar>=1.0.0; extra == \"test\"", "coverage[toml]>=7.6.0; extra == \"test\""], "requires_python": ">=3.10", "summary": "A Model Context Protocol (MCP) server that provides MetricFlow CLI tools", "version": "1.0.0b10", "yanked": false, "yanked_reason": null}, "last_serial": 30395181, "urls": [{"comment_text": null, "digests": {"blake2b_256": "db3d076144bd9edf2cf4106360bc2407ff6047d88afcfd138c5980787495b3cd", "md5": "9b42d4e338aab7c2cea98cfb535c0a46", "sha256": "a77295c9e28f301679153e025ba313b55396030551c0215485058ed5253e2525"}, "downloads": -1, "filename": "mcp_metricflow-1.0.0b10-py3-none-any.whl", "has_sig": false, "md5_digest": "9b42d4e338aab7c2cea98cfb535c0a46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 28501, "upload_time": "2025-07-29T02:33:35", "upload_time_iso_8601": "2025-07-29T02:33:35.209994Z", "url": "https://files.pythonhosted.org/packages/db/3d/076144bd9edf2cf4106360bc2407ff6047d88afcfd138c5980787495b3cd/mcp_metricflow-1.0.0b10-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "150697bbf30bada072ebb7ebfd1b2d11769e5abcea2e6a698c3e52a00481b42c", "md5": "7bd22fb3fdd925597660da2603077d8a", "sha256": "4cc8b13c4ceadc1a5ef941d73a5c0673fa2c362b179e39b91b0ed90de4d89797"}, "downloads": -1, "filename": "mcp_metricflow-1.0.0b10.tar.gz", "has_sig": false, "md5_digest": "7bd22fb3fdd925597660da2603077d8a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 38759, "upload_time": "2025-07-29T02:33:36", "upload_time_iso_8601": "2025-07-29T02:33:36.779347Z", "url": "https://files.pythonhosted.org/packages/15/06/97bbf30bada072ebb7ebfd1b2d11769e5abcea2e6a698c3e52a00481b42c/mcp_metricflow-1.0.0b10.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:32:50 GMT", "package": "sagemaker-gen-ai-jupyterlab-extension", "version": "1.0.3", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": ["Framework :: Jupyter", "Framework :: Jupyter :: JupyterLab", "Framework :: Jupyter :: JupyterLab :: 4", "Framework :: Jupyter :: JupyterLab :: Extensions", "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt", "License :: OSI Approved :: BSD License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9"], "description": "# SageMakerGenAIJupyterLabExtension\n\n[![Github Actions Status](/workflows/Build/badge.svg)](/actions/workflows/build.yml)\n\nA JupyterLab extension.\n\nThis extension is composed of a Python package named `SageMakerGenAIJupyterLabExtension`\nfor the server extension and a NPM package named `SageMakerGenAIJupyterLabExtension`\nfor the frontend extension.\n\n## Requirements\n\n- JupyterLab >= 4.0.0\n\n## Install\n\nTo install the extension, execute:\n\n```bash\npip install SageMakerGenAIJupyterLabExtension\n```\n\n## Uninstall\n\nTo remove the extension, execute:\n\n```bash\npip uninstall SageMakerGenAIJupyterLabExtension\n```\n\n## Troubleshoot\n\nIf you are seeing the frontend extension, but it is not working, check\nthat the server extension is enabled:\n\n```bash\njupyter server extension list\n```\n\nIf the server extension is installed and enabled, but you are not seeing\nthe frontend extension, check the frontend extension is installed:\n\n```bash\njupyter labextension list\n```\n\n## Contributing\n\n### Development install\n\nNote: You will need NodeJS to build the extension package.\n\nThe `jlpm` command is JupyterLab's pinned version of\n[yarn](https://yarnpkg.com/) that is installed with JupyterLab. You may use\n`yarn` or `npm` in lieu of `jlpm` below.\n\n```bash\n# Clone the repo to your local environment\n# Change directory to the SageMakerGenAIJupyterLabExtension directory\n# Install package in development mode\npip install -e \".\"\n# Link your development version of the extension with JupyterLab\njupyter labextension develop . --overwrite\n# Server extension must be manually installed in develop mode\njupyter server extension enable sagemaker_gen_ai_jupyterlab_extension\n```\n\nYou can watch the source directory and run JupyterLab at the same time in different terminals to watch for changes in the extension's source and automatically rebuild the extension.\n\n```bash\n# Watch the source directory in one terminal, automatically rebuilding when needed\njlpm watch\n# Run JupyterLab in another terminal\njupyter lab\n```\n\nWith the watch command running, every saved change will immediately be built locally and available in your running JupyterLab. Refresh JupyterLab to load the change in your browser (you may need to wait several seconds for the extension to be rebuilt).\n\nBy default, the `jlpm build` command generates the source maps for this extension to make it easier to debug using the browser dev tools. To also generate source maps for the JupyterLab core extensions, you can run the following command:\n\n```bash\njupyter lab build --minimize=False\n```\n\n### Development uninstall\n\n```bash\n# Server extension must be manually disabled in develop mode\njupyter server extension disable SageMakerGenAIJupyterLabExtension\npip uninstall SageMakerGenAIJupyterLabExtension\n```\n\nIn development mode, you will also need to remove the symlink created by `jupyter labextension develop`\ncommand. To find its location, you can run `jupyter labextension list` to figure out where the `labextensions`\nfolder is located. Then you can remove the symlink named `SageMakerGenAIJupyterLabExtension` within that folder.\n\n### Packaging the extension\n\nSee [RELEASE](RELEASE.md)\n\n---\n\n## Development Workflow\n\nThis extension supports two development environments:\n\n1. **Local Development** - For rapid iteration and testing\n2. **SageMaker Unified Studio** - For final verification before commits\n\n### Prerequisites\n\n- Node.js (check version with `which node`)\n- Python build tools (`pip install build`)\n- Access to SMUS team resources for bearer token generation\n\n### Local Development Setup\n\n#### 1. Configure Environment\n\nUpdate the following values in `__init__.py`:\n\n```\n# Retrieve `AWS access portal URL` from `IAM Identity Center`\nSTART_URL = \"https://d-xxxxx.awsapps.com/start\"\n\n# Run `which node`\nNODE_PATH = \"/Users/xxxxx/.local/share/mise/installs/node/20.9.0/bin/node\"\n\n# Copy the absolute path to `SageMakerGenAIJupyterLabExtension` and prepend `file://`\nWORKSPACE_FOLDER = \"file:///Users/xxxxx/Desktop/workplace/Flare/src/SageMakerGenAIJupyterLabExtension\"\n\n# Please reach out to SMUS team for the `generate_bearer_token` notebook\ndef extract_bearer_token():\n  return \"<CUSTOM BEARER TOKEN>\"\n```\n\nUpdate the following values in `lsp_server_connection.py`:\n\n```\n\"developerProfiles\": False # Change this to False\n```\n\n#### 2. Build and Run\n\n```bash\n# Build the extension and start JupyterLab\npython -m build && jupyter lab\n```\n\n#### 3. Development Tips\n\n- Use the watch mode from the Contributing section for live reloading\n- Test changes immediately in your local JupyterLab instance\n- Verify functionality before proceeding to SageMaker testing\n\n### SageMaker Unified Studio Testing\n\n#### 1. Build Distribution\n\n```bash\n# Generate distribution package\npython -m build\n```\n\nThis creates a `.tar.gz` file in the `dist/` folder.\n\n#### 2. Deploy to SageMaker\n\n```bash\n# Upload the generated .tar.gz to your SMUS workspace\n# Then run the following commands in the SageMaker terminal:\n\npip install sagemaker_gen_ai_jupyterlab_extension-1.0.3.tar.gz\nrestart-sagemaker-ui-jupyter-server\n```\n\n#### 3. Verify Installation\n\n1. Wait for server restart (terminal will disappear)\n2. Refresh your browser page\n3. Test the side widget chat functionality\n\n### Development Best Practices\n\n- Always test locally first for faster iteration\n- Verify in SageMaker Unified Studio before committing\n- Keep bearer tokens secure and never commit them\n- Update version numbers appropriately when building distributions\n1. Run `python -m build` - will generate a .tar.gz file in the `dist` folder.\n2. Upload the `sagemaker_gen_ai_jupyterlab_extension-1.0.3.tar.gz` in the MD workspace\n3. Run `pip install sagemaker_gen_ai_jupyterlab_extension-1.0.3.tar.gz` in a terminal\n4. Run `restart-sagemaker-ui-jupyter-server` in a terminal\n5. Wait until the server restarts (Terminal disappears)\n6. Refresh your page\n7. Start chatting using the side widget\n\n## Instructions for setting up SMUS remote MCP server alpha\n1. paste bin/mcp_dev_setup.sh in your space\n2. make sure its executable: `chmod +x mcp_dev_setup.sh`\n3. Set your desired MCP server URL: `export MCP_URL=\"https://your-custom-url.com/mcp\"`\n3. execute the script `./mcp_dev_setup.sh`\n4. The server will restart. Refresh the page once the restart is complete.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Keywords", "Project-Url"], "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "sagemaker-gen-ai-jupyterlab-extension", "package_url": "https://pypi.org/project/sagemaker-gen-ai-jupyterlab-extension/", "platform": null, "project_url": "https://pypi.org/project/sagemaker-gen-ai-jupyterlab-extension/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/sagemaker-gen-ai-jupyterlab-extension/1.0.3/", "requires_dist": ["aws-embedded-metrics", "jupyter-docprovider<3,>=2.0.2", "jupyter-server-ydoc<3,>=2.0.2", "requests>=2.25.0", "sagemaker-jupyterlab-extension-common", "watchdog>=2.1.0"], "requires_python": ">=3.8", "summary": "An extension supporting SageMaker's GenAI capabilities in JupyterLab", "version": "1.0.3", "yanked": false, "yanked_reason": null}, "last_serial": 30394439, "urls": [{"comment_text": null, "digests": {"blake2b_256": "fd03cacc91c7a764c70e3832f49a1bcf14621ec3725736d5b4682857c9c3837e", "md5": "08bc358af9a4ae742c651ae45d520874", "sha256": "8202c710be716d01ca259080ae11f4bb3198cfca4438c2041e6410f15f29ea33"}, "downloads": -1, "filename": "sagemaker_gen_ai_jupyterlab_extension-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "08bc358af9a4ae742c651ae45d520874", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 120015, "upload_time": "2025-07-29T02:32:50", "upload_time_iso_8601": "2025-07-29T02:32:50.391188Z", "url": "https://files.pythonhosted.org/packages/fd/03/cacc91c7a764c70e3832f49a1bcf14621ec3725736d5b4682857c9c3837e/sagemaker_gen_ai_jupyterlab_extension-1.0.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "85565e0ea92ae3ca8cbaabb8c683425cad82474a73fa5eb06dbfa7cb430a9502", "md5": "93b3856f4fa48352fffa42d466e39d1d", "sha256": "8c7c339da9a5aad749fac36e6e7faa6ce50ec1ac3053c5f9a4215590fe4e70ae"}, "downloads": -1, "filename": "sagemaker_gen_ai_jupyterlab_extension-1.0.3.tar.gz", "has_sig": false, "md5_digest": "93b3856f4fa48352fffa42d466e39d1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 327681, "upload_time": "2025-07-29T02:32:51", "upload_time_iso_8601": "2025-07-29T02:32:51.665598Z", "url": "https://files.pythonhosted.org/packages/85/56/5e0ea92ae3ca8cbaabb8c683425cad82474a73fa5eb06dbfa7cb430a9502/sagemaker_gen_ai_jupyterlab_extension-1.0.3.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:32:31 GMT", "package": "odoo-addon-partner-statement", "version": "18.0.1.1.0.1", "json": {"info": {"author": "ForgeFlow, Odoo Community Association (OCA)", "author_email": "support@odoo-community.org", "bugtrack_url": null, "classifiers": ["Framework :: Odoo", "Framework :: Odoo :: 18.0", "License :: OSI Approved :: GNU Affero General Public License v3", "Programming Language :: Python"], "description": ".. image:: https://odoo-community.org/readme-banner-image\n   :target: https://odoo-community.org/get-involved?utm_source=readme\n   :alt: Odoo Community Association\n\n=================\nPartner Statement\n=================\n\n.. \n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! This file is generated by oca-gen-addon-readme !!\n   !! changes will be overwritten.                   !!\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n   !! source digest: sha256:250e9180ba32ee3111986b5d39349d9ffc636dda90d410575f1fae81694f0092\n   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\n.. |badge1| image:: https://img.shields.io/badge/maturity-Beta-yellow.png\n    :target: https://odoo-community.org/page/development-status\n    :alt: Beta\n.. |badge2| image:: https://img.shields.io/badge/license-AGPL--3-blue.png\n    :target: http://www.gnu.org/licenses/agpl-3.0-standalone.html\n    :alt: License: AGPL-3\n.. |badge3| image:: https://img.shields.io/badge/github-OCA%2Faccount--financial--reporting-lightgray.png?logo=github\n    :target: https://github.com/OCA/account-financial-reporting/tree/18.0/partner_statement\n    :alt: OCA/account-financial-reporting\n.. |badge4| image:: https://img.shields.io/badge/weblate-Translate%20me-F47D42.png\n    :target: https://translation.odoo-community.org/projects/account-financial-reporting-18-0/account-financial-reporting-18-0-partner_statement\n    :alt: Translate me on Weblate\n.. |badge5| image:: https://img.shields.io/badge/runboat-Try%20me-875A7B.png\n    :target: https://runboat.odoo-community.org/builds?repo=OCA/account-financial-reporting&target_branch=18.0\n    :alt: Try me on Runboat\n\n|badge1| |badge2| |badge3| |badge4| |badge5|\n\nThis module extends the functionality of Invoicing to support the\nprinting of customer and vendor statements. There are three types of\nstatements: Activity, Detailed Activity, and Outstanding. Aging details\ncan be shown in the reports, expressed in aging buckets, so the customer\nor vendor can review how much is open, due or overdue.\n\nThe activity statement provides details of all activity on the partner\nreceivables or payables between two selected dates. This includes all\ninvoices, refunds and payments. Any outstanding balance dated prior to\nthe chosen statement period will appear as a forward balance at the top\nof the statement. The list is displayed in chronological order and is\nsplit by currencies.\n\nThe detailed activity statement is an extension of the previous\nstatement, and intends to explain the transactions that have happened\nduring the period, also providing with a Prior Balance section and an\nEnding Balance section.\n\nThe outstanding statement provides details of all outstanding partner\nreceivables or payables up to a particular date. This includes all\nunpaid invoices, unclaimed refunds and outstanding payments. The list is\ndisplayed in chronological order and is split by currencies.\n\n**Table of contents**\n\n.. contents::\n   :local:\n\nConfiguration\n=============\n\nUsers willing to access to this report should have proper Accounting &\nFinance rights:\n\n1. Go to *Settings / Users & Companies / Users* and edit your user to\n   add the corresponding access rights as follows.\n2. In *Access Rights / Accounting / Invoicing*, select *Invoicing* or\n   *Administrator*\n\nTo configure this module, you need to:\n\n1. Go to *Invoicing / Configuration / Settings*\n2. Under the *Partner Statements* of *Invoicing* option select either or\n   both of OCA Activity or Outstanding Statement\n3. Once selected, you may set default options for the reports.\n4. Click *Save*\n\nRemoving the wizard from menus follows the same process.\n\nUsage\n=====\n\nTo use this module, you need to:\n\n1. Go to a list of Partners, Contacts, Customer or Vendors and select\n   one or more.\n2. Press 'Action > Partner Activity Statement' or 'Action > Partner\n   Outstanding Statement' respectively.\n3. Indicate if you want to display receivables or payables, and if you\n   want to display aging buckets and the aging type.\n4. Optionally complete advanced options such as filtering non due or\n   negative balance partners.\n\nKnown issues / Roadmap\n======================\n\n- Email template.\n- Expose reports (using defaults) to billing users while restricting the\n  wizard to managers option.\n- Concept of statement run - to start an async job to send out all\n  statements.\n\nChangelog\n=========\n\n12.0.1.0.0 (2018-11-08)\n-----------------------\n\n- [BREAKING] Modules customer_activity_statement and\n  customer_outstanding_statement merged to create partner_statement.\n- [ADD] New features.\n\n  - Age by months or days\n  - Filter negative balances\n\n14.0.2.0.0 (2022-12-16)\n-----------------------\n\n- [ADD] Detailed Activity Statement.\n\nBug Tracker\n===========\n\nBugs are tracked on `GitHub Issues <https://github.com/OCA/account-financial-reporting/issues>`_.\nIn case of trouble, please check there if your issue has already been reported.\nIf you spotted it first, help us to smash it by providing a detailed and welcomed\n`feedback <https://github.com/OCA/account-financial-reporting/issues/new?body=module:%20partner_statement%0Aversion:%2018.0%0A%0A**Steps%20to%20reproduce**%0A-%20...%0A%0A**Current%20behavior**%0A%0A**Expected%20behavior**>`_.\n\nDo not contact contributors directly about support or help with technical issues.\n\nCredits\n=======\n\nAuthors\n-------\n\n* ForgeFlow\n\nContributors\n------------\n\n- Miquel Ra\u00efch <miquel.raich@forgeflow.com>\n- Graeme Gellatly <graeme@o4sb.com>\n- Lois Rilo <lois.rilo@forgeflow.com>\n- Dhara Solanki <dhara.solanki@initos.com>\n- Danny Adair <danny@o4sb.com>\n- Simone Rubino <simone.rubino@pytech.it>\n- Mohamed Alkobrosli <malkobrosly@kencove.com>\n\nMaintainers\n-----------\n\nThis module is maintained by the OCA.\n\n.. image:: https://odoo-community.org/logo.png\n   :alt: Odoo Community Association\n   :target: https://odoo-community.org\n\nOCA, or the Odoo Community Association, is a nonprofit organization whose\nmission is to support the collaborative development of Odoo features and\npromote its widespread use.\n\n.. |maintainer-MiquelRForgeFlow| image:: https://github.com/MiquelRForgeFlow.png?size=40px\n    :target: https://github.com/MiquelRForgeFlow\n    :alt: MiquelRForgeFlow\n\nCurrent `maintainer <https://odoo-community.org/page/maintainer-role>`__:\n\n|maintainer-MiquelRForgeFlow| \n\nThis module is part of the `OCA/account-financial-reporting <https://github.com/OCA/account-financial-reporting/tree/18.0/partner_statement>`_ project on GitHub.\n\nYou are welcome to contribute. To learn how please visit https://odoo-community.org/page/Contribute.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/OCA/account-financial-reporting", "keywords": null, "license": "AGPL-3", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "odoo-addon-partner-statement", "package_url": "https://pypi.org/project/odoo-addon-partner-statement/", "platform": null, "project_url": "https://pypi.org/project/odoo-addon-partner-statement/", "project_urls": {"Homepage": "https://github.com/OCA/account-financial-reporting"}, "provides_extra": null, "release_url": "https://pypi.org/project/odoo-addon-partner-statement/18.0.1.1.0.1/", "requires_dist": ["odoo-addon-report_xlsx==18.0.*", "odoo-addon-report_xlsx_helper==18.0.*", "odoo==18.0.*"], "requires_python": ">=3.10", "summary": "OCA Financial Reports", "version": "18.0.1.1.0.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394431, "urls": [{"comment_text": "", "digests": {"blake2b_256": "ddf4879946d634c743f52c02a0e4602e9c21c7deed87690dbd9b3c11cb001590", "md5": "749fe49335f392181dbd24252552bc9f", "sha256": "e3438b7485fd7e587cc528fed06f1bd3b1661b6947132b7de059d30641d7253f"}, "downloads": -1, "filename": "odoo_addon_partner_statement-18.0.1.1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "749fe49335f392181dbd24252552bc9f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 128471, "upload_time": "2025-07-29T02:32:31", "upload_time_iso_8601": "2025-07-29T02:32:31.047048Z", "url": "https://files.pythonhosted.org/packages/dd/f4/879946d634c743f52c02a0e4602e9c21c7deed87690dbd9b3c11cb001590/odoo_addon_partner_statement-18.0.1.1.0.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:31:45 GMT", "package": "volsite-postgres-common", "version": "1.0.67", "json": {"info": {"author": "Che-Wri, Chang", "author_email": "gobidesert.mf@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "volsite", "license": "MIT", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "volsite-postgres-common", "package_url": "https://pypi.org/project/volsite-postgres-common/", "platform": null, "project_url": "https://pypi.org/project/volsite-postgres-common/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/volsite-postgres-common/1.0.67/", "requires_dist": ["aenum", "psycopg2-binary", "volworld_common"], "requires_python": null, "summary": null, "version": "1.0.67", "yanked": false, "yanked_reason": null}, "last_serial": 30394429, "urls": [{"comment_text": "", "digests": {"blake2b_256": "45674dcd3a0b0b6160e461e43916b4acb684f5ff8566b020ec0c216575635d87", "md5": "4bb5d6e0dba1923101e39fef5eda3361", "sha256": "f57f480007aded231333f6098e3025056fab02451fbb5210cfec755897db5db6"}, "downloads": -1, "filename": "volsite_postgres_common-1.0.67.tar.gz", "has_sig": false, "md5_digest": "4bb5d6e0dba1923101e39fef5eda3361", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20798, "upload_time": "2025-07-29T02:31:45", "upload_time_iso_8601": "2025-07-29T02:31:45.834468Z", "url": "https://files.pythonhosted.org/packages/45/67/4dcd3a0b0b6160e461e43916b4acb684f5ff8566b020ec0c216575635d87/volsite_postgres_common-1.0.67.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:31:07 GMT", "package": "whatap-python", "version": "1.8.7", "json": {"info": {"author": "whatap", "author_email": "admin@whatap.io", "bugtrack_url": null, "classifiers": [], "description": "\n.. image:: https://www.whatap.io/img/common/whatap_logo_re.svg\n\n.. _WhaTap: https://www.whatap.io/\n\nWhaTap_ for python\n==================\n\n- Whatap allows for application performance monitoring.\n- Support: WSGI server application & Batch job & Specific method profiling.\n- Python version : 3.7+\n\nInstallation\n------------\n\n  .. code:: bash\n\n    $ pip install whatap-python\n\nApplication Monitoring\n----------------------\n\nSupported web frameworks such as Django, Flask, Bottle, Cherrypy, Tornado and WSGI Server Application.\n\nConfiguration\n~~~~~~~~~~~~~\n\n  .. code:: bash\n\n    $ export WHATAP_HOME=[PATH]\n    $ whatap-setting-config --host [HOST_ADDR]\n                            --license [LICENSE_KEY]\n                            --app_name [APPLICATION_NAME]\n                            --app_process_name [APP_PROCESS_NAME]\n\nUsage\n~~~~~\n\n  .. code:: bash\n\n    $ whatap-start-agent [YOUR_APPLICATION_START_COMMAND]\n\n    ...\n\nUnsupported web frameworks WSGI\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you want WSGI Application monitoring, include the @register_app decorator.\n\n  .. code:: python\n\n    import whatap\n\n    @whatap.register_app\n    def simple_app(environ, start_response):\n    \"\"\"Simplest possible application object\"\"\"\n        status = '200 OK'\n        response_headers = [('Content-type', 'text/plain')]\n        start_response(status, response_headers)\n        return ['Hello world!\\n']\n\nMethod Profiling\n~~~~~~~~~~~~~~~~\n\nIf you want method profiling, include the @method_profiling decorator.\n\n  .. code:: python\n\n    from whatap import method_profiling\n\n    @method_profiling\n    def db_connection():\n        db.connect('mysql:// ..')\n\n    @method_profiling\n    def query():\n        db.select('select * from ..')\n\n      ....\n\nBatch Monitoring\n----------------\n\nfor Batch job.\n\nConfiguration\n~~~~~~~~~~~~~\n\nSet Environment valiable configuration.\n\n  .. code:: bash\n\n    $ export WHATAP_BATCH_HOME=[PATH]\n    $ cat >> $WHATAP_BATCH_HOME/whatap.conf << EOF\n    license=[LICENSE_KEY]\n    whatap.server.host=[HOST_ADDR]\n\n    app_name=batch\n    app_process_name=batch\n    EOF\n\n\nUsage\n~~~~~\n\nStart bach agent.\n\n  .. code:: bash\n\n    $ whatap-start-batch\n\nExample code\n~~~~~~~~~~~~\n\n  .. code:: python\n\n    from whatap import method_profiling\n\n    class Command(BaseCommand):\n\n        @batch_profiling\n        def handle(self, *args, **options):\n            // batch code..\n            ....\n\nRestart\n-------\n\nYour Application restart.\n\nCopyright\n---------\n\nCopyright (c) 2017 Whatap, Inc. All rights reserved.\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Description", "Home-Page", "License", "Requires-Python", "Summary"], "home_page": "https://www.whatap.io", "keywords": null, "license": "Whatap License", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "whatap-python", "package_url": "https://pypi.org/project/whatap-python/", "platform": null, "project_url": "https://pypi.org/project/whatap-python/", "project_urls": {"Homepage": "https://www.whatap.io"}, "provides_extra": null, "release_url": "https://pypi.org/project/whatap-python/1.8.7/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Monitoring and Profiling Service", "version": "1.8.7", "yanked": false, "yanked_reason": null}, "last_serial": 30394427, "urls": [{"comment_text": null, "digests": {"blake2b_256": "f517f31d95c83ca132d1a70ed96c368a4200a0010be3a138bb4fc1805527bd7c", "md5": "a076b259479d4792f61816212cbc3420", "sha256": "dc401cebfb1c9aa7c967d3c7d633608a8ac33149c7047c35da446a25f1a30dbd"}, "downloads": -1, "filename": "whatap_python-1.8.7.tar.gz", "has_sig": false, "md5_digest": "a076b259479d4792f61816212cbc3420", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 58474827, "upload_time": "2025-07-29T02:31:07", "upload_time_iso_8601": "2025-07-29T02:31:07.380536Z", "url": "https://files.pythonhosted.org/packages/f5/17/f31d95c83ca132d1a70ed96c368a4200a0010be3a138bb4fc1805527bd7c/whatap_python-1.8.7.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:30:24 GMT", "package": "rtta", "version": "0.1.7", "json": {"info": {"author": null, "author_email": "Adam DePrince <adam.deprince@gmail.com>", "bugtrack_url": null, "classifiers": [], "description": "RTTA\n======================\n\nPurpose\n-------\n\nThe purpose of this package is to implement a very low latency\nincremental technical analysis toolkit.  Most technical analysis\ntool-kits work in a \"batch mode\" where you hand them a blob of data and\nin a pandas series and they return a series with the computed data.\nIncremental updates for these require O(n) work.  There is one tool,\n[talipp](https://pypi.org/project/talipp/) that is designed to support\nincremental updates, but it is implemented in pure python and is a\nlittle more than an order of magnitude slower than rtta.  On a 5995WX\ntalipp's exponential moving average requires 465ns; rtta's requires\n36ns.  A bare python function call requires 35ns, so we're about as\nfast as fast can be.\n\nInstallation\n------------\n\n\n```bash\npip install rtta\n```\n\nUsage\n-----\n\nEach operator has a paramater fillna.  If set to false, nan values\nwill be returned until the operation is \"populated\".  If set to true,\nbest guesses will be returned until the operation is populated.\n\nSo for example, our simple moving average `SMAIndicator` works sort of like this:\n\n```python\n>>> import rtta.trend as trend\n>>> sma = trend.SMAIndicator(window=4, fillna=True)\n>>> sma.update(1)\n1\n>>> sma.update(2)\n1.5\n>>> sma.update(3)\n2\n>>> sma.update(2)\n2\n>>> sma.update(2)\n2.25 <- The 1 fell off the end of the sliding window\n```\n\nPerformance\n-----------\n\n|Indicator | Latency |\n|----------|---------|\n| SMA      | 36ns    |\n| EMA      | 36ns    |\n| MACD     | 55ns    |", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "rtta", "package_url": "https://pypi.org/project/rtta/", "platform": null, "project_url": "https://pypi.org/project/rtta/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/rtta/0.1.7/", "requires_dist": ["numpy>=2.0.2"], "requires_python": ">=3.9.8", "summary": "Low latency incremental technical analysis", "version": "0.1.7", "yanked": false, "yanked_reason": null}, "last_serial": 30394456, "urls": [{"comment_text": null, "digests": {"blake2b_256": "2d5f08c72ca3d98d6dce327d17af6b59e515027301258f3b8769dbf947c7b171", "md5": "52767edf370a96f26307ab29f59b9969", "sha256": "d74f61befa84e2cf9861d4e2a3d83da742677ea371aad6a4498d9b040ace7a1e"}, "downloads": -1, "filename": "rtta-0.1.7.tar.gz", "has_sig": false, "md5_digest": "52767edf370a96f26307ab29f59b9969", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9.8", "size": 32094, "upload_time": "2025-07-29T02:30:24", "upload_time_iso_8601": "2025-07-29T02:30:24.781606Z", "url": "https://files.pythonhosted.org/packages/2d/5f/08c72ca3d98d6dce327d17af6b59e515027301258f3b8769dbf947c7b171/rtta-0.1.7.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:28:47 GMT", "package": "BrainX", "version": "2025.7.30", "json": {"info": {"author": "Brain Modeling Ecosystem Developers", "author_email": "Brain Modeling Ecosystem Developers <chao.brain@qq.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries"], "description": "# Ecosystem for Brain Modeling \r\n\r\n[![PyPI version](https://img.shields.io/pypi/v/brainx)](https://pypi.org/project/brainx/)\r\n![Read the Docs](https://img.shields.io/readthedocs/brainmodeling)\r\n[![Continuous Integration](https://github.com/chaobrain/brain-modeling-ecosystem/actions/workflows/CI.yml/badge.svg)](https://github.com/chaobrain/brain-modeling-ecosystem/actions/workflows/CI.yml)\r\n\r\n\r\n<p align=\"center\">\r\n  \t<img alt=\"Header image of Brain Modeling Ecosystem.\" src=\"https://raw.githubusercontent.com/chaobrain/brain-modeling-ecosystem/main/docs/_static/bdp-ecosystem.png\" width=50%>\r\n</p> \r\n\r\n\r\n## Overview\r\n\r\nEcosystem for Brain Modeling provides comprehensive framework for computational neuroscience and brain simulation. \r\nIt provides tools and libraries for researchers to model, simulate, train, and analyze neural systems at different scales.\r\n\r\n**Core components** in this ecosystem includes:\r\n\r\n- [BrainUnit](https://github.com/chaobrain/brainunit): Comprehensive physical units and unit-aware mathematical system for brain dynamics.\r\n\r\n- [BrainCell](https://github.com/chaobrain/braincell): Intuitive, parallel, and efficient simulation for biologically detailed brain cell modeling. \r\n\r\n- [BrainState](https://github.com/chaobrain/brainstate): State-based IR compilation for efficient simulation of brain models on CPUs, GPUs, and TPUs.\r\n\r\n- [BrainTaichi](https://github.com/chaobrain/braintaichi): The first-generation framework for customizing event-driven operators based on Taichi Lang syntax.\r\n\r\n- [BrainEvent](https://github.com/chaobrain/brainevent): Enabling event-driven computations in brain dynamics. \r\n\r\n- [BrainScale](https://github.com/chaobrain/brainscale): Enabling scalable online learning for brain dynamics: $O(N)$ complexity for SNNs, and $O(N^2)$ for RNN computations.\r\n\r\n- [BrainTools](https://github.com/chaobrain/braintools): Commonly used tools for brain dynamics programming, for example checkpointing. \r\n\r\n\r\n## Installation\r\n\r\nThe ecosystem can be installed with the following command:\r\n\r\n```bash\r\npip install BrainX -U\r\n```\r\n\r\nThis command installs the core package and pins specific versions of the component projects known to work together, ensuring compatibility based on integration tests.\r\n\r\n\r\nOn CPU platforms, the following command can be used to install the ecosystem with all components:\r\n\r\n```bash\r\npip install BrainX[cpu] -U\r\n```\r\n\r\n\r\nOn GPU platforms, the following command can be used to install the ecosystem with all components:\r\n\r\n```bash\r\npip install BrainX[cuda12] -U\r\n```\r\n\r\n\r\n\r\nOn TPU platforms, the following command can be used to install the ecosystem with all components:\r\n\r\n```bash\r\npip install BrainX[tpu] -U\r\n```\r\n\r\n\r\n\r\nFor development, you might want to clone the repository and install it in editable mode:\r\n```bash\r\ngit clone https://github.com/chaobrain/brain-modeling-ecosystem.git\r\ncd brain-modeling-ecosystem\r\npip install -e .\r\n```\r\n\r\n\r\n## Documentation\r\n\r\nFor detailed documentation, tutorials, and examples, visit our [Documentation Portal](https://brainmodeling.readthedocs.io).\r\n\r\n\r\n## Contributing\r\n\r\nWe welcome contributions from the community! Please see our [Contributing Guidelines](CONTRIBUTING.md) for more information on how to get involved.\r\n\r\n\r\n## License\r\n\r\nThis project is licensed under the Apache License, Version 2.0. See the [LICENSE](LICENSE) file for details.\r\n\r\n\r\n## Citation\r\n\r\nIf you use the Brain Modeling Ecosystem in your research, please cite it appropriately. Refer to the [citation guide](https://brainmodeling.readthedocs.io/citation.html) on our documentation portal.\r\n\r\n\r\n## Support\r\n\r\nIf you have questions, encounter issues, or need support, please:\r\n*   Check the [documentation](https://brainmodeling.readthedocs.io).\r\n*   Search the [existing issues](https://github.com/chaobrain/brain-modeling-ecosystem/issues).\r\n*   [Open a new issue](https://github.com/chaobrain/brain-modeling-ecosystem/issues/new/choose) if your problem is not addressed.\r\n*   Contact us via email: `chao.brain@qq.com`.\r\n\r\n\r\n\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/chaobrain/brain-modeling-ecosystem", "keywords": "computational neuroscience, brain-inspired computation, brain dynamics programming", "license": "Apache-2.0 license", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "BrainX", "package_url": "https://pypi.org/project/BrainX/", "platform": null, "project_url": "https://pypi.org/project/BrainX/", "project_urls": {"Homepage": "https://github.com/chaobrain/brain-modeling-ecosystem", "homepage": "http://github.com/chaobrain/brain-modeling-ecosystem", "repository": "http://github.com/chaobrain/brain-modeling-ecosystem"}, "provides_extra": ["cpu", "cuda12", "gpu", "testing", "tpu"], "release_url": "https://pypi.org/project/BrainX/2025.7.30/", "requires_dist": ["numpy>=1.15", "jax<0.8.0,>=0.4.35", "brainunit==0.0.16", "brainstate==0.1.5", "brainevent==0.0.2", "braincell==0.0.3", "braintools==0.0.6", "brainscale==0.0.8", "msgpack>=1.1.0", "matplotlib", "numpy>=1.15; extra == \"cpu\"", "jax[cpu]<0.8.0,>=0.4.35; extra == \"cpu\"", "brainunit[cpu]==0.0.16; extra == \"cpu\"", "brainstate[cpu]==0.1.5; extra == \"cpu\"", "brainevent[cpu]==0.0.2; extra == \"cpu\"", "braincell[cpu]==0.0.3; extra == \"cpu\"", "braintools[cpu]==0.0.6; extra == \"cpu\"", "brainscale[cpu]==0.0.8; extra == \"cpu\"", "msgpack>=1.1.0; extra == \"cpu\"", "matplotlib; extra == \"cpu\"", "numpy>=1.15; extra == \"cuda12\"", "jax[cuda12]<0.8.0,>=0.4.35; extra == \"cuda12\"", "brainunit[cuda12]==0.0.16; extra == \"cuda12\"", "brainstate[cuda12]==0.1.5; extra == \"cuda12\"", "brainevent[cuda12]==0.0.2; extra == \"cuda12\"", "braincell[cuda12]==0.0.3; extra == \"cuda12\"", "braintools[cuda12]==0.0.6; extra == \"cuda12\"", "brainscale[cuda12]==0.0.8; extra == \"cuda12\"", "msgpack>=1.1.0; extra == \"cuda12\"", "matplotlib; extra == \"cuda12\"", "numpy>=1.15; extra == \"gpu\"", "jax[cuda12]<0.8.0,>=0.4.35; extra == \"gpu\"", "brainunit[cuda12]==0.0.16; extra == \"gpu\"", "brainstate[cuda12]==0.1.5; extra == \"gpu\"", "brainevent[cuda12]==0.0.2; extra == \"gpu\"", "braincell[cuda12]==0.0.3; extra == \"gpu\"", "braintools[cuda12]==0.0.6; extra == \"gpu\"", "brainscale[cuda12]==0.0.8; extra == \"gpu\"", "msgpack>=1.1.0; extra == \"gpu\"", "matplotlib; extra == \"gpu\"", "pytest; extra == \"testing\"", "numpy>=1.15; extra == \"tpu\"", "jax[tpu]<0.8.0,>=0.4.35; extra == \"tpu\"", "brainunit[tpu]==0.0.16; extra == \"tpu\"", "brainstate[tpu]==0.1.5; extra == \"tpu\"", "brainevent[tpu]==0.0.2; extra == \"tpu\"", "braincell[tpu]==0.0.3; extra == \"tpu\"", "braintools[tpu]==0.0.6; extra == \"tpu\"", "brainscale[tpu]==0.0.8; extra == \"tpu\"", "msgpack>=1.1.0; extra == \"tpu\"", "matplotlib; extra == \"tpu\""], "requires_python": ">=3.10", "summary": "Ecosystem for Brain Modeling.", "version": "2025.7.30", "yanked": false, "yanked_reason": null}, "last_serial": 30394406, "urls": [{"comment_text": "", "digests": {"blake2b_256": "ae4bec949d6d28af3ea2ae6246e46cf865b9f0a169a4b43e9cd06496ba216fe8", "md5": "61f3788f4056c6ff30b877521bf2d133", "sha256": "eb6f9e813afb0c170bee00cb58f0c405f3853280780bb7929a28a8c544eeed38"}, "downloads": -1, "filename": "BrainX-2025.7.30-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "61f3788f4056c6ff30b877521bf2d133", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.10", "size": 8695, "upload_time": "2025-07-29T02:28:47", "upload_time_iso_8601": "2025-07-29T02:28:47.141143Z", "url": "https://files.pythonhosted.org/packages/ae/4b/ec949d6d28af3ea2ae6246e46cf865b9f0a169a4b43e9cd06496ba216fe8/BrainX-2025.7.30-py2.py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:28:34 GMT", "package": "ll2cz", "version": "0.6.2", "json": {"info": {"author": "Erik Peterson", "author_email": "Erik Peterson <erik@cloudzero.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Programming Language :: Python :: 3.9", "Topic :: Office/Business :: Financial", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "# ll2cz - LiteLLM to CloudZero ETL Tool\n\nTransform LiteLLM database data into CloudZero AnyCost CBF format for cost tracking and analysis.\n\n## Features\n\n- Extract usage data from LiteLLM PostgreSQL or SQLite database\n- Transform data into CloudZero Billing Format (CBF)\n- **Cost comparison analysis** between SpendLogs and user tables (v0.4.0+)\n- **Dual data source support** with `--source` option: transaction-level SpendLogs or daily aggregated user tables\n- **SQLite support** for testing and offline analysis (v0.6.1+)\n- Analysis mode with beautiful terminal output using Rich\n- Multiple output options: CSV files or direct CloudZero API streaming\n- Built with modern Python tools: uv, ruff, pytest, polars, httpx\n\n## Installation\n\n### From PyPI (Recommended)\n\n```bash\n# Install with uv (recommended)\nuv add ll2cz\n\n# Or install with pip\npip install ll2cz\n```\n\n### From Source\n\n```bash\ngit clone https://github.com/Cloudzero/cloudzero-litellm-toolkit.git\ncd cloudzero-litellm-toolkit\nuv sync\n```\n\n## Configuration\n\nll2cz supports configuration files to avoid repeating common settings. You can store your database connection, CloudZero API credentials, and other settings in `~/.ll2cz/config.yml`.\n\n### Create Configuration File\n\n```bash\n# Create an example configuration file\nll2cz config example\n\n# Check current configuration status\nll2cz config status\n```\n\nThis creates `~/.ll2cz/config.yml` with the following structure:\n\n```yaml\ndatabase_url: postgresql://user:password@host:5432/litellm_db\ncz_api_key: your-cloudzero-api-key\ncz_connection_id: your-connection-id\n```\n\n### Configuration Priority\n\nCLI arguments always take priority over configuration file values:\n\n1. **CLI arguments** (highest priority)\n2. **Configuration file** (`~/.ll2cz/config.yml`)\n3. **Default values** (lowest priority)\n\n### CLI Commands\n\n```bash\n# Show version\nll2cz --version\n\n# Show help\nll2cz --help\n\n# Configuration management\nll2cz config example     # Create example config file\nll2cz config status      # Show current config status\nll2cz config edit        # Interactively edit configuration\n```\n\n## Usage\n\n### Transform Mode\n\nTransform LiteLLM data to CloudZero CBF format:\n\n```bash\n# Display data on screen (formatted table) - PostgreSQL\nll2cz transform --input \"postgresql://user:pass@host:5432/litellm_db\" --screen\n\n# Display data on screen - SQLite\nll2cz transform --input \"sqlite://path/to/litellm.sqlite\" --screen\n\n# Export to CSV file\nll2cz transform --input \"postgresql://user:pass@host:5432/litellm_db\" --output data.csv\n\n# Limit records for screen display\nll2cz transform --screen --limit 25\n```\n\n### Transmit Mode\n\nSend data directly to CloudZero AnyCost API:\n\n```bash\n# Send today's data\nll2cz transmit day\n\n# Send specific day's data (DD-MM-YYYY format)\nll2cz transmit day 15-01-2024\n\n# Send current month's data\nll2cz transmit month\n\n# Send specific month's data (MM-YYYY format)\nll2cz transmit month 01-2024\n\n# Send all available data (batched by day)\nll2cz transmit all\n\n# Test mode - show payloads without sending (5 records only)\nll2cz transmit day --test\n\n# Use append mode (sum operation instead of replace_hourly)\nll2cz transmit day --append\n\n# Specify timezone for date handling\nll2cz transmit day --timezone \"US/Eastern\"\n\n# Limit number of records to process\nll2cz transmit month --limit 1000\n```\n\n### Analysis Mode\n\nAnalyze your LiteLLM database data:\n\n```bash\n# General data analysis\nll2cz analyze data --limit 10000\n\n# Show raw table data\nll2cz analyze data --show-raw --table all\n\n# Show specific table only\nll2cz analyze data --show-raw --table user\n\n# CZRN (CloudZero Resource Name) analysis\nll2cz analyze czrn --limit 10000\n\n# Spend analysis\nll2cz analyze spend --limit 10000\n\n# Database schema analysis\nll2cz analyze schema --output schema_docs.md\n\n# Refresh cache from server (use cache commands)\nll2cz cache refresh\n\n# Save analysis to JSON\nll2cz analyze data --json analysis.json\n```\n\n### Cache Management\n\nManage local data cache for offline operation:\n\n```bash\n# Check cache status (local only)\nll2cz cache status\n\n# Check cache status with remote server verification\nll2cz cache status --remote-check\n\n# Clear local cache\nll2cz cache clear\n\n# Force refresh cache from server\nll2cz cache refresh\n```\n\n## Data Transformation\n\nThe tool transforms LiteLLM usage logs into CloudZero's CBF format with the following mappings:\n\n- `spend` \u2192 `cost`\n- `total_tokens` \u2192 `usage_quantity`\n- `model`, `user_id`, `call_type` \u2192 `dimensions`\n- `metadata` fields \u2192 additional `dimensions`\n- Duration calculated from `startTime` and `endTime`\n\n## Technology Stack\n\nThis project follows modern Python best practices:\n\n- **Python 3.12** - Latest Python version\n- **uv** - Fast Python package manager\n- **Polars** - High-performance DataFrames (instead of pandas)\n- **httpx** - Modern HTTP client (instead of requests)\n- **Rich** - Beautiful terminal output and formatting\n- **Typer** - Modern CLI framework with rich help formatting\n- **PyYAML** - YAML configuration file support\n- **Pathlib** - Modern filesystem path operations\n- **pytest** - Testing framework\n- **ruff** - Fast Python linter and formatter\n\n## Development\n\n```bash\n# Setup development environment\nuv sync --dev\n\n# Run tests\nuv run pytest\n\n# Run linting\nuv run ruff check src/ tests/\n\n# Fix linting issues\nuv run ruff check --fix src/ tests/\n\n# Build package\nuv build\n```\n\n## Testing with SQLite\n\nFor testing and development, you can use SQLite instead of PostgreSQL:\n\n```bash\n# Create a test SQLite database with sample data\npython scripts/create_test_sqlite.py\n\n# Use the test database\nll2cz transmit all --test --input \"sqlite://test.sqlite\"\n```\n\nThe test database includes:\n- Sample organizations, teams, and users\n- API keys with realistic naming\n- 30 days of usage data\n- Multiple model providers (OpenAI, Anthropic, etc.)\n\n## Requirements\n\n- Python \u2265 3.12\n- PostgreSQL or SQLite database with LiteLLM data\n- CloudZero API key and connection ID (for streaming mode)\n\n## License\n\nApache 2.0 - see LICENSE file for details.", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "litellm, cloudzero, etl, cost-management, billing", "license": "Apache-2.0", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "ll2cz", "package_url": "https://pypi.org/project/ll2cz/", "platform": null, "project_url": "https://pypi.org/project/ll2cz/", "project_urls": {"Changelog": "https://github.com/Cloudzero/cloudzero-litellm-toolkit/blob/main/CHANGELOG.md", "Documentation": "https://github.com/Cloudzero/cloudzero-litellm-toolkit/blob/main/README.md", "Homepage": "https://github.com/Cloudzero/cloudzero-litellm-toolkit", "Issues": "https://github.com/Cloudzero/cloudzero-litellm-toolkit/issues", "Repository": "https://github.com/Cloudzero/cloudzero-litellm-toolkit.git"}, "provides_extra": null, "release_url": "https://pypi.org/project/ll2cz/0.6.2/", "requires_dist": ["psycopg[binary]>=3.1.0", "polars>=0.20.0", "httpx>=0.25.0", "connectorx>=0.3.0", "pyyaml>=6.0.0", "rich>=13.0.0", "litellm>=1.74.7"], "requires_python": ">=3.9", "summary": "Transform LiteLLM database data into CloudZero AnyCost CBF format", "version": "0.6.2", "yanked": false, "yanked_reason": null}, "last_serial": 30394404, "urls": [{"comment_text": null, "digests": {"blake2b_256": "341332a48d3d1a792d3c879d4748ceef9333f83cab8ad41b8b719c79b5780a28", "md5": "5ea853e3bdd9a3c5e416ced95285ff24", "sha256": "fd8f8d030c02533600d1f627a9938dc8a5a917060542d42da58cb3aac7245fab"}, "downloads": -1, "filename": "ll2cz-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5ea853e3bdd9a3c5e416ced95285ff24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.9", "size": 90032, "upload_time": "2025-07-29T02:28:34", "upload_time_iso_8601": "2025-07-29T02:28:34.719656Z", "url": "https://files.pythonhosted.org/packages/34/13/32a48d3d1a792d3c879d4748ceef9333f83cab8ad41b8b719c79b5780a28/ll2cz-0.6.2-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "de3c140199e9479c1639a45796ebdc907e80e47190cb4866b71886f4743b4e2f", "md5": "42121617f94a70bc18cee1e1701f3ea9", "sha256": "9af8c022b6690dc7f79037e8350e90d11e96c1570117b23e5d1a779c3ce2ba64"}, "downloads": -1, "filename": "ll2cz-0.6.2.tar.gz", "has_sig": false, "md5_digest": "42121617f94a70bc18cee1e1701f3ea9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 73527, "upload_time": "2025-07-29T02:28:36", "upload_time_iso_8601": "2025-07-29T02:28:36.027162Z", "url": "https://files.pythonhosted.org/packages/de/3c/140199e9479c1639a45796ebdc907e80e47190cb4866b71886f4743b4e2f/ll2cz-0.6.2.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:28:01 GMT", "package": "brainscale", "version": "0.0.8", "json": {"info": {"author": "BrainScale Developers", "author_email": "BrainScale Developers <chao.brain@qq.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries"], "description": "<h1 align=\"center\">BrainScale</h1>\r\n<h2 align=\"center\">Scalable Online Learning for Brain Dynamics</h2>\r\n\r\n<p align=\"center\">\r\n  \t<img alt=\"Header image of brainscale.\" src=\"https://raw.githubusercontent.com/chaobrain/brainscale/main/docs/_static/brainscale.jpg\" width=40%>\r\n</p> \r\n\r\n\r\n\r\n<p align=\"center\">\r\n\t<a href=\"https://pypi.org/project/brainscale/\"><img alt=\"Supported Python Version\" src=\"https://img.shields.io/pypi/pyversions/brainscale\"></a>\r\n\t<a href=\"https://github.com/chaobrain/brainscale/blob/main/LICENSE\"><img alt=\"LICENSE\" src=\"https://img.shields.io/badge/License-Apache%202.0-blue.svg\"></a>\r\n  \t<a href=\"https://brainscale.readthedocs.io/?badge=latest\"><img alt=\"Documentation\" src=\"https://readthedocs.org/projects/brainscale/badge/?version=latest\"></a>\r\n  \t<a href=\"https://badge.fury.io/py/brainscale\"><img alt=\"PyPI version\" src=\"https://badge.fury.io/py/brainscale.svg\"></a>\r\n    <a href=\"https://github.com/chaobrain/brainscale/actions/workflows/CI.yml\"><img alt=\"Continuous Integration\" src=\"https://github.com/chaobrain/brainscale/actions/workflows/CI.yml/badge.svg\"></a>\r\n</p>\r\n\r\n\r\n[``brainscale``](https://github.com/chaobrain/brainscale) provides online learning algorithms for biological neural networks. \r\nIt has been integrated into our establishing [brain modeling ecosystem](https://brainmodeling.readthedocs.io/). \r\n\r\n\r\n## Installation\r\n\r\n``brainscale`` can run on Python 3.10+ installed on Linux, MacOS, and Windows. You can install ``brainscale`` via pip:\r\n\r\n```bash\r\npip install brainscale --upgrade\r\n```\r\n\r\nAlternatively, you can install `BrainX`, which bundles `brainscale` with other compatible packages for a comprehensive brain modeling ecosystem:\r\n\r\n```bash\r\npip install BrainX -U\r\n```\r\n\r\n\r\n## Documentation\r\n\r\nThe official documentation is hosted on Read the Docs: [https://brainscale.readthedocs.io](https://brainscale.readthedocs.io)\r\n\r\n\r\n## Citation\r\n\r\nIf you use this package in your research, please cite:\r\n\r\n```bibtex\r\n@article {Wang2024.09.24.614728,\r\n\tauthor = {Wang, Chaoming and Dong, Xingsi and Ji, Zilong and Jiang, Jiedong and Liu, Xiao and Wu, Si},\r\n\ttitle = {BrainScale: Enabling Scalable Online Learning in Spiking Neural Networks},\r\n\telocation-id = {2024.09.24.614728},\r\n\tyear = {2025},\r\n\tdoi = {10.1101/2024.09.24.614728},\r\n\tpublisher = {Cold Spring Harbor Laboratory},\r\n\tURL = {https://www.biorxiv.org/content/early/2025/07/27/2024.09.24.614728},\r\n\teprint = {https://www.biorxiv.org/content/early/2025/07/27/2024.09.24.614728.full.pdf},\r\n\tjournal = {bioRxiv}\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n## See also the brain modeling ecosystem\r\n\r\nWe are building the brain modeling ecosystem: https://brainmodeling.readthedocs.io/\r\n\r\n\r\n\r\n\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/chaobrain/brainscale", "keywords": "brain simulation, brain-inspired computing", "license": "Apache-2.0 license", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "brainscale", "package_url": "https://pypi.org/project/brainscale/", "platform": null, "project_url": "https://pypi.org/project/brainscale/", "project_urls": {"Homepage": "https://github.com/chaobrain/brainscale", "homepage": "http://github.com/chaobrain/brainscale", "repository": "http://github.com/chaobrain/brainscale"}, "provides_extra": ["cpu", "cuda12", "testing", "tpu"], "release_url": "https://pypi.org/project/brainscale/0.0.8/", "requires_dist": ["brainstate>=0.1.0", "brainunit", "jax[cpu]; extra == \"cpu\"", "brainunit[cpu]; extra == \"cpu\"", "brainstate[cpu]; extra == \"cpu\"", "jax[cuda12]; extra == \"cuda12\"", "brainunit[cuda12]; extra == \"cuda12\"", "brainstate[cuda12]; extra == \"cuda12\"", "pytest; extra == \"testing\"", "jax[tpu]; extra == \"tpu\"", "brainunit[tpu]; extra == \"tpu\"", "brainstate[tpu]; extra == \"tpu\""], "requires_python": ">=3.10", "summary": "Enabling Scalable Online Learning for Brain Dynamics.", "version": "0.0.8", "yanked": false, "yanked_reason": null}, "last_serial": 30394401, "urls": [{"comment_text": "", "digests": {"blake2b_256": "cdf7ccd001780c661cf086dcac4688df693995affd6fde3639a0aa8eb91781ea", "md5": "137c2803b4eb39aaf76d19a2d25f6ec1", "sha256": "5184da355697ed74341582068f37cbd948f34a10b9704df204d8c11874fb76a6"}, "downloads": -1, "filename": "brainscale-0.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "137c2803b4eb39aaf76d19a2d25f6ec1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.10", "size": 156787, "upload_time": "2025-07-29T02:28:01", "upload_time_iso_8601": "2025-07-29T02:28:01.855603Z", "url": "https://files.pythonhosted.org/packages/cd/f7/ccd001780c661cf086dcac4688df693995affd6fde3639a0aa8eb91781ea/brainscale-0.0.8-py2.py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:27:39 GMT", "package": "colordove-auto", "version": "1.0.0", "json": {"info": {"author": "Zhongshuizhou", "author_email": "zhongshuizhou@qq.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.8"], "description": "# my_package\r\n\r\nA simple example package for demonstration purposes.\r\n\r\n## Installation\r\n\r\nYou can install it via pip:\r\n\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://www.colordove.com", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "colordove-auto", "package_url": "https://pypi.org/project/colordove-auto/", "platform": null, "project_url": "https://pypi.org/project/colordove-auto/", "project_urls": {"Homepage": "https://www.colordove.com"}, "provides_extra": null, "release_url": "https://pypi.org/project/colordove-auto/1.0.0/", "requires_dist": ["beautifulsoup4==4.13.4", "blinker==1.4", "chardet==5.2.0", "flask==2.0.3", "mitmproxy==8.0.0", "openpyxl==3.1.5", "pandas==2.0.3", "pika==1.3.2", "psutil==5.8.0", "pyotp==2.4.0", "pytz==2025.2", "selenium==4.27.1", "undetected-chromedriver==3.5.5", "werkzeug==2.0.3", "xlrd==2.0.2"], "requires_python": ">=3.8", "summary": "Cross border e-commerce automation program", "version": "1.0.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394466, "urls": [{"comment_text": null, "digests": {"blake2b_256": "8c19caffc4385558990531d89f451694de577178cdcc8c763b517fa6b0b78029", "md5": "5b19568728ed89280c6148a80efafaa4", "sha256": "9dffc78bcc6dd36ef1be98dc65ef56ad2098f50b8d831cc7d88488b8e152b8f8"}, "downloads": -1, "filename": "colordove_auto-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5b19568728ed89280c6148a80efafaa4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 2315, "upload_time": "2025-07-29T02:27:39", "upload_time_iso_8601": "2025-07-29T02:27:39.825962Z", "url": "https://files.pythonhosted.org/packages/8c/19/caffc4385558990531d89f451694de577178cdcc8c763b517fa6b0b78029/colordove_auto-1.0.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "c4ca153e94babcd2424057b63393872ee36045083cbc53e6eedc4ccfb60ab3ac", "md5": "5513dc2f5c99bffa039d8267fb8798b4", "sha256": "cff972b72c59b30759f8b2904bb8439dd33c574d14d7dfa372f2ee081ec95557"}, "downloads": -1, "filename": "colordove_auto-1.0.0.tar.gz", "has_sig": false, "md5_digest": "5513dc2f5c99bffa039d8267fb8798b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 2742, "upload_time": "2025-07-29T02:27:41", "upload_time_iso_8601": "2025-07-29T02:27:41.224645Z", "url": "https://files.pythonhosted.org/packages/c4/ca/153e94babcd2424057b63393872ee36045083cbc53e6eedc4ccfb60ab3ac/colordove_auto-1.0.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:26:53 GMT", "package": "aicostmanager", "version": "0.1.6", "json": {"info": {"author": null, "author_email": "AICostManager <support@aicostmanager.com>", "bugtrack_url": null, "classifiers": [], "description": "# AICostManager Python SDK\n\n[![PyPI version](https://img.shields.io/pypi/v/aicostmanager.svg)](https://pypi.org/project/aicostmanager/)\n[![Python Support](https://img.shields.io/pypi/pyversions/aicostmanager.svg)](https://pypi.org/project/aicostmanager/)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n**AICostManager** is a comprehensive AI cost management platform that helps developers and agencies monitor, analyze, and optimize their LLM and API spending across all major providers. **[Sign up for a free account at aicostmanager.com](https://aicostmanager.com)** to access real-time analytics, budget alerts, client billing tools, and accounting integrations.\n\nStop being surprised by your AI costs. AICostManager provides complete cost management for AI-powered software\u2014from real-time tracking to budget enforcement to automated client billing.\n\n**\ud83d\udd12 Privacy-First**: AICostManager NEVER sees your API keys, requests, or responses. We only extract usage metadata (tokens, costs, model info) from responses. Your prompts and data remain completely private.\n\n**\ud83d\udd04 Universal Compatibility**: One tracking wrapper works with ANY LLM provider's SDK. Works as a drop-in replacement for your existing LLM clients with zero code changes to your API calls.\n\n**\ud83c\udfaf Supports**: OpenAI, Anthropic Claude, Google Gemini, AWS Bedrock, and any other LLM provider.\n\n## \ud83d\ude80 Why AICostManager?\n\n### For Developers: One-Line Integration\n- **Zero Code Changes**: Wrap your existing client and continue calling it exactly as before\n- **Automatic Tracking**: Usage data is automatically extracted and sent to AICostManager in the background\n- **Universal Support**: Works with OpenAI, Anthropic, Google, AWS Bedrock, and more\n- **Stream Aware**: Streaming responses are tracked once the stream completes\n- **Non-Intrusive**: Never blocks your application\u2014all tracking happens asynchronously\n\n### For Finance Teams: Complete Cost Control\n- **Real-time Budget Control**: Set spending limits and get alerts before you hit them\n- **Client-Based Billing**: Track costs per customer, project, or department for accurate billing\n- **Accounting Integration**: Ready for QuickBooks, Xero, and other financial systems\n- **Cost Projections**: Understand spending trends and plan budgets effectively\n- **Multi-Tenant Ready**: Perfect for agencies and SaaS platforms managing multiple clients\n\n### Cost Management \u2260 Cost Tracking\n\nUnlike free cost tracking from LangChain or other frameworks, AICostManager provides **complete cost management**:\n\n| Feature | Free Cost Tracking | AICostManager |\n|---------|-------------------|---------------|\n| **Scope** | LLM tokens only | All API costs (LLM, speech, embeddings, storage) |\n| **Control** | Monitor after the fact | Real-time budget enforcement & alerts |\n| **Business Model** | Collects your data | Privacy-first, usage data only |\n| **Multi-Tenant** | Basic tracking | Client billing, department allocation |\n| **Integration** | Manual reconciliation | Automated accounting integration |\n| **Management** | Shows what happened | Prevents cost surprises |\n\n## \ud83d\udc64 Getting Started\n\n> **\ud83d\udd11 CRITICAL: API Key Required**\n>\n> Before using AICostManager, you **MUST** have an AICostManager API key. **[Sign up for a free account at aicostmanager.com](https://aicostmanager.com)** to get your API key.\n>\n> **Without an API key, tracking will not work!**\n\n### Installation\n\n```bash\npip install aicostmanager\n```\n\n### Environment Setup\n\n```bash\n# Set your AICostManager API key (get this from aicostmanager.com)\nexport AICM_API_KEY=\"your-aicostmanager-api-key-here\"\n```\n\n**\ud83d\udd12 Important**: Your existing LLM provider API keys (OpenAI, Anthropic, etc.) remain yours and are never shared with AICostManager. You continue to use them exactly as before\u2014AICostManager only extracts usage metadata from responses.\n\n## \ud83d\ude80 Quick Start\n\n### Basic Usage\n\n```python\nimport os\nimport openai\nfrom aicostmanager import CostManager\n\n# Create OpenAI client as usual\nopenai_client = openai.OpenAI(api_key=os.environ.get(\"OPENAI_API_KEY\"))\n\n# Wrap with AICostManager tracking\ntracked_client = CostManager(openai_client)  # reads AICM_API_KEY from env\n\n# Use exactly as before - zero changes to your API calls\nresponse = tracked_client.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Hello!\"}]\n)\n\nprint(response.choices[0].message.content)\n# Usage automatically logged to AICostManager dashboard\n```\n\n### Streaming Support\n\n```python\nstream = tracked_client.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Tell me a story.\"}],\n    stream=True,\n)\n\nfor chunk in stream:\n    if chunk.choices and chunk.choices[0].delta.content:\n        print(chunk.choices[0].delta.content, end=\"\")\n# Usage tracked when stream completes\n```\n\n### Multi-Provider Examples\n\n#### Anthropic Claude\n\n```python\nimport anthropic\nfrom aicostmanager import CostManager\n\nclaude_client = anthropic.Anthropic(api_key=\"your-anthropic-key\")\ntracked_claude = CostManager(claude_client)\n\nresponse = tracked_claude.messages.create(\n    model=\"claude-3-haiku-20240307\",\n    max_tokens=1000,\n    messages=[{\"role\": \"user\", \"content\": \"Hello!\"}]\n)\n```\n\n#### Google Gemini\n\n```python\nimport google.genai\nfrom aicostmanager import CostManager\n\ngemini_client = google.genai.Client(api_key=\"your-google-key\")\ntracked_gemini = CostManager(gemini_client)\n\nresponse = tracked_gemini.models.generate_content(\n    model=\"gemini-1.5-flash\",\n    contents=\"Hello!\"\n)\n```\n\n#### AWS Bedrock\n\n```python\nimport boto3\nfrom aicostmanager import CostManager\n\nbedrock_client = boto3.client('bedrock-runtime', region_name='us-east-1')\ntracked_bedrock = CostManager(bedrock_client)\n\n# Use as normal - AICostManager automatically tracks usage\n```\n\n## \ud83c\udfe2 Multi-Tenant & Client Tracking\n\nPerfect for agencies, SaaS platforms, and enterprise applications that need to track LLM costs across multiple clients or projects. AICostManager provides powerful tools for organizing and billing API usage by customer.\n\n### Client-Based Cost Tracking\n\nTrack usage with client identifiers for accurate billing and cost allocation:\n\n```python\nfrom aicostmanager import CostManager\nimport openai\n\nclient = openai.OpenAI(api_key=\"your-key\")\n\n# Option 1: Set client info via constructor (planned feature)\ntracked_client = CostManager(\n    client,\n    client_customer_key=\"customer_acme_corp\",\n    context={\n        \"project\": \"chatbot_v2\",\n        \"user_id\": \"user_123\", \n        \"environment\": \"production\"\n    }\n)\n\n# Option 2: Organize usage via dashboard after tracking\n# All usage is automatically tracked and can be organized\n# by customer, project, or department in the AICostManager dashboard\n\nresponse = tracked_client.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Hello customer support!\"}]\n)\n# \u2192 Usage logged with client context for accurate billing\n```\n\n### Use Cases\n\n- **\ud83c\udfe2 Agencies**: Track costs per client for accurate project billing\n- **\ud83c\udf10 SaaS Platforms**: Allocate AI costs across customer accounts  \n- **\ud83c\udfd7\ufe0f Enterprise**: Organize spending by department, project, or team\n- **\ud83d\udd04 Multi-Environment**: Separate dev, staging, and production costs\n\n**\ud83d\udcd6 [Complete Multi-Tenant Guide](docs/multi-tenant.md)** - Detailed examples and API usage patterns\n\n## \u2728 Key Features\n\n- **\ud83d\udd04 Universal Provider Support**: Works with OpenAI, Anthropic, Google, AWS Bedrock, and any Python LLM SDK\n- **\ud83d\udd12 Privacy-First Design**: NEVER sees API keys, requests, or responses\u2014only usage metadata (tokens, costs, model info)\n- **\ud83c\udfe2 Multi-Tenant Ready**: Organize and allocate costs per customer, project, or department via dashboard\n- **\ud83d\udcca Automatic Usage Tracking**: Captures tokens, costs, model info, and timestamps from response metadata\n- **\ud83c\udf9b\ufe0f Real-time Budget Control**: Set spending limits and get alerts before you exceed budgets\n- **\ud83d\udcb0 Client-Based Billing**: Generate detailed reports for customer invoicing and cost allocation\n- **\ud83d\udcc8 Advanced Analytics**: Understand spending patterns, trends, and optimization opportunities\n- **\ud83d\udd14 Smart Alerts**: Get notified when approaching budget limits or unusual spending patterns\n- **\ud83d\udcbe Background Delivery**: Resilient background delivery with retry logic\u2014never blocks your application\n- **\ud83c\udf0a Stream Aware**: Streaming responses are properly tracked once the stream completes\n- **\ud83c\udfaf Drop-in Replacement**: Zero code changes to your existing API calls\n- **\ud83d\udcbc Accounting Ready**: Export data for QuickBooks, Xero, and other financial systems\n- **\ud83d\udeab Non-Intrusive**: Original API responses remain completely unchanged\n\n## \ud83d\udcca Dashboard & Analytics\n\nVisit [aicostmanager.com](https://aicostmanager.com) to access:\n\n- **Real-time Cost Dashboard**: Monitor spending across all providers in one place\n- **Budget Management**: Set and enforce spending limits with automated alerts\n- **Client Billing**: Generate detailed reports for customer invoicing\n- **Usage Analytics**: Understand patterns, trends, and optimization opportunities\n- **Threshold Alerts**: Get notified before hitting budget limits\n- **Export Tools**: Download data for accounting and financial planning\n\n## \ud83d\udd04 How Delivery Works\n\n`CostManager` places extracted usage payloads on a global queue. A background worker batches and retries delivery so that instrumentation never blocks your application. The queue size, retry attempts and request timeout can be tuned when constructing the wrapper.\n\n```python\ntracked_client = CostManager(\n    client,\n    delivery_queue_size=1000,      # Queue size for batching\n    delivery_max_retries=5,        # Retry failed deliveries\n    delivery_timeout=10.0,         # Request timeout in seconds\n)\n```\n\n## \ud83d\udc68\u200d\ud83d\udcbb Advanced Usage\n\n### Async Support\n\n```python\nfrom aicostmanager import AsyncCostManager\nimport openai\n\nasync_client = openai.AsyncOpenAI(api_key=\"your-key\")\ntracked_async = AsyncCostManager(async_client)\n\nresponse = await tracked_async.chat.completions.create(\n    model=\"gpt-4o-mini\",\n    messages=[{\"role\": \"user\", \"content\": \"Hello!\"}]\n)\n```\n\n### Custom Configuration\n\n```python\ntracked_client = CostManager(\n    client,\n    aicm_api_key=\"your-api-key\",           # Override env var\n    aicm_api_base=\"https://custom.url\",    # Custom API base\n    delivery_queue_size=2000,              # Larger queue\n    delivery_max_retries=10,               # More retries\n)\n```\n\n### Querying Usage Events\n\nAccess your usage data programmatically:\n\n```python\nimport requests\n\ndef get_recent_usage(aicm_api_key: str, customer_id: str = None):\n    headers = {\"Authorization\": f\"Bearer {aicm_api_key}\"}\n    params = {\"limit\": 100}\n    if customer_id:\n        params[\"customer_id\"] = customer_id\n    \n    resp = requests.get(\n        \"https://aicostmanager.com/api/v1/usage/events/\",\n        headers=headers,\n        params=params,\n        timeout=10,\n    )\n    resp.raise_for_status()\n    return resp.json()\n```\n\n## \ud83d\udcd6 Documentation\n\n### Complete Guides\n\n- **[\ud83d\udcd6 Documentation Hub](docs/index.md)** - Complete documentation index\n- **[\ud83c\udfe2 Multi-Tenant Guide](docs/multi-tenant.md)** - Client tracking, cost allocation, and billing\n- **[\ud83d\udcca Usage Examples](docs/usage.md)** - API usage and basic examples\n- **[\ud83d\udd27 Tracking System](docs/tracking.md)** - How the tracking system works\n- **[\ud83e\uddea Testing Guide](docs/testing.md)** - Running tests and validation\n\n### Quick Reference\n\n| Topic | Description | Link |\n|-------|-------------|------|\n| **Multi-Tenant** | Track costs per client, project, or department | [Guide](docs/multi-tenant.md) |\n| **Basic Usage** | SDK installation and simple examples | [Usage](docs/usage.md) |\n| **Tracking** | How usage tracking works under the hood | [Tracking](docs/tracking.md) |\n| **Testing** | Running tests and validation | [Testing](docs/testing.md) |\n\n## \ud83d\udcbb Development & Testing\n\n### Setup\n\n```bash\n# Clone and install\ngit clone https://github.com/aicostmanager/aicostmanager-python.git\ncd aicostmanager-python\n\n# Using uv (recommended)\nuv sync\n\n# Using pip\npip install -e .\n```\n\n### Running Tests\n\n1. Create a `.env` file inside `tests/` with at least `AICM_API_KEY` and any provider keys you wish to use:\n\n   ```env\n   AICM_API_KEY=your-aicostmanager-api-key\n   OPENAI_API_KEY=your-openai-api-key\n   ANTHROPIC_API_KEY=your-anthropic-api-key\n   # optional overrides\n   # AICM_API_BASE=https://aicostmanager.com\n   # AICM_INI_PATH=/path/to/AICM.ini\n   ```\n\n2. Install test dependencies:\n\n   ```bash\n   uv sync --extra test\n   # or with pip:\n   pip install -e \".[test]\"\n   ```\n\n3. Run the test suite:\n\n   ```bash\n   pytest\n   ```\n\n**\ud83d\udd12 Testing Privacy**: Tests use YOUR provider API keys locally to verify functionality. These keys never leave your machine\u2014they're only used for local testing.\n\n## \ud83e\udd1d Contributing\n\n1. Fork the repository\n2. Create a feature branch: `git checkout -b feature-name`\n3. Make changes and add tests\n4. Run the test suite: `pytest`\n5. Submit a pull request\n\n## \ud83d\udcdd License\n\nThis project is licensed under the MIT License - see the LICENSE file for details.\n\n## \ud83d\udd17 Links\n\n- **\ud83c\udf10 Website**: [aicostmanager.com](https://aicostmanager.com)\n- **\ud83d\udce6 PyPI**: [pypi.org/project/aicostmanager](https://pypi.org/project/aicostmanager/)\n- **\ud83d\udc19 GitHub**: [github.com/aicostmanager/aicostmanager-python](https://github.com/aicostmanager/aicostmanager-python)\n- **\ud83d\udcd6 Documentation**: [Complete documentation and guides](docs/index.md)\n- **\ud83d\udc1b Issues**: [Report bugs and feature requests](https://github.com/aicostmanager/aicostmanager-python/issues)\n- **\ud83d\udce7 Support**: [support@aicostmanager.com](mailto:support@aicostmanager.com)\n\n## \ud83d\udcc8 What's Next?\n\n- **MCP Server Support**: Native Model Context Protocol integration for AI agents\n- **Enhanced Analytics**: More detailed cost breakdown and optimization recommendations  \n- **Additional Providers**: Expanding support for more AI and API services\n- **Enterprise Features**: Advanced access controls and compliance tools\n\n---\n\n**Stop AI costs from becoming surprises. Start tracking, controlling, and optimizing your AI spending today.**\n\n**[Get started free at aicostmanager.com](https://aicostmanager.com)** - No credit card required.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "aicostmanager", "package_url": "https://pypi.org/project/aicostmanager/", "platform": null, "project_url": "https://pypi.org/project/aicostmanager/", "project_urls": {"Homepage": "https://aicostmanager.com", "Source": "https://github.com/aicostmanager/aicostmanager"}, "provides_extra": ["dev"], "release_url": "https://pypi.org/project/aicostmanager/0.1.6/", "requires_dist": ["requests>=2.32", "pydantic>=2.0", "httpx>=0.27", "PyJWT>=2.0.0", "tenacity>=9.0.0", "cryptography>=45.0.5", "build; extra == \"dev\"", "twine; extra == \"dev\"", "bump-my-version>=0.8; extra == \"dev\""], "requires_python": ">=3.9", "summary": "Python SDK for the AICostManager API", "version": "0.1.6", "yanked": false, "yanked_reason": null}, "last_serial": 30394394, "urls": [{"comment_text": null, "digests": {"blake2b_256": "84694a043f41457040cf287e99ba58841a788610d26d65740c09ca0bd0591d5e", "md5": "3f9b3fef5c1af5f27c645b0bacb7d727", "sha256": "b930a46c33ca7c1ca420e9daebe29d11ed1b065345b0ffa0e767956271134d89"}, "downloads": -1, "filename": "aicostmanager-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "3f9b3fef5c1af5f27c645b0bacb7d727", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.9", "size": 6247, "upload_time": "2025-07-29T02:26:53", "upload_time_iso_8601": "2025-07-29T02:26:53.658884Z", "url": "https://files.pythonhosted.org/packages/84/69/4a043f41457040cf287e99ba58841a788610d26d65740c09ca0bd0591d5e/aicostmanager-0.1.6-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "627ffbfefa47fadabb161aa23e5db52a19a0996fc455e83ef72cf76bc38ea10e", "md5": "98eaa74decc8a7b85c6bc75655e171ba", "sha256": "7cc2dbbf98ad463a7d94f306ff0ce2fdc7f83a847f923a751b21c2ad9b07255c"}, "downloads": -1, "filename": "aicostmanager-0.1.6.tar.gz", "has_sig": false, "md5_digest": "98eaa74decc8a7b85c6bc75655e171ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 28328, "upload_time": "2025-07-29T02:26:54", "upload_time_iso_8601": "2025-07-29T02:26:54.941667Z", "url": "https://files.pythonhosted.org/packages/62/7f/fbfefa47fadabb161aa23e5db52a19a0996fc455e83ef72cf76bc38ea10e/aicostmanager-0.1.6.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:26:05 GMT", "package": "mybox", "version": "5.0.1", "json": {"info": {"author": "Alexey Kotlyarov", "author_email": "a@koterpillar.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13"], "description": "# Mybox\n\n\ud83d\udda5\ufe0f This is a box. \ud83d\udce6 And it is mine. \ud83d\udc31\n\nThere are many \ud83c\udf71 nice things in there. I wouldn't want \ud83e\uddf0 to be without them.\n\nEven if I move \ud83c\udfe0 or work \ud83c\udfe2 I want to be comfortable.\n\n---\n\nManage the configuration and tools on your workstation without bothering the OS\ntoo much (maybe your favorite one isn't supported by `$WORK` or you have\ndifferent ones for different roles).\n\n## Values\n\n0. Earlier points override latter ones, unless there is a huge gain.\n1. The system is usable with the software the user specified.\n2. Meta requirements (e.g. archivers and package managers) are installed the\n   same way user requirements are.\n3. Everything is installed and upgraded to the latest version every time.\n4. Superuser access is not required.\n\n## Usage\n\n* Run the [bootstrap](bootstrap) script:\n\n  ```shell\n  /bin/bash -c \"$(curl -fsSL https://github.com/koterpillar/mybox/releases/latest/download/bootstrap)\"\n  ```\n\n* Run `mybox` from the directory with package definitions.\n\n  For package definition examples, see\n  [koterpillar/desktop](https://github.com/koterpillar/desktop/).\n\n## Development\n\nPre-requisites (see [install-dev](install-dev) for ways to install):\n\n* [Poetry](https://python-poetry.org/)\n* [ShellCheck](https://www.shellcheck.net/)\n\nRun [`./lint`](lint) to check style & types, `./lint --format` to apply\nformatting automatically.\n\nRun [`./test-script`](test-script) to execute the project's tests.\n\n### Running locally\n\n* Run `poetry install`.\n* Run `poetry shell`.\n* In the launched shell, go to the directory with package definitions.\n* Run `mybox` with the desired arguments.\n\n### Releasing\n\nReleases are done using Semantic Release, see [build.yml](.github/workflows/build.yml).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "GPL-3.0-or-later", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "mybox", "package_url": "https://pypi.org/project/mybox/", "platform": null, "project_url": "https://pypi.org/project/mybox/", "project_urls": {"Repository": "https://github.com/koterpillar/mybox"}, "provides_extra": null, "release_url": "https://pypi.org/project/mybox/5.0.1/", "requires_dist": ["PyYAML<7.0.0,>=6.0.2", "alive-progress<4.0.0,>=3.3.0", "beautifulsoup4<5.0.0,>=4.13.4", "httpx<0.29.0,>=0.28.1", "jsonpath-ng<2.0.0,>=1.7.0", "pydantic<3.0.0,>=2.11.7", "trio<0.31.0,>=0.30.0", "typed-argparse<0.4.0,>=0.3.1"], "requires_python": "<4.0,>=3.11", "summary": "Manage the configuration and tools on your workstation without bothering the OS too much", "version": "5.0.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394391, "urls": [{"comment_text": "", "digests": {"blake2b_256": "bc4288fd9db37343720b504aaea8fb531d835ad67258dc4be835559d3c2cf8f8", "md5": "69a93fc65b2c827f0698f66062b00e27", "sha256": "fc848c551d96d1e51bccf1aa9bf8de9935928a8d14e0ebaa0d4a450d76b10284"}, "downloads": -1, "filename": "mybox-5.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "69a93fc65b2c827f0698f66062b00e27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "<4.0,>=3.11", "size": 54103, "upload_time": "2025-07-29T02:26:05", "upload_time_iso_8601": "2025-07-29T02:26:05.514474Z", "url": "https://files.pythonhosted.org/packages/bc/42/88fd9db37343720b504aaea8fb531d835ad67258dc4be835559d3c2cf8f8/mybox-5.0.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "aa75268076855b5f87e4d160d3f38d0dbfffd93fa41f27b45525d3a86ae90772", "md5": "e2b94a36e058105b1c408444143fc32f", "sha256": "0b0f8e161f288572034ed115fc0a76205d93bc1d71b8270c1911346d06b9e02e"}, "downloads": -1, "filename": "mybox-5.0.1.tar.gz", "has_sig": false, "md5_digest": "e2b94a36e058105b1c408444143fc32f", "packagetype": "sdist", "python_version": "source", "requires_python": "<4.0,>=3.11", "size": 38912, "upload_time": "2025-07-29T02:26:07", "upload_time_iso_8601": "2025-07-29T02:26:07.136286Z", "url": "https://files.pythonhosted.org/packages/aa/75/268076855b5f87e4d160d3f38d0dbfffd93fa41f27b45525d3a86ae90772/mybox-5.0.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:24:39 GMT", "package": "volsite-postgres-common", "version": "1.0.66", "json": {"info": {"author": "Che-Wri, Chang", "author_email": "gobidesert.mf@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "volsite", "license": "MIT", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "volsite-postgres-common", "package_url": "https://pypi.org/project/volsite-postgres-common/", "platform": null, "project_url": "https://pypi.org/project/volsite-postgres-common/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/volsite-postgres-common/1.0.66/", "requires_dist": ["aenum", "psycopg2-binary", "volworld_common"], "requires_python": null, "summary": null, "version": "1.0.66", "yanked": false, "yanked_reason": null}, "last_serial": 30394429, "urls": [{"comment_text": "", "digests": {"blake2b_256": "f52b377a86410adf1b6e89c894549cffeedf2625c1b7786468a84c21031b2f56", "md5": "df675a67babc9878406b4139c700201c", "sha256": "06aef38922dcb0029311b589e03f26e0ef9b810b2149ba363fd9f8ec67a2214e"}, "downloads": -1, "filename": "volsite_postgres_common-1.0.66.tar.gz", "has_sig": false, "md5_digest": "df675a67babc9878406b4139c700201c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20787, "upload_time": "2025-07-29T02:24:39", "upload_time_iso_8601": "2025-07-29T02:24:39.001530Z", "url": "https://files.pythonhosted.org/packages/f5/2b/377a86410adf1b6e89c894549cffeedf2625c1b7786468a84c21031b2f56/volsite_postgres_common-1.0.66.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:24:29 GMT", "package": "farady-python", "version": "0.1.3", "json": {"info": {"author": "Tinger", "author_email": "email@tingerx.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Farady-Python\r\n\r\n\u6cd5\u62c9\u7b2c\u7684python\u672c\u5730\u5f00\u53d1\u8f85\u52a9\u5e93\uff0c\u76ee\u524d\u4e3a\u6b62\u517c\u5bb9\u4e91\u7aef\u7684\u5bfc\u5165\u73af\u5883\uff0c\u7b80\u5316\u5e76\u52a0\u901f\u5f00\u53d1\u8fc7\u7a0b\u3002\r\n\r\n# \u4f7f\u7528\u65b9\u6cd5\r\n\r\n+ \u5b89\u88c5\uff1a`pip install Farady-Python`\r\n+ \u5177\u4f53\u4f7f\u7528\uff1a`from FDLib import *`\r\n\r\n# \u4f7f\u7528\u793a\u4f8b\r\n\r\n## \u4ee3\u7801\r\n\r\n```python\r\nimport math\r\nfrom FDLib import *\r\n\r\n\r\ndef gen_x(b: float, e: float, s: float = 1.0):\r\n    assert s != 0, \"s couldn't be zero\"\r\n\r\n    def pos():\r\n        return b <= e\r\n\r\n    def neg():\r\n        return b >= e\r\n\r\n    cond = pos if s > 0 else neg\r\n    while cond():\r\n        yield b\r\n        b += s\r\n\r\n\r\nclass MyLib(FDLibrary):\r\n    metalLayers = [\"Metal Layer\"]\r\n    Parameters = {\r\n        # \u53c2\u6570\u5217\u8868\r\n        \"X\": 0.0, \"Y\": 0.0, \"L1\": 50.6, \"L2\": 67.8\r\n    }\r\n    ParameterOrder = [\r\n        # \u53c2\u6570\u663e\u793a\u987a\u5e8f\r\n        \"X\", \"Y\", \"L1\", \"L2\"\r\n    ]\r\n\r\n    def check_param(self):\r\n        # \u68c0\u67e5\u53c2\u6570\u662f\u5426\u5408\u6cd5\uff0c\u4e0d\u80fd\u7528f-string\uff0c\u9700\u8981\u7528format\r\n        assert 0 < self.L1 < self.L2, \"require: 0 < L1 < L2, got: L1={0}, L2={1}\".format(self.L1, self.L2)\r\n        # \u5176\u5b83\u68c0\u67e5\r\n\r\n    def reload(self):\r\n        self.check_param()  # \u8c03\u7528\u524d\u5fc5\u987b\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\r\n        # \u751f\u6210polygon\u5173\u952e\u70b9\r\n        xs = list(gen_x(-self.L1 + 5, self.L1 - 5, 0.1))\r\n        sin_n = [math.sin(x) * 5 for x in xs]\r\n        y_t = [y + 2 for y in sin_n]\r\n        y_b = [y - 2 for y in sin_n]\r\n        ps_t = [(x, y) for (x, y) in zip(xs, y_t)]\r\n        ps_b = [(x, y) for (x, y) in zip(xs, y_b)]\r\n        ps = ps_t + ps_b[::-1]  # \u5e26\u6709\u5bbd\u5ea6\u7684sin\u66f2\u7ebf\r\n        \r\n        self.specifications = [\r\n            Arc(\r\n                location=(self.X, self.Y),\r\n                innerRadius=self.L1,\r\n                outerRadius=self.L2,\r\n                beginAngle=0,\r\n                endAngle=math.pi / 3 * 2,\r\n                clockwise=0,  # \u9006\u65f6\u9488\u4ece0\u8f6c\u5230120\u00b0\r\n                metalLayer=\"arc-small\"  # \u8be5\u90e8\u5206\u4e3a\u5c0f\u5706\u90e8\u5206\r\n            ),\r\n            Arc(\r\n                location=(self.X, self.Y),\r\n                innerRadius=self.L1,\r\n                outerRadius=self.L2,\r\n                beginAngle=0,\r\n                endAngle=math.pi / 3 * 2,\r\n                clockwise=1,  # \u987a\u65f6\u9488\u4ece0\u8f6c\u5230120\u00b0\r\n                metalLayer=\"arc-big\"  # \u8be5\u90e8\u5206\u4e3a\u5927\u5706\u90e8\u5206\r\n            ),\r\n            Rectangle(\r\n                location=(self.X - 20, self.Y + 10),\r\n                width=40,\r\n                height=10,\r\n                metalLayer=\"rect-up\"  # \u4e0a\u9762\u7684\u77e9\u5f62\r\n            ),\r\n            Rectangle(\r\n                location=(self.X - 5, self.Y - 40),\r\n                width=10,\r\n                height=30,\r\n                metalLayer=\"rect-bo\"  # \u4e0b\u9762\u7684\u77e9\u5f62\r\n            ),\r\n            Path(\r\n                location=[\r\n                    (self.X - self.L2, self.Y - self.L2),\r\n                    (self.X - self.L2, self.Y + self.L2)\r\n                ],\r\n                width=10,\r\n                path_type=\"round\",\r\n                metalLayer=\"path-1\"  # \u5de6\u4fa7\u7684\u7ebf\u6761\r\n            ),\r\n            Path(\r\n                location=[\r\n                    (self.X + self.L2, self.Y - self.L2),\r\n                    (self.X + self.L2, self.Y + self.L2)\r\n                ],\r\n                width=10,\r\n                path_type=\"round\",\r\n                metalLayer=\"path-2\"  # \u53f3\u4fa7\u7684\u7ebf\u6761\r\n            ),\r\n            Polygon(\r\n                location=ps,  # \u4e2d\u95f4\u7684sin\u66f2\u7ebf\r\n                pins_location=[  # \u4e0a\u4e0b\u7684pin\u70b9\r\n                    [(self.X, self.Y - self.L2), (self.X, self.Y + self.L2)]\r\n                ]\r\n            )\r\n        ]\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    MyLib().run()\r\n\r\n```\r\n\r\n## \u8fd0\u884c\u7ed3\u679c\r\n\r\n![example](static/example.png)\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "License-File", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/Tinger-X/Farady-Python", "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "farady-python", "package_url": "https://pypi.org/project/farady-python/", "platform": null, "project_url": "https://pypi.org/project/farady-python/", "project_urls": {"Homepage": "https://github.com/Tinger-X/Farady-Python"}, "provides_extra": null, "release_url": "https://pypi.org/project/farady-python/0.1.3/", "requires_dist": ["matplotlib"], "requires_python": ">=3.6", "summary": "Farady Python Library", "version": "0.1.3", "yanked": false, "yanked_reason": null}, "last_serial": 30394386, "urls": [{"comment_text": null, "digests": {"blake2b_256": "759365e4e72213ca398dd1d99141d37e24c92c238a22aff90ca2c22d10cb4fdd", "md5": "57911bd04d1b7babffaccdc5137cfadc", "sha256": "535ffe56f72ae697209bc9fc7ce34f08c254652de130132d659edd354095057c"}, "downloads": -1, "filename": "farady_python-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "57911bd04d1b7babffaccdc5137cfadc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10734, "upload_time": "2025-07-29T02:24:29", "upload_time_iso_8601": "2025-07-29T02:24:29.505675Z", "url": "https://files.pythonhosted.org/packages/75/93/65e4e72213ca398dd1d99141d37e24c92c238a22aff90ca2c22d10cb4fdd/farady_python-0.1.3-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "81b5c549cdd094851645834ab4429e787cd8b005634ad0feefbfd3de32d654df", "md5": "c6e844ebba094dcfcac5f046bf5e5d30", "sha256": "92079cfd2691873e87747c44aabbd8a245822ceaa73be59e2285cf7edadd41de"}, "downloads": -1, "filename": "farady_python-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c6e844ebba094dcfcac5f046bf5e5d30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10245, "upload_time": "2025-07-29T02:24:30", "upload_time_iso_8601": "2025-07-29T02:24:30.841095Z", "url": "https://files.pythonhosted.org/packages/81/b5/c549cdd094851645834ab4429e787cd8b005634ad0feefbfd3de32d654df/farady_python-0.1.3.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:24:27 GMT", "package": "polarstate", "version": "0.1.8", "json": {"info": {"author": "Uriah Finkel", "author_email": "Uriah Finkel <Ufinkel@gmail.com>", "bugtrack_url": null, "classifiers": [], "description": "", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "polarstate", "package_url": "https://pypi.org/project/polarstate/", "platform": null, "project_url": "https://pypi.org/project/polarstate/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/polarstate/0.1.8/", "requires_dist": ["polars>=1.30.0"], "requires_python": ">=3.9", "summary": "Add your description here", "version": "0.1.8", "yanked": false, "yanked_reason": null}, "last_serial": 30394381, "urls": [{"comment_text": null, "digests": {"blake2b_256": "d468c80de613a28e48be2ce15e00118bf8a018b74229349fd1c26347b352dcee", "md5": "502ba46c7b5641a5c707a0b9b21a1b92", "sha256": "710d791e67ea09c46f79030ecd1253e67a9d2f100aceb848c25967d88314db6a"}, "downloads": -1, "filename": "polarstate-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "502ba46c7b5641a5c707a0b9b21a1b92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.9", "size": 4403, "upload_time": "2025-07-29T02:24:27", "upload_time_iso_8601": "2025-07-29T02:24:27.122350Z", "url": "https://files.pythonhosted.org/packages/d4/68/c80de613a28e48be2ce15e00118bf8a018b74229349fd1c26347b352dcee/polarstate-0.1.8-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "9b09107eb49e8fc33392d1f226c353adbaa2c345e9e77b82039bf0b9edbfadfc", "md5": "3284d512588c40f31e4b213659148d6a", "sha256": "803e158f5961f234700aa0121e47ca754ff76796d01dc0230e5133f020cbe7bd"}, "downloads": -1, "filename": "polarstate-0.1.8.tar.gz", "has_sig": false, "md5_digest": "3284d512588c40f31e4b213659148d6a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 3155, "upload_time": "2025-07-29T02:24:27", "upload_time_iso_8601": "2025-07-29T02:24:27.829875Z", "url": "https://files.pythonhosted.org/packages/9b/09/107eb49e8fc33392d1f226c353adbaa2c345e9e77b82039bf0b9edbfadfc/polarstate-0.1.8.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:24:24 GMT", "package": "prefligit", "version": "0.0.12", "json": {"info": {"author": null, "author_email": "j178 <hi@j178.dev>", "bugtrack_url": null, "classifiers": [], "description": "# prefligit\n\n![Development Status](https://img.shields.io/badge/Development-Early_Stage-yellowgreen)\n[![CI](https://github.com/j178/prefligit/actions/workflows/ci.yml/badge.svg)](https://github.com/j178/prefligit/actions/workflows/ci.yml)\n\n<img width=\"250\" alt=\"prefligit\" src=\"https://github.com/user-attachments/assets/49080cb0-f528-4aa5-acb7-5a88eb9eff4a\">\n\nA reimplementation of the [pre-commit](https://pre-commit.com/) tool in Rust, designed to be a faster, dependency-free and drop-in alternative,\nwhile also providing some additional opinionated features.\n\n> [!WARNING]\n> This project is still in very early development, only a few of the original pre-commit features are implemented.\n> It is not recommended for normal use yet, but feel free to try it out and provide feedback.\n\n> [!NOTE]\n> This project was previously named `pre-commit-rs`, but it was renamed to `prefligit` to prevent confusion with the existing pre-commit tool.\n> See [#73](https://github.com/j178/prefligit/issues/73) for more information.\n\n## Features\n\n- A single binary with no dependencies, does not require Python or any other runtime.\n- Fully compatible with the original pre-commit configurations and hooks.\n- Improved performance in hook preparation and execution.\n- Integration with [`uv`](https://github.com/astral-sh/uv) for managing Python virtual environments and dependencies.\n- Improved toolchain installations for Python, Node.js, Go, Rust and Ruby, shared between hooks.\n- Built-in implementation of some common hooks.\n- (TODO) Built-in support for monorepos.\n\n## Installation\n\n<details>\n<summary>Standalone installer</summary>\n\n`prefligit` provides a standalone installer script to download and install the tool:\n\n```console\n# On Linux and macOS\ncurl --proto '=https' --tlsv1.2 -LsSf https://github.com/j178/prefligit/releases/download/v0.0.12/prefligit-installer.sh | sh\n\n# On Windows\npowershell -ExecutionPolicy ByPass -c \"irm https://github.com/j178/prefligit/releases/download/v0.0.12/prefligit-installer.ps1 | iex\"\n```\n</details>\n\n<details>\n<summary>PyPI</summary>\n\n`prefligit` is published as Python binary wheel to PyPI, you can install it using `pip`, `uv` (recommended), or `pipx`:\n\n```console\npip install prefligit\n\n# or\n\nuv tool install prefligit\n\n# or\n\npipx install prefligit\n```\n</details>\n\n<details>\n<summary>Homebrew</summary>\n\n```console\nbrew install j178/tap/prefligit\n```\n</details>\n\n<details>\n<summary>Cargo</summary>\n\nBuild from source using Cargo:\n\n```console\ncargo install --locked --git https://github.com/j178/prefligit\n```\n</details>\n\n<details>\n<summary>GitHub Releases</summary>\n\n`prefligit` release artifacts can be downloaded directly from the [GitHub releases](https://github.com/j178/prefligit/releases).\n</details>\n\n\n## Usage\n\nThis tool is designed to be a drop-in alternative for the original pre-commit tool, so you can use it with your existing configurations and hooks.\n\nPlease refer to the [official documentation](https://pre-commit.com/) for more information on how to configure and use pre-commit.\n\n## Acknowledgements\n\nThis project is heavily inspired by the original [pre-commit](https://pre-commit.com/) tool, and it wouldn't be possible without the hard work\nof the maintainers and contributors of that project.\n\nAnd a special thanks to the [Astral](https://github.com/astral-sh) team for their remarkable projects, particularly [uv](https://github.com/astral-sh/uv),\nfrom which I've learned a lot on how to write efficient and idiomatic Rust code.\n\n", "description_content_type": "text/markdown; charset=UTF-8; variant=GFM", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/j178/prefligit", "keywords": "pre-commit, git, hooks", "license": null, "license_expression": null, "license_files": ["LICENSE", "LICENSE"], "maintainer": null, "maintainer_email": null, "name": "prefligit", "package_url": "https://pypi.org/project/prefligit/", "platform": null, "project_url": "https://pypi.org/project/prefligit/", "project_urls": {"Changelog": "https://github.com/j178/prefligit/blob/main/CHANGELOG.md", "Homepage": "https://github.com/j178/prefligit", "Releases": "https://github.com/j178/prefligit/releases", "Repository": "https://github.com/j178/prefligit"}, "provides_extra": null, "release_url": "https://pypi.org/project/prefligit/0.0.12/", "requires_dist": null, "requires_python": ">=3.8", "summary": "pre-commit reimplemented in Rust", "version": "0.0.12", "yanked": false, "yanked_reason": null}, "last_serial": 30394385, "urls": [{"comment_text": null, "digests": {"blake2b_256": "533492ff4e17127642e7071f85f4a545fba447b81cb34ee540d5ba1a6d82928f", "md5": "2523614ac196380126096216eb973be2", "sha256": "064d0c9359210051ad019b66aa40bc671f8c179aa68a0049bdc83669c0b63b17"}, "downloads": -1, "filename": "prefligit-0.0.12-py3-none-macosx_10_12_x86_64.whl", "has_sig": false, "md5_digest": "2523614ac196380126096216eb973be2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 4493059, "upload_time": "2025-07-29T02:24:24", "upload_time_iso_8601": "2025-07-29T02:24:24.201222Z", "url": "https://files.pythonhosted.org/packages/53/34/92ff4e17127642e7071f85f4a545fba447b81cb34ee540d5ba1a6d82928f/prefligit-0.0.12-py3-none-macosx_10_12_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "e8707f15ee2c8cb4da00a7553a1489314d99a7bd6ea60c60fa6c61077f7c7144", "md5": "b280179f88197f25617dbc48b1602944", "sha256": "883dba615cf14468478afa515a4b0c4afb24c06f553eee193703b7fe23e8550b"}, "downloads": -1, "filename": "prefligit-0.0.12-py3-none-macosx_11_0_arm64.whl", "has_sig": false, "md5_digest": "b280179f88197f25617dbc48b1602944", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 4316923, "upload_time": "2025-07-29T02:24:25", "upload_time_iso_8601": "2025-07-29T02:24:25.624565Z", "url": "https://files.pythonhosted.org/packages/e8/70/7f15ee2c8cb4da00a7553a1489314d99a7bd6ea60c60fa6c61077f7c7144/prefligit-0.0.12-py3-none-macosx_11_0_arm64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "80990e7b8100adc263bc85023121b36e6e8709180c5b527ef5fb8cbcf6fd7e4b", "md5": "d45435fbcf7a09656093c727997c1504", "sha256": "b09320efca2717986e82769a103d31c6dbcdb66fefeab0a825df603c0e1ac022"}, "downloads": -1, "filename": "prefligit-0.0.12-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "d45435fbcf7a09656093c727997c1504", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 4819505, "upload_time": "2025-07-29T02:24:27", "upload_time_iso_8601": "2025-07-29T02:24:27.065510Z", "url": "https://files.pythonhosted.org/packages/80/99/0e7b8100adc263bc85023121b36e6e8709180c5b527ef5fb8cbcf6fd7e4b/prefligit-0.0.12-py3-none-manylinux_2_17_x86_64.manylinux2014_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "d3e8828501b79920c87e6f881855b0fad6feb19cea34ad72460dbf139b95e970", "md5": "b9b94bc891b42dabf2c82f91773a5015", "sha256": "1ab9ab69d31aaca5c56521965adfc2851bd2b7e310711dd13c7de3483581aef2"}, "downloads": -1, "filename": "prefligit-0.0.12-py3-none-win_amd64.whl", "has_sig": false, "md5_digest": "b9b94bc891b42dabf2c82f91773a5015", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 3892785, "upload_time": "2025-07-29T02:24:28", "upload_time_iso_8601": "2025-07-29T02:24:28.374291Z", "url": "https://files.pythonhosted.org/packages/d3/e8/828501b79920c87e6f881855b0fad6feb19cea34ad72460dbf139b95e970/prefligit-0.0.12-py3-none-win_amd64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "14cace3749412582d98235f21b050d1bf9962af30bbfbed7fcee74887d65716e", "md5": "f860d182bd6e2dee5c84972da450b19f", "sha256": "38b25deccac37718c23143aaecfc0590e2c67c9816a8e525d038da6958a1eac8"}, "downloads": -1, "filename": "prefligit-0.0.12.tar.gz", "has_sig": false, "md5_digest": "f860d182bd6e2dee5c84972da450b19f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 121371, "upload_time": "2025-07-29T02:24:29", "upload_time_iso_8601": "2025-07-29T02:24:29.476468Z", "url": "https://files.pythonhosted.org/packages/14/ca/ce3749412582d98235f21b050d1bf9962af30bbfbed7fcee74887d65716e/prefligit-0.0.12.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:24:14 GMT", "package": "hyperliquid-mcp", "version": "0.1.5", "json": {"info": {"author": null, "author_email": "Minh DOAN <midogax272@gmail.com>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.13", "Topic :: Office/Business :: Financial :: Investment", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Hyperliquid MCP Server\n\nA Model Context Protocol (MCP) server that provides comprehensive tools for interacting with the Hyperliquid decentralized exchange. This server enables AI assistants to perform trading operations, manage accounts, and retrieve market data through a standardized interface.\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![Python 3.13+](https://img.shields.io/badge/python-3.13+-blue.svg)](https://www.python.org/downloads/)\n[![FastMCP](https://img.shields.io/badge/FastMCP-2.10.6+-green.svg)](https://github.com/jlowin/fastmcp)\n\n## \ud83d\ude80 Features\n\n- **29 Trading Tools** - Complete coverage of Hyperliquid's API\n- **Account Management** - Positions, balances, transfers, and leverage control\n- **Order Management** - Place, cancel, modify orders with advanced features\n- **Market Data** - Real-time prices, orderbooks, candles, and funding rates\n- **Risk Management** - Order simulation and validation\n- **Type Safety** - Full Pydantic validation for all inputs\n- **Error Handling** - Comprehensive error reporting and logging\n\n## \ud83d\udce6 Installation\n\n### Using uvx (Recommended)\n\n```bash\nuvx hyperliquid-mcp\n```\n\n### Using uv\n\n```bash\nuv add hyperliquid-mcp\nuv run hyperliquid-mcp\n```\n\n### Using pip\n\n```bash\npip install hyperliquid-mcp\nhyperliquid-mcp\n```\n\n## \u2699\ufe0f Configuration\n\n### Environment Variables\n\nConfigure the following environment variables:\n\n```bash\n# Required for trading operations\nexport HYPERLIQUID_PRIVATE_KEY=\"your_private_key_here\"\n\n# Optional: Specify a different user address for queries (defaults to wallet address)\nexport HYPERLIQUID_USER_ADDRESS=\"0x1234567890123456789012345678901234567890\"\n\n# Optional: Use testnet instead of mainnet (default: false)\nexport HYPERLIQUID_TESTNET=\"true\"\n```\n\n> \u26a0\ufe0f **Security Warning**: Never share your private key. The server will warn if the key is missing but will still start in read-only mode for market data.\n\n#### Environment Variable Details\n\n- **`HYPERLIQUID_PRIVATE_KEY`** (Required for trading): Your wallet's private key for signing transactions\n- **`HYPERLIQUID_USER_ADDRESS`** (Optional): Ethereum address to query data for. If not set, uses the address derived from your private key\n- **`HYPERLIQUID_TESTNET`** (Optional): Set to `\"true\"` to use Hyperliquid's testnet for development and testing\n\n### \ud83d\udc64 User Address Configuration\n\nThe server supports querying data for different users:\n\n- **Default behavior**: Uses the address derived from your `HYPERLIQUID_PRIVATE_KEY`\n- **Custom user**: Set `HYPERLIQUID_USER_ADDRESS` to query a different address\n- **Tool-level override**: Many tools accept a `user` parameter to query specific addresses\n\n**Use cases:**\n- Monitor multiple accounts from one server instance\n- Query public data for other traders (positions, fills, etc.)\n- Portfolio management for multiple wallets\n- Analytics and research on other users' trading activity\n\n### \ud83e\uddea Testnet Configuration\n\nFor development and testing, you can use Hyperliquid's testnet:\n\n1. **Enable testnet mode** by setting `HYPERLIQUID_TESTNET=true`\n2. **Get testnet tokens** from the [Hyperliquid testnet faucet](https://app.hyperliquid-testnet.xyz/faucet)\n3. **Use testnet-specific addresses** - testnet has separate contracts and addresses\n4. **Test safely** - All trades execute on testnet without real financial risk\n\n> \ud83d\udca1 **Tip**: Always test your trading strategies on testnet before using real funds on mainnet.\n\n### Claude Desktop Configuration\n\nAdd to your Claude Desktop `claude_desktop_config.json`:\n\n```json\n{\n  \"mcpServers\": {\n    \"hyperliquid\": {\n      \"command\": \"uvx\",\n      \"args\": [\"hyperliquid-mcp\"],\n      \"env\": {\n        \"HYPERLIQUID_PRIVATE_KEY\": \"your_private_key_here\",\n        \"HYPERLIQUID_USER_ADDRESS\": \"0x1234567890123456789012345678901234567890\",\n        \"HYPERLIQUID_TESTNET\": \"false\"\n      },\n      \"transport\": \"stdio\"\n    }\n  }\n}\n```\n\n### Alternative Configurations\n\n#### Using uv directly:\n```json\n{\n  \"mcpServers\": {\n    \"hyperliquid\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"--with\", \"hyperliquid-mcp\", \"hyperliquid-mcp\"],\n      \"env\": {\n        \"HYPERLIQUID_PRIVATE_KEY\": \"your_private_key_here\",\n        \"HYPERLIQUID_USER_ADDRESS\": \"0x1234567890123456789012345678901234567890\",\n        \"HYPERLIQUID_TESTNET\": \"false\"\n      },\n      \"transport\": \"stdio\"\n    }\n  }\n}\n```\n\n#### Local development:\n```json\n{\n  \"mcpServers\": {\n    \"hyperliquid\": {\n      \"command\": \"uv\",\n      \"args\": [\"run\", \"hyperliquid-mcp\"],\n      \"cwd\": \"/path/to/hyperliquid-mcp\",\n      \"env\": {\n        \"HYPERLIQUID_PRIVATE_KEY\": \"your_private_key_here\",\n        \"HYPERLIQUID_USER_ADDRESS\": \"0x1234567890123456789012345678901234567890\",\n        \"HYPERLIQUID_TESTNET\": \"true\"\n      },\n      \"transport\": \"stdio\"\n    }\n  }\n}\n```\n\n## \ud83d\udee0\ufe0f Available Tools\n\n### \ud83d\udc64 Account Management (11 tools)\n\n#### `get_positions`\nGet current trading positions and margin information.\n- **Input**: `user` (optional) - Ethereum address to query (defaults to `HYPERLIQUID_USER_ADDRESS` or wallet address)\n- **Output**: Positions and margin summary data\n\n#### `get_account_info`\nRetrieve comprehensive account information including margin details.\n- **Input**: `user` (optional) - Ethereum address to query\n- **Output**: Account information and margin summary\n\n#### `update_leverage`\nModify leverage settings for a specific asset.\n- **Input**: `asset`, `leverage` (1-100), `is_isolated` (boolean)\n- **Output**: Leverage update confirmation\n\n#### `transfer_between_spot_and_perp`\nTransfer funds between spot and perpetual trading accounts.\n- **Input**: `amount`, `to_perp` (boolean)\n- **Output**: Transfer confirmation\n\n#### `usd_transfer`\nTransfer USDC to another wallet address.\n- **Input**: `destination` (Ethereum address), `amount`\n- **Output**: Transfer result\n\n#### `withdraw`\nWithdraw USDC to an external wallet.\n- **Input**: `destination` (Ethereum address), `amount` (minimum $1.01)\n- **Output**: Withdrawal confirmation\n\n#### `get_spot_user_state`\nGet spot trading account balances and state.\n- **Input**: `user` (optional) - Ethereum address to query\n- **Output**: Spot account balances and state\n\n#### `sub_account_transfer`\nTransfer funds between main account and sub-accounts.\n- **Input**: `sub_account` (address), `amount`, `is_deposit` (boolean)\n- **Output**: Transfer confirmation\n\n#### `get_user_portfolio`\nRetrieve detailed portfolio information.\n- **Input**: `user` (optional) - Ethereum address to query\n- **Output**: Portfolio data and analytics\n\n#### `get_user_fees`\nGet user's current fee structure and rates.\n- **Input**: `user` (optional) - Ethereum address to query\n- **Output**: Fee information and tier details\n\n### \ud83d\udcca Market Data (8 tools)\n\n#### `get_market_data`\nGet current market data for a specific asset.\n- **Input**: `asset` - Asset symbol (e.g., \"BTC\", \"ETH\")\n- **Output**: Current price, volume, and market statistics\n\n#### `get_all_mids_detailed`\nRetrieve detailed market data for all available assets.\n- **Input**: None\n- **Output**: Comprehensive market data for all assets\n\n#### `get_candle_data`\nGet historical OHLCV candlestick data.\n- **Input**: `asset`, `interval` (1m, 5m, 1h, 1d, etc.), `start_time`, `end_time`\n- **Output**: Historical price candles\n\n#### `get_l2_orderbook`\nGet Level 2 order book depth data.\n- **Input**: `asset`, `significant_figures` (optional, 1-10)\n- **Output**: Bid/ask levels with quantities\n\n#### `get_funding_rates`\nRetrieve current and historical funding rates for perpetual contracts.\n- **Input**: `asset` (optional), `include_history` (boolean), `start_time` (optional)\n- **Output**: Funding rate data\n\n#### `calculate_min_order_size`\nCalculate minimum order size for an asset to meet value requirements.\n- **Input**: `asset`, `min_value_usd` (default: $10)\n- **Output**: Minimum order size calculation\n\n#### `simulate_order`\nSimulate order execution without placing actual order.\n- **Input**: `asset`, `is_buy` (boolean), `size`, `price` (optional)\n- **Output**: Simulation results and impact analysis\n\n#### `get_user_fills_by_time`\nGet user's trade fills within a specific time range.\n- **Input**: `start_time`, `end_time` (optional), `user` (optional)\n- **Output**: Trade execution history\n\n### \ud83d\udcc8 Order Management (10 tools)\n\n#### `place_order`\nPlace a new trading order on the exchange.\n- **Input**: Order details including:\n  - `asset` - Asset symbol\n  - `is_buy` - Order direction (boolean)\n  - `size` - Order quantity\n  - `order_type` - \"market\", \"limit\", or \"trigger\"\n  - `price` - Order price (required for limit/trigger)\n  - `time_in_force` - \"GTC\", \"IOC\", or \"ALO\"\n  - `reduce_only` - Reduce-only flag (boolean)\n  - `take_profit` - Take profit price (optional)\n  - `stop_loss` - Stop loss price (optional)\n- **Output**: Order placement confirmation with order ID\n\n#### `cancel_order`\nCancel an existing order.\n- **Input**: `asset`, `order_id`\n- **Output**: Cancellation confirmation\n\n#### `modify_order`\nModify price, size, or time-in-force of an existing order.\n- **Input**: `asset`, `order_id`, `new_price` (optional), `new_size` (optional), `new_time_in_force` (optional)\n- **Output**: Modification confirmation\n\n#### `get_open_orders`\nRetrieve all currently open orders.\n- **Input**: `user` (optional) - Ethereum address to query\n- **Output**: List of open orders with details\n\n#### `get_order_status`\nCheck the status of a specific order.\n- **Input**: `order_id`, `user` (optional)\n- **Output**: Order status and execution details\n\n#### `bulk_cancel_orders`\nCancel multiple orders in a single request.\n- **Input**: `orders` - List of orders with asset and order_id\n- **Output**: Bulk cancellation results\n\n#### `cancel_all_orders`\nCancel all open orders, optionally filtered by asset.\n- **Input**: `asset` (optional) - Filter by specific asset\n- **Output**: Mass cancellation confirmation\n\n#### `get_user_fills`\nGet recent trade executions (fills).\n- **Input**: `user` (optional) - Ethereum address to query\n- **Output**: Recent trade execution data\n\n#### `get_historical_orders`\nRetrieve historical order data.\n- **Input**: `user` (optional) - Ethereum address to query\n- **Output**: Historical order information\n\n## \ud83d\udcdd Usage Examples\n\n### Basic Market Data Query\n```python\n# Get current BTC market data\nresult = await get_market_data(GetMarketDataRequest(asset=\"BTC\"))\nprint(f\"BTC Price: ${result['price']}\")\n```\n\n### Place a Limit Order\n```python\n# Place a limit buy order for 1 ETH at $2000\norder_request = PlaceOrderRequest(\n    asset=\"ETH\",\n    is_buy=True,\n    size=1.0,\n    order_type=OrderType.LIMIT,\n    price=2000.0,\n    time_in_force=TimeInForce.GTC\n)\nresult = await place_order(order_request)\nprint(f\"Order placed with ID: {result['orderId']}\")\n```\n\n### Check Account Positions\n```python\n# Get current positions\npositions = await get_positions(UserAddressRequest())\nfor position in positions['positions']:\n    print(f\"{position['asset']}: {position['size']} @ ${position['avgPrice']}\")\n```\n\n### Get Historical Candles\n```python\n# Get 1-hour candles for ETH from last 24 hours\nimport time\nend_time = int(time.time() * 1000)\nstart_time = end_time - (24 * 60 * 60 * 1000)  # 24 hours ago\n\ncandles = await get_candle_data(GetCandleDataRequest(\n    asset=\"ETH\",\n    interval=CandleInterval.ONE_HOUR,\n    start_time=start_time,\n    end_time=end_time\n))\n```\n\n## \ud83d\udd12 Security Best Practices\n\n1. **Private Key Management**:\n   - Store private keys securely using environment variables\n   - Never commit private keys to version control\n   - Use hardware wallets for maximum security\n\n2. **API Usage**:\n   - Always validate order parameters before submission\n   - Use `simulate_order` to test order logic\n   - Implement proper error handling\n\n3. **Risk Management**:\n   - Set appropriate position sizes\n   - Use stop-loss orders for risk control\n   - Monitor account balances and margins\n\n## \ud83e\uddea Testing\n\nThe project includes comprehensive tests covering all tools:\n\n```bash\n# Run all tests\nuv run pytest\n\n# Run with coverage\nuv run pytest --cov=hyperliquid_mcp\n\n# Run specific test categories\nuv run pytest tests/test_server.py::TestAccountTools\n```\n\n## \ud83d\udd27 Development\n\n### Setup Development Environment\n\n```bash\n# Clone the repository\ngit clone https://github.com/yourusername/hyperliquid-mcp.git\ncd hyperliquid-mcp\n\n# Install with development dependencies\nuv sync --dev\n\n# Run tests\nuv run pytest\n\n# Format code\nuv run black src/ tests/\nuv run isort src/ tests/\n\n# Type checking\nuv run mypy src/\n```\n\n### Project Structure\n\n```\nhyperliquid-mcp/\n\u251c\u2500\u2500 src/hyperliquid_mcp/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 server.py          # MCP server implementation\n\u2502   \u251c\u2500\u2500 client.py          # Hyperliquid API client\n\u2502   \u2514\u2500\u2500 models.py          # Pydantic models\n\u251c\u2500\u2500 tests/\n\u2502   \u251c\u2500\u2500 test_server.py     # Tool function tests\n\u2502   \u2514\u2500\u2500 test_mcp_integration.py  # MCP integration tests\n\u251c\u2500\u2500 pyproject.toml         # Project configuration\n\u2514\u2500\u2500 README.md\n```\n\n## \ud83d\udcda API Reference\n\n### Order Types\n- **market**: Execute immediately at current market price\n- **limit**: Execute only at specified price or better\n- **trigger**: Stop/trigger order that becomes market order when triggered\n\n### Time in Force\n- **GTC** (Good Till Cancelled): Order remains active until filled or cancelled\n- **IOC** (Immediate or Cancel): Fill immediately or cancel unfilled portion\n- **ALO** (Add Liquidity Only): Only add liquidity, don't take from order book\n\n### Candle Intervals\nSupported intervals: `1m`, `3m`, `5m`, `15m`, `30m`, `1h`, `2h`, `4h`, `8h`, `12h`, `1d`, `3d`, `1w`, `1M`\n\n## \ud83e\udd1d Contributing\n\n1. Fork the repository\n2. Create a feature branch (`git checkout -b feature/amazing-feature`)\n3. Commit your changes (`git commit -m 'Add amazing feature'`)\n4. Push to the branch (`git push origin feature/amazing-feature`)\n5. Open a Pull Request\n\n## \ud83d\udcc4 License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## \u26a0\ufe0f Disclaimer\n\nThis software is provided for educational and informational purposes only. Trading cryptocurrencies involves substantial risk and may result in significant financial losses. The authors are not responsible for any trading losses incurred through the use of this software. Always conduct your own research and consider consulting with a qualified financial advisor before making trading decisions.\n\n## \ud83d\udd17 Links\n\n- [Hyperliquid Exchange](https://hyperliquid.xyz/)\n- [Hyperliquid Documentation](https://hyperliquid.gitbook.io/hyperliquid-docs)\n- [Model Context Protocol](https://modelcontextprotocol.io/)\n- [FastMCP Framework](https://github.com/jlowin/fastmcp)\n- [Claude Desktop](https://claude.ai/desktop)\n\n## \ud83d\udcde Support\n\nFor questions, issues, or contributions:\n- Open an issue on GitHub\n- Check the [Hyperliquid Discord](https://discord.gg/hyperliquid) for community support\n- Review the comprehensive test suite for usage examples", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "crypto, defi, exchange, hyperliquid, mcp, trading", "license": "MIT License\n        \n        Copyright (c) 2025 Hyperliquid MCP Server\n        \n        Permission is hereby granted, free of charge, to any person obtaining a copy\n        of this software and associated documentation files (the \"Software\"), to deal\n        in the Software without restriction, including without limitation the rights\n        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n        copies of the Software, and to permit persons to whom the Software is\n        furnished to do so, subject to the following conditions:\n        \n        The above copyright notice and this permission notice shall be included in all\n        copies or substantial portions of the Software.\n        \n        THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n        SOFTWARE.", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "hyperliquid-mcp", "package_url": "https://pypi.org/project/hyperliquid-mcp/", "platform": null, "project_url": "https://pypi.org/project/hyperliquid-mcp/", "project_urls": {"Documentation": "https://github.com/midodimori/hyperliquid-mcp#readme", "Homepage": "https://github.com/midodimori/hyperliquid-mcp", "Issues": "https://github.com/midodimori/hyperliquid-mcp/issues", "Repository": "https://github.com/midodimori/hyperliquid-mcp"}, "provides_extra": ["dev"], "release_url": "https://pypi.org/project/hyperliquid-mcp/0.1.5/", "requires_dist": ["asyncio-throttle>=1.0.2", "eth-account>=0.13.7", "fastmcp>=2.10.6", "hyperliquid-python-sdk>=0.16.0", "pydantic>=2.11.7", "python-dotenv>=1.1.1", "black>=25.1.0; extra == \"dev\"", "isort>=6.0.1; extra == \"dev\"", "mypy>=1.17.0; extra == \"dev\"", "pytest-asyncio>=1.1.0; extra == \"dev\"", "pytest-cov>=6.0.0; extra == \"dev\"", "pytest-mock>=3.14.1; extra == \"dev\"", "pytest>=8.4.1; extra == \"dev\"", "ruff>=0.12.5; extra == \"dev\""], "requires_python": ">=3.11", "summary": "A server that exposes a set of tools for interacting with the Hyperliquid decentralized exchange. It simplifies trading operations by providing a high-level API for placing, canceling, and modifying orders, as well as managing account settings and retrieving market data.", "version": "0.1.5", "yanked": false, "yanked_reason": null}, "last_serial": 30394374, "urls": [{"comment_text": null, "digests": {"blake2b_256": "dc7ef477ad1354cb1af864eee1fead87248c867cfee6fb1682b65c9934ef7e68", "md5": "1db5dc2e37edc236ee19debf55583d8b", "sha256": "1819878438f3df37d6aef09098fa34700ab400a2ee782c95f836c2d9141b42a4"}, "downloads": -1, "filename": "hyperliquid_mcp-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "1db5dc2e37edc236ee19debf55583d8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.11", "size": 20987, "upload_time": "2025-07-29T02:24:14", "upload_time_iso_8601": "2025-07-29T02:24:14.157057Z", "url": "https://files.pythonhosted.org/packages/dc/7e/f477ad1354cb1af864eee1fead87248c867cfee6fb1682b65c9934ef7e68/hyperliquid_mcp-0.1.5-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "b2bbaa834aecf093f8972d02ff60bab8572d606c05d9a35326e3062fb4a50ef4", "md5": "7faad8ab4f7c5f39e33cf0f0d2bb1c98", "sha256": "18df7f0e3fa94cae3aa115ee2a425e3662a651e6a28c7983b20961c5216e2f0d"}, "downloads": -1, "filename": "hyperliquid_mcp-0.1.5.tar.gz", "has_sig": false, "md5_digest": "7faad8ab4f7c5f39e33cf0f0d2bb1c98", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.11", "size": 107047, "upload_time": "2025-07-29T02:24:15", "upload_time_iso_8601": "2025-07-29T02:24:15.882637Z", "url": "https://files.pythonhosted.org/packages/b2/bb/aa834aecf093f8972d02ff60bab8572d606c05d9a35326e3062fb4a50ef4/hyperliquid_mcp-0.1.5.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:24:06 GMT", "package": "baai-datacube", "version": "0.1.2", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Programming Language :: Rust"], "description": "", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "baai-datacube", "package_url": "https://pypi.org/project/baai-datacube/", "platform": null, "project_url": "https://pypi.org/project/baai-datacube/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/baai-datacube/0.1.2/", "requires_dist": ["requests>=2.32.4", "psutil>=7.0.0"], "requires_python": ">=3.9", "summary": "baai datacube", "version": "0.1.2", "yanked": false, "yanked_reason": null}, "last_serial": 30394371, "urls": [{"comment_text": null, "digests": {"blake2b_256": "94395e4c09f7fe4bcc13f962efdbe2d1c4c17e460e230947681fcca6178622ae", "md5": "f1867fbb8c18d3c9b06bc5a19f46cb28", "sha256": "3e36157731ce0d5a11106699583a84d232af6411e6a6aad77b488ffeba8bb82c"}, "downloads": -1, "filename": "baai_datacube-0.1.2-cp312-cp312-macosx_10_12_x86_64.whl", "has_sig": false, "md5_digest": "f1867fbb8c18d3c9b06bc5a19f46cb28", "packagetype": "bdist_wheel", "python_version": "cp312", "requires_python": ">=3.9", "size": 1469689, "upload_time": "2025-07-29T02:24:06", "upload_time_iso_8601": "2025-07-29T02:24:06.241258Z", "url": "https://files.pythonhosted.org/packages/94/39/5e4c09f7fe4bcc13f962efdbe2d1c4c17e460e230947681fcca6178622ae/baai_datacube-0.1.2-cp312-cp312-macosx_10_12_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "56f1457888a23f23c29939272bcff341afdf05aabeda24edef5c324991a0d03b", "md5": "a77a43444bbed3693c7b1c9dd1a34431", "sha256": "460aad920ef2675b1913b1f2354745117cf1481247d5c115e326ccb60dd38cfd"}, "downloads": -1, "filename": "baai_datacube-0.1.2.tar.gz", "has_sig": false, "md5_digest": "a77a43444bbed3693c7b1c9dd1a34431", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 38855, "upload_time": "2025-07-29T02:24:09", "upload_time_iso_8601": "2025-07-29T02:24:09.967888Z", "url": "https://files.pythonhosted.org/packages/56/f1/457888a23f23c29939272bcff341afdf05aabeda24edef5c324991a0d03b/baai_datacube-0.1.2.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:24:05 GMT", "package": "ensembl-tui", "version": "0.4.1", "json": {"info": {"author": null, "author_email": "Gavin Huttley <Gavin.Huttley@anu.edu.au>, Arne Becker <arne@ebi.ac.uk>, Stefano Giorgetti <sgiorgetti@ebi.ac.uk>", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![CI](https://github.com/cogent3/ensembl_tui/actions/workflows/testing_develop.yml/badge.svg)](https://github.com/cogent3/ensembl_tui/actions/workflows/testing_develop.yml)\n[![CodeQL](https://github.com/cogent3/ensembl_tui/actions/workflows/codeql.yml/badge.svg)](https://github.com/cogent3/ensembl_tui/actions/workflows/codeql.yml)\n[![Coverage Status](https://coveralls.io/repos/github/cogent3/ensembl_tui/badge.svg?branch=develop)](https://coveralls.io/github/cogent3/ensembl_tui?branch=develop)\n[![Ruff](https://img.shields.io/endpoint?url=https://raw.githubusercontent.com/astral-sh/ruff/main/assets/badge/v2.json)](https://github.com/astral-sh/ruff)\n[![DOI](https://zenodo.org/badge/664119735.svg)](https://doi.org/10.5281/zenodo.15098645)\n[![DOI](https://app.readthedocs.org/projects/ensembl-tui/badge/?version=latest)](https://ensembl-tui.readthedocs.io/en/latest/)\n\n# ensembl-tui\n\nensembl-tui provides the `eti` terminal application for obtaining a subset of the data provided by Ensembl which can then be queried locally. You can have multiple such subsets on your machine, each corresponding to a different selection of species and data types.\n\n> **Warning**\n> We currently **only support accessing data from the main ensembl.org** site. If you discover errors, please post a [bug report](https://github.com/cogent3/ensembl_tui/issues).\n\n## Installing the software\n\n<details>\n  <summary>General user installation instructions</summary>\n\n  ```\n  $ pip install ensembl-tui\n  ```\n\n</details>\n\n<details>\n  <summary>Developer installation instructions</summary>\n  Fork the repo and clone your fork to your local machine. In the terminal, create either a python virtual environment or a new conda environment and activate it. In that virtual environment\n\n  ```\n  $ pip install flit\n  ```\n\n  Then do the flit version of a \"developer install\". (It is basically creating a symlink to the repos source directory.)\n\n  ```\n  $ flit install -s --python `which python`\n  ```\n</details>\n\n## Resources required to subset Ensembl data\n\nEnsembl hosts some very large data sets. You need to have a machine with sufficient disk space to store the data you want to download. At present we do not have support for predicting how much storage would be required for a given selection of species and data types. You will need to experiment.\n\nSome commands can be run in parallel but have moderate memory requirements. If you have a machine with limited RAM, you may need to reduce the number of parallel processes. Again, run some experiments.\n\n## Getting setup\n\n<details>\n  <summary>Specifying what data you want to download and where to put it</summary>\n\n  We use a plain text file to indicate the Ensembl domain, release and types of genomic data to download. Start by using the `demo-config` subcommand.\n\n  <!-- [[[cog\n  import cog\n  from ensembl_tui import cli\n  from click.testing import CliRunner\n  runner = CliRunner()\n  result = runner.invoke(cli.main, [\"demo-config\", \"--help\"])\n  help = result.output.replace(\"Usage: main\", \"Usage: eti\")\n  cog.out(\n      \"```\\n{}\\n```\".format(help)\n  )\n  ]]] -->\n  ```\n  Usage: eti demo-config [OPTIONS]\n\n    exports sample config and species table to the nominated path\n\n  Options:\n    -o, --outpath PATH     Path to directory to export all rc contents.\n    -f, --force_overwrite  Overwrite existing data.\n    --help                 Show this message and exit.\n\n  ```\n  <!-- [[[end]]] -->\n\n  ```shell\n  $ eti demo-config -o ensembl_download\n  ```\n  This command creates a `ensembl_download` download directory and writes two plain text files into it:\n\n  1. `species.tsv`: contains the Latin names, common names etc... of the species accessible at ensembl.org website.\n  2. `sample.cfg`: a sample configuration file that you can edit to specify the data you want to download.\n\n  The latter file includes comments on how to edit it in order to specify the genomic resources that you want.\n\n</details>\n\n<details>\n  <summary>Downloading the data</summary>\n\n  Downloads the data indicated in the config file to a local directory.\n\n  <!-- [[[cog\n  import cog\n  from ensembl_tui import cli\n  from click.testing import CliRunner\n  runner = CliRunner()\n  result = runner.invoke(cli.main, [\"download\", \"--help\"])\n  help = result.output.replace(\"Usage: main\", \"Usage: eti\")\n  cog.out(\n      \"```\\n{}\\n```\".format(help)\n  )\n  ]]] -->\n  ```\n  Usage: eti download [OPTIONS]\n\n    download data from Ensembl's ftp site\n\n  Options:\n    -c, --configpath PATH  Path to config file specifying databases, (only species\n                           or compara at present).\n    -d, --debug            Maximum verbosity, and reduces number of downloads,\n                           etc...\n    -v, --verbose\n    --help                 Show this message and exit.\n\n  ```\n  <!-- [[[end]]] -->\n\n  For a config file named `config.cfg`, the download command would be:\n\n  ```shell\n  $ cd to/directory/with/config.cfg\n  $ eti download -c config.cfg\n  ```\n\n  > **Note**\n  > This is the only step for which the internet is required. Downloads can be interrupted and resumed. The software will delete partially downloaded files.\n\nThe download creates a new `.cfg` file inside the download directory. This file is used by the `install` command.\n\n</details>\n\n<details>\n  <summary>Installing the data</summary>\n\nConverts the downloaded data into data formats designed to enhance querying performance.\n\n  <!-- [[[cog\n  import cog\n  from ensembl_tui import cli\n  from click.testing import CliRunner\n  runner = CliRunner()\n  result = runner.invoke(cli.main, [\"install\", \"--help\"])\n  help = result.output.replace(\"Usage: main\", \"Usage: eti\")\n  cog.out(\n      \"```\\n{}\\n```\".format(help)\n  )\n  ]]] -->\n  ```\n  Usage: eti install [OPTIONS]\n\n    create the local representations of the data\n\n  Options:\n    -d, --download PATH       Path to local download directory containing a cfg\n                              file.\n    -np, --num_procs INTEGER  Number of procs to use.  [default: 1]\n    -f, --force_overwrite     Overwrite existing data.\n    -v, --verbose\n    --help                    Show this message and exit.\n\n  ```\n  <!-- [[[end]]] -->\n\nThis step can be run in parallel, but the memory requirements will scale with the number of genomes. So we suggest monitoring performance on your system by trying it out on a small number of CPUs to start with. The following command uses 2 CPUs and has been safe on systems with only 16GB of RAM for 10 primate genomes, including homology data and whole genome alignments.\n\n```shell\n$ cd to/directory/with/downloaded_data\n$ eti install -d downloaded_data -np 2\n```\n\n</details>\n\n<details>\n  <summary>Checking what has been installed</summary>\nThis will give a summary of what data has been installed at a provided path.\n\n\n  <!-- [[[cog\n  import cog\n  from ensembl_tui import cli\n  from click.testing import CliRunner\n  runner = CliRunner()\n  result = runner.invoke(cli.main, [\"installed\", \"--help\"])\n  help = result.output.replace(\"Usage: main\", \"Usage: eti\")\n  cog.out(\n      \"```\\n{}\\n```\".format(help)\n  )\n  ]]] -->\n  ```\n  Usage: eti installed [OPTIONS]\n\n    show what is installed\n\n  Options:\n    -i, --installed TEXT  Path to root directory of an installation.  [required]\n    --help                Show this message and exit.\n\n  ```\n  <!-- [[[end]]] -->\n\n</details>\n\n## Interrogating the data\n\nWe provide a conventional command line interface for querying the data with subcommands.\n\n<details>\n  <summary>The full list of subcommands</summary>\n\n  You can get help on individual subcommands by running `eti <subcommand>` in the terminal.\n\n  <!-- [[[cog\n  import cog\n  from ensembl_tui import cli\n  from click.testing import CliRunner\n  runner = CliRunner()\n  result = runner.invoke(cli.main)\n  help = result.output.replace(\"Usage: main\", \"Usage: eti\")\n  cog.out(\n      \"```\\n{}\\n```\".format(help)\n  )\n  ]]] -->\n  ```\n  Usage: eti [OPTIONS] COMMAND [ARGS]...\n\n    Tools for obtaining and interrogating subsets of https://ensembl.org genomic\n    data.\n\n  Options:\n    --version  Show the version and exit.\n    --help     Show this message and exit.\n\n  Commands:\n    tui              Open Textual TUI.\n    demo-config      exports sample config and species table to the nominated...\n    download         download data from Ensembl's ftp site\n    install          create the local representations of the data\n    installed        show what is installed\n    species-summary  genome summary data for a species\n    dump-genes       export meta-data table for genes from one species to...\n    compara-summary  summary data for compara\n    homologs         exports CDS sequence data in fasta format for homology...\n    alignments       export multiple alignments in fasta format for named genes\n\n  ```\n  <!-- [[[end]]] -->\n\n</details>\n\nWe also provide an experiment terminal user interface (TUI) that allows you to explore the data in a more interactive way. This is invoked with the `tui` subcommand.\n\n### Getting a summary of a genome\n\nA command like the following\n```\neti species-summary -i primates10_113/install --species human\n```\ndisplays two tables for the indicated genome. The first is the biotypes and their counts, the second the repeat classes / types and their counts.\n\n### Getting a summary of a homology data\n\nA command like the following\n```\neti compara-summary -i primates10_113/install\n```\ndisplays the homology types and counts. The values under `homology_type` can be used as input arguments to the `homologs` command `--homology_type` argument.\n\n### Exporting related sequences\n\nA command like the following\n```\neti homologs -i primates10_113/install/ --outdir sampled_100 --ref human --coord_names 1 --limit 100\n```\nwill sample 100 one-to-one orthologs (the default homology type) to human chromosome 1 linked protein coding genes (the only biotype supported at present). The canonical CDS sequences will be written in fasta format to the directory `sampled_100`.\n\n### Exporting whole genome alignments\n\nA command like the following\n```\neti alignments -i primates10_113/install --outdir sampled_aligns_100 --align_name '*primate*' --coord_names 1 --ref human --limit 10\n```\nsamples 10 alignments that include human chromosome 1 protein coding genes. These are from the Ensembl whole genome alignment whose name matches the glob pattern `*primate*`.\n\n> **Warning**\n>\n> If this pattern matches more than one installed Ensembl alignment, the program will exit.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "biology, genomics, evolution, bioinformatics", "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": "Gavin Huttley <Gavin.Huttley@anu.edu.au>, Arne Becker <arne@ebi.ac.uk>, Stefano Giorgetti <sgiorgetti@ebi.ac.uk>", "name": "ensembl-tui", "package_url": "https://pypi.org/project/ensembl-tui/", "platform": null, "project_url": "https://pypi.org/project/ensembl-tui/", "project_urls": {"Bug Tracker": "https://github.com/cogent3/ensembl_tui/issues", "Documentation": "https://ensembl-tui.readthedocs.io/", "Source Code": "https://github.com/cogent3/ensembl_tui"}, "provides_extra": ["dev", "doc", "test"], "release_url": "https://pypi.org/project/ensembl-tui/0.4.1/", "requires_dist": ["blosc2", "click", "cogent3>=2025.7.10a5", "cogent3-h5seqs", "duckdb", "numba", "numpy", "rich", "scitrack", "typing_extensions", "trogon", "unsync", "wakepy>0.7; os_name == \"darwin\"", "click; extra == \"dev\"", "cogapp; extra == \"dev\"", "flit; extra == \"dev\"", "nox; extra == \"dev\"", "numpydoc; extra == \"dev\"", "psutil; extra == \"dev\"", "scriv; extra == \"dev\"", "ensembl_tui[doc]; extra == \"dev\"", "ensembl_tui[test]; extra == \"dev\"", "ensembl-tui; extra == \"doc\"", "diverse_seq[extra]; extra == \"doc\"", "mkdocs>=1.6.1; extra == \"doc\"", "markdown-exec[ansi]>=1.10.0; extra == \"doc\"", "mkdocs-jupyter>=0.25.1; extra == \"doc\"", "markdown>=3.7; extra == \"doc\"", "click; extra == \"test\"", "pandas; extra == \"test\"", "pytest; extra == \"test\"", "pytest-cov; extra == \"test\"", "pytest-timeout; extra == \"test\"", "pytest-xdist; extra == \"test\"", "ruff==0.10.0; extra == \"test\"", "nox; extra == \"test\""], "requires_python": "<3.14,>=3.10", "summary": "Ensembl terminal user interface tools", "version": "0.4.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394370, "urls": [{"comment_text": null, "digests": {"blake2b_256": "66fa988ba7430f2b80fef5f163ae06d4b7a38d7c2bbbf8741dd5d7f2243e84a8", "md5": "a39ac1ded7863f0a4262cf00fac07cce", "sha256": "f195694de818910465370faa64fba51982c73d5235acffa72270a0f27e1b1fa8"}, "downloads": -1, "filename": "ensembl_tui-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a39ac1ded7863f0a4262cf00fac07cce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "<3.14,>=3.10", "size": 75777, "upload_time": "2025-07-29T02:24:05", "upload_time_iso_8601": "2025-07-29T02:24:05.567125Z", "url": "https://files.pythonhosted.org/packages/66/fa/988ba7430f2b80fef5f163ae06d4b7a38d7c2bbbf8741dd5d7f2243e84a8/ensembl_tui-0.4.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "95172a945b5bb1efc8088f620c37e0f0932695c235f2837be7d43afddef33811", "md5": "6ff015d675ed08abb331388d4fc197ad", "sha256": "641b03e4f2bc4404a5bf11a21dca050cf819dcc2ed2cdd68e14f738a7438b08a"}, "downloads": -1, "filename": "ensembl_tui-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6ff015d675ed08abb331388d4fc197ad", "packagetype": "sdist", "python_version": "source", "requires_python": "<3.14,>=3.10", "size": 111984, "upload_time": "2025-07-29T02:24:07", "upload_time_iso_8601": "2025-07-29T02:24:07.501665Z", "url": "https://files.pythonhosted.org/packages/95/17/2a945b5bb1efc8088f620c37e0f0932695c235f2837be7d43afddef33811/ensembl_tui-0.4.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:23:58 GMT", "package": "astartes", "version": "1.3.2", "json": {"info": {"author": null, "author_email": "Jackson Burns <jwburns@mit.edu>, Himaghna Bhattacharjee <himaghna@udel.edu>, Kevin Spiekermann <kspieker@mit.edu>", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.9"], "description": "<h1 align=\"center\">astartes</h1> \n<h2 align=\"center\"><em>(as-tar-tees)</em></h2>\n<h3 align=\"center\">Train:Validation:Test Algorithmic Sampling for Molecules and Arbitrary Arrays</h3>\n\n<p align=\"center\">  \n  <img alt=\"astarteslogo\" src=\"https://raw.githubusercontent.com/JacksonBurns/astartes/main/astartes_logo.png\">\n</p> \n<div align=\"center\">\n  <table>\n    <caption><p style=\"font-weight:bold\">Status Badges</p></caption>\n    <tr>\n      <th>Usage</th>\n      <th>Continuous Integration</th>\n      <th>Release</th>\n    </tr>\n    <tr>\n      <td><img alt=\"PyPI - Python Version\" src=\"https://img.shields.io/pypi/pyversions/astartes?style=plastic\"></td>\n      <td><img alt=\"Reproduce Paper\" src=\"https://github.com/JacksonBurns/astartes/actions/workflows/reproduce_paper.yml/badge.svg?branch=main&event=schedule\"></td>\n      <td><a href=\"https://github.com/pyOpenSci/software-review/issues/120\"><img src=\"https://tinyurl.com/y22nb8up\" alt=\"pyOpenSci approved\" /></a></td>\n    </tr>\n    <tr>\n      <td><img alt=\"PyPI - License\" src=\"https://img.shields.io/github/license/JacksonBurns/astartes\"></td>\n      <td><img alt=\"Test Status\" src=\"https://github.com/JacksonBurns/astartes/actions/workflows/ci.yml/badge.svg?branch=main&event=schedule\"></td>\n      <td><a href=\"https://doi.org/10.5281/zenodo.8147205\"><img src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.8147205.svg\" alt=\"DOI\"></a></td>\n    </tr>\n    <tr>\n      <td><img alt=\"PyPI - Total Downloads\" src=\"https://static.pepy.tech/personalized-badge/astartes?period=total&units=none&left_color=grey&right_color=brightgreen&left_text=Lifetime%20Downloads\"></td>\n      <td><a alt=\"Documentation Status\"><img src=\"https://github.com/JacksonBurns/astartes/actions/workflows/gen_docs.yml/badge.svg\"></td>\n      <td><img alt=\"PyPI\" src=\"https://img.shields.io/pypi/v/astartes\"> <img alt=\"conda-forge version\" src=\"https://img.shields.io/conda/vn/conda-forge/astartes.svg\"></td>\n    </tr>\n    <tr>\n      <td><img alt=\"GitHub Repo Stars\" src=\"https://img.shields.io/github/stars/JacksonBurns/astartes?style=social\"></td>\n      <td><a href=\"https://www.repostatus.org/#active\"><img src=\"https://www.repostatus.org/badges/latest/active.svg\" alt=\"Project Status: Active \u2013 The project has reached a stable, usable state and is being actively developed.\" /></a></td>\n      <td><a href=\"https://joss.theoj.org/papers/8a9cfc71d6f75410b06510a646d5f783\"><img src=\"https://joss.theoj.org/papers/8a9cfc71d6f75410b06510a646d5f783/status.svg\"></a></td>\n    </tr>\n  </table>\n</div>\n\n\n## Online Documentation\nFollow [this link](https://JacksonBurns.github.io/astartes/) for a nicely-rendered version of this README along with additional tutorials for [moving from train_test_split in sklearn to astartes](https://jacksonburns.github.io/astartes/sklearn_to_astartes.html).\nKeep reading for a installation guide and links to tutorials!\n\n## Installing `astartes`\nWe recommend installing `astartes` within a virtual environment, using either `venv` or `conda` (or other tools) to simplify dependency management. Python versions 3.8, 3.9, 3.10, 3.11, and 3.12 are supported on all platforms.\n\n> **Warning**\n> Windows (PowerShell) and MacOS Catalina or newer (zsh) require double quotes around text using the `'[]'` characters (i.e. `pip install \"astartes[molecules]\"`).\n\n### `pip`\n`astartes` is available on `PyPI` and can be installed using `pip`:\n\n - To include the featurization options for chemical data, use `pip install astartes[molecules]`.\n - To install only the sampling algorithms, use `pip install astartes` (this install will have fewer dependencies and may be more readily compatible in environments with existing workflows).\n\n### `conda`\n`astartes` package is also available on `conda-forge` with this command: `conda install -c conda-forge astartes`.\nTo install `astartes` with support for featurizing molecules, use: `conda install -c conda-forge astartes aimsim`.\nThis will download the base `astartes` package as well as `aimsim`, which is the backend used for molecular featurization.\n\nThe PyPI distribution has fewer dependencies for the `molecules` subpackage because it uses `aimsim_core` instead of `aimsim`.\nYou can achieve this on `conda` by first running `conda install -c conda-forge astartes` and then `pip install aimsim_core` (`aimsim_core` is not available on `conda-forge`).\n\n### Source\nTo install `astartes` from source for development, see the [Contributing & Developer Notes](#contributing--developer-notes) section.\n\n## Statement of Need\nMachine learning has sparked an explosion of progress in chemical kinetics, materials science, and many other fields as researchers use data-driven methods to accelerate steps in traditional workflows within some acceptable error tolerance. \nTo facilitate adoption of these models, there are two important tasks to consider:\n1. use a validation set when selecting the optimal hyperparameter for the model and separately use a held-out test set to measure performance on unseen data.\n2. evaluate model performance on both interpolative and extrapolative tasks so future users are informed of any potential limitations.\n\n`astartes` addresses both of these points by implementing an `sklearn`-compatible `train_val_test_split` function.\nAdditional technical detail is provided below as well as in our companion paper in the Journal of Open Source Software: [Machine Learning Validation via Rational Dataset Sampling with astartes](https://joss.theoj.org/papers/10.21105/joss.05996).\nFor a demo-based explainer using machine learning on a fast food menu, see the `astartes` Reproducible Notebook published at the United States Research Software Engineers Conference at [this page](https://jacksonburns.github.io/use-rse-23-astartes/split_comparisons.html).\n\n### Target Audience\n`astartes` is generally applicable to machine learning involving both discovery and inference _and_ model validation.\nThere are specific functions in `astartes` for applications in cheminformatics (`astartes.molecules`) but the methods implemented are general to all numerical data.\n\n## Quick Start\n`astartes` is designed as a drop-in replacement for `sklearn`'s `train_test_split` function (see the [sklearn documentation](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html)). To switch to `astartes`, change `from sklearn.model_selection import train_test_split` to `from astartes import train_test_split`.\n\nLike `sklearn`, `astartes` accepts any iterable object as `X`, `y`, and `labels`.\nEach will be converted to a `numpy` array for internal operations, and returned as a `numpy` array with limited exceptions: if `X` is a `pandas` `DataFrame`, `y` is a `Series`, or `labels` is a `Series`, `astartes` will cast it back to its original type including its index and column names.\n\n> **Note**\n> The developers recommend passing `X`, `y`, and `labels` as `numpy` arrays and handling the conversion to and from other types explicitly on your own. Behind-the-scenes type casting can lead to unexpected behavior!\n\nBy default, `astartes` will split data randomly. Additionally, a variety of algorithmic sampling approaches can be used by specifying the `sampler` argument to the function (see the [Table of Implemented Samplers](#implemented-sampling-algorithms) for a complete list of options and their corresponding references):\n\n```python\nfrom sklearn.datasets import load_diabetes\n\nX, y = load_diabetes(return_X_y=True)\n\nX_train, X_test, y_train, y_test = train_test_split(\n  X,  # preferably numpy arrays, but astartes will cast it for you\n  y,\n  sampler = 'kennard_stone',  # any of the supported samplers\n)\n```\n\n> **Note**\n> Extrapolation sampling algorithms will return an additional set of arrays (the cluster labels) which will result in a `ValueError: too many values to unpack` if not called properly. See the [`split_comparisons` Google colab demo](https://colab.research.google.com/github/JacksonBurns/astartes/blob/main/examples/split_comparisons/split_comparisons.ipynb) for a full explanation.\n\nThat's all you need to get started with `astartes`!\nThe next sections include more examples and some demo notebooks you can try in your browser.\n\n### Example Notebooks\n\nClick the badges in the table below to be taken to a live, interactive demo of `astartes`:\n\n| Demo | Topic | Link |\n|:---:|---|---|\n| Comparing Sampling Algorithms with Fast Food | Visual representations of how different samplers affect data partitioning | [![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/JacksonBurns/astartes/blob/main/examples/split_comparisons/split_comparisons.ipynb) |\n| Using `train_val_test_split` with the `sklearn` example datasets | Demonstrating how witholding a test set with `train_val_test_split` can impact performance | [![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/JacksonBurns/astartes/blob/main/examples/train_val_test_split_sklearn_example/train_val_test_split_example.ipynb) |\n| Cheminformatics sample set partitioning with `astartes` | Extrapolation vs. Interpolation impact on cheminformatics model accuracy | [![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/JacksonBurns/astartes/blob/main/examples/barrier_prediction_with_RDB7/RDB7_barrier_prediction_example.ipynb) |\n| Comparing partitioning approaches for alkanes | Visualizing how sampler impact model performance with simple chemicals | [![Colab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/JacksonBurns/astartes/blob/main/examples/mlpds_2023_astartes_demonstration/mlpds_2023_demo.ipynb) |\n\nTo execute these notebooks locally, clone this repository (i.e. `git clone https://github.com/JacksonBurns/astartes.git`), navigate to the `astartes` directory, run `pip install .[demos]`, then open and run the notebooks in your preferred editor.\nYou do _not_ need to execute the cells prefixed with `%%capture` - they are only present for compatibility with Google Colab.\n\n#### Packages Using `astartes`\n - [Chemprop](https://github.com/chemprop/chemprop), a machine learning library for chemical property prediction, uses `astartes` in the backend for splitting molecular structures.\n - [`fastprop`](https://github.com/JacksonBurns/fastprop), a descriptor-based property prediction library, uses `astartes`.\n - [Google Scholar of articles citing the JOSS paper for `astartes`](https://scholar.google.com/scholar?cites=4693802000464819413&as_sdt=40000005&sciodt=0,22&hl=en)\n\n### Withhold Testing Data with `train_val_test_split`\nFor rigorous ML research, it is critical to withhold some data during training to use a `test` set.\nThe model should _never_ see this data during training (unlike the validation set) so that we can get an accurate measurement of its performance.\n\nWith `astartes` performing this three-way data split is readily available with `train_val_test_split`:\n```python\nfrom astartes import train_val_test_split\n\nX_train, X_val, X_test = train_val_test_split(X, sampler = 'sphere_exclusion')\n```\nYou can now train your model with `X_train`, optimize your model with `X_val`, and measure its performance with `X_test`.\n\n### Evaluate the Impact of Splitting Algorithms on Regression Models\nFor data with many features it can be difficult to visualize how different sampling algorithms change the distribution of data into training, validation, and testing like we do in some of the demo notebooks.\nTo aid in analyzing the impact of the algorithms, `astartes` provides `generate_regression_results_dict`.\nThis function allows users to quickly evaluate the impact of different splitting techniques on any `sklearn`-compatible model's performance.\nAll results are stored in a nested dictionary (`{sampler:{metric:{split:score}}}`) format and can be displayed in a neatly formatted table using the optional `print_results` argument.\n\n```python\nfrom sklearn.svm import LinearSVR\n\nfrom astartes.utils import generate_regression_results_dict as grrd\n\nsklearn_model = LinearSVR()\nresults_dict = grrd(\n    sklearn_model,\n    X,\n    y,\n    print_results=True,\n)\n\n         Train       Val      Test\n----  --------  --------  --------\nMAE   1.41522   3.13435   2.17091\nRMSE  2.03062   3.73721   2.40041\nR2    0.90745   0.80787   0.78412\n\n```\n\nAdditional metrics can be passed to `generate_regression_results_dict` via the `additional_metrics` argument, which should be a dictionary mapping the name of the metric (as a `string`) to the function itself, like this:\n\n```python\nfrom sklearn.metrics import mean_absolute_percentage_error\n\nadd_met = {\"mape\": mean_absolute_percentage_error}\n\ngrrd(sklearn_model, X, y, additional_metric=add_met)\n```\n\nSee the docstring for `generate_regression_results_dict` (with `help(generate_regression_results_dict)`) for more information.\n\n### Using `astartes` with Categorical Data\nAny of the implemented sampling algorithms whose hyperparameters allow specifying the `metric` or `distance_metric` (effectively `1-metric`) can be co-opted to work with categorical data.\nSimply encode the data in a format compatible with the `sklearn` metric of choice and then call `astartes` with that metric specified:\n```python\nfrom sklearn.metrics import jaccard_score\n\nX_train, X_test, y_train, y_test = train_test_split(\n  X,\n  y,\n  sampler='kennard_stone',\n  hopts={\"metric\": jaccard_score},\n)\n```\n\nOther samplers which do not allow specifying a categorical distance metric did not provide a method for doing so in their original inception, though it is possible that they can be adapted for this application.\nIf you are interested in adding support for categorical metrics to an existing sampler, consider opening a [Feature Request](https://github.com/JacksonBurns/astartes/issues/new?assignees=&labels=enhancement&projects=&template=feature_request.md&title=%5BFEATURE%5D%3A+)!\n\n### Access Sampling Algorithms Directly\nThe sampling algorithms implemented in `astartes` can also be directly accessed and run if it is more useful for your applications.\nIn the below example, we import the Kennard Stone sampler, use it to partition a simple array, and then retrieve a sample.\n```python\nfrom astartes.samplers.interpolation import KennardStone\n\nkennard_stone = KennardStone([[1, 2], [3, 4], [5, 6]])\nfirst_2_samples = kennard_stone.get_sample_idxs(2)\n```\nAll samplers in `astartes` implement a `_sample()` method that is called by the constructor (i.e. greedily) and either a `get_sampler_idxs` or `get_cluster_idxs` for interpolative and extrapolative samplers, respectively.\nFor more detail on the implementaiton and design of samplers in `astartes`, see the [Developer Notes](#contributing--developer-notes) section.\n\n## Theory and Application of `astartes`\nThis section of the README details some of the theory behind why the algorithms implemented in `astartes` are important and some motivating examples.\nFor a comprehensive walkthrough of the theory and implementation of `astartes`, follow [this link](https://github.com/JacksonBurns/astartes/raw/joss-paper/Burns-Spiekermann-Bhattacharjee_astartes.pdf) to read the companion paper (freely available and hosted here on GitHub).\n\n> **Note**\n> We reference open-access publications wherever possible. For articles locked behind a paywall (denoted with :small_blue_diamond:), we instead suggest reading [this Wikipedia page](https://en.wikipedia.org/wiki/Sci-Hub) and absolutely __not__ attempting to bypass the paywall.\n\n### Rational Splitting Algorithms\nWhile much machine learning is done with a random choice between training/validation/test data, an alternative is the use of so-called \"rational\" splitting algorithms.\nThese approaches use some similarity-based algorithm to divide data into sets.\nSome of these algorithms include Kennard-Stone ([Kennard & Stone](https://www.tandfonline.com/doi/abs/10.1080/00401706.1969.10490666) :small_blue_diamond:), Sphere Exclusion ([Tropsha et. al](https://pubs.acs.org/doi/pdf/10.1021/ci300338w) :small_blue_diamond:),as well as the OptiSim as discussed in [Applied Chemoinformatics: Achievements and Future Opportunities](https://www.wiley.com/en-us/Applied+Chemoinformatics%3A+Achievements+and+Future+Opportunities-p-9783527806546) :small_blue_diamond:.\nSome clustering-based splitting techniques have also been incorporated, such as [DBSCAN](http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.1016.890&rep=rep1&type=pdf).\n\nThere are two broad categories of sampling algorithms implemented in `astartes`: extrapolative and interpolative.\nThe former will force your model to predict on out-of-sample data, which creates a more challenging task than interpolative sampling.\nSee the table below for all of the sampling approaches currently implemented in `astartes`, as well as the hyperparameters that each algorithm accepts (which are passed in with `hopts`) and a helpful reference for understanding how the hyperparameters work.\nNote that `random_state` is defined as a keyword argument in `train_test_split` itself, even though these algorithms will use the `random_state` in their own work.\nDo not provide a `random_state` in the `hopts` dictionary - it will be overwritten by the `random_state` you provide for `train_test_split` (or the default if none is provided).\n\n#### Implemented Sampling Algorithms\n\n| Sampler Name | Usage String | Type | Hyperparameters | Reference | Notes |\n|:---:|---|---|---|---|---|\n| Random | 'random' | Interpolative | `shuffle` | [sklearn train_test_split](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.train_test_split.html) Documentation | This sampler is a direct passthrough to `sklearn`'s `train_test_split`. |\n| Kennard-Stone | 'kennard_stone' | Interpolative | `metric` | Original Paper by [Kennard & Stone](https://www.tandfonline.com/doi/abs/10.1080/00401706.1969.10490666) :small_blue_diamond: | Euclidian distance is used by default, as described in the original paper. |\n| Sample set Partitioning based on joint X-Y distances (SPXY) | 'spxy' | Interpolative | `distance_metric`, `distance_metric_X`, `distance_metric_y` (*) | Saldhana et. al [original paper](https://www.sciencedirect.com/science/article/abs/pii/S003991400500192X) :small_blue_diamond: | Extension of Kennard Stone that also includes the response when sampling distances. |\n| Mahalanobis Distance Kennard Stone (MDKS) | 'spxy' _(MDKS is derived from SPXY)_ | Interpolative | _none, see Notes_ | Saptoro et. al [original paper](https://espace.curtin.edu.au/bitstream/handle/20.500.11937/45101/217844_70585_PUB-SE-DCE-FM-71008.pdf?sequence=2&isAllowed=y) | MDKS is SPXY using Mahalanobis distance and can be called by using SPXY with `distance_metric=\"mahalanobis\"` |\n| Scaffold | 'scaffold' | Extrapolative | `include_chirality` | [Bemis-Murcko Scaffold](https://pubs.acs.org/doi/full/10.1021/jm9602928) :small_blue_diamond: as implemented in RDKit | This sampler requires SMILES strings as input (use the `molecules` subpackage) |\n| Molecular Weight| 'molecular_weight' | Extrapolative | _none_ | ~ | Sorts molecules by molecular weight as calculated by RDKit |\n| Sphere Exclusion | 'sphere_exclusion' | Extrapolative | `metric`, `distance_cutoff` | _custom implementation_ | Variation on Sphere Exclusion for arbitrary-valued vectors. |\n| Time Based | 'time_based' | Extrapolative | _none_ | Papers using Time based splitting: [Chen et al.](https://pubs.acs.org/doi/full/10.1021/ci200615h) :small_blue_diamond:, [Sheridan, R. P](https://pubs.acs.org/doi/full/10.1021/ci400084k) :small_blue_diamond:, [Feinberg et al.](https://pubs.acs.org/doi/full/10.1021/acs.jmedchem.9b02187) :small_blue_diamond:, [Struble et al.](https://pubs.rsc.org/en/content/articlehtml/2020/re/d0re00071j) | This sampler requires `labels` to be an iterable of either date or datetime objects. |\n| Target Property | 'target_property' | Extrapolative | `descending` | ~ | Sorts data by regression target y |\n| Optimizable K-Dissimilarity Selection (OptiSim) | 'optisim' | Extrapolative | `n_clusters`, `max_subsample_size`, `distance_cutoff` | _custom implementation_ | Variation on [OptiSim](https://pubs.acs.org/doi/10.1021/ci025662h) for arbitrary-valued vectors. |\n| K-Means | 'kmeans' | Extrapolative | `n_clusters`, `n_init` | [`sklearn KMeans`](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.KMeans.html) | Passthrough to `sklearn`'s `KMeans`. |\n| Density-Based Spatial Clustering of Applications with Noise (DBSCAN) | 'dbscan' | Extrapolative | `eps`, `min_samples`, `algorithm`, `metric`, `leaf_size` | [`sklearn DBSCAN`](https://scikit-learn.org/stable/modules/generated/sklearn.cluster.DBSCAN.html) Documentation| Passthrough to `sklearn`'s `DBSCAN`. |\n| Minimum Test Set Dissimilarity (MTSD) | ~ | ~ | _upcoming in_ `astartes` _v1.x_ | ~ | ~ |\n| Restricted Boltzmann Machine (RBM) | ~ | ~ | _upcoming in_ `astartes` _v1.x_ | ~ | ~ |\n| Kohonen Self-Organizing Map (SOM) | ~ | ~ | _upcoming in_ `astartes` _v1.x_ | ~ | ~ |\n| SPlit Method | ~ | ~ | _upcoming in_ `astartes` _v1.x_ | ~ | ~ |\n\n(*) specifying `distance_metric_X` or `distance_metric_y` will override the choice of `distance_metric`\n\n### Domain-Specific Applications\nBelow are some field specific applications of `astartes`. Interested in adding a new sampling algorithm or featurization approach? See [`CONTRIBUTING.md`](./CONTRIBUTING.md).\n\n#### Chemical Data and the `astartes.molecules` Subpackage\nMachine Learning is enormously useful in chemistry-related fields due to the high-dimensional feature space of chemical data.\nTo properly apply ML to chemical data for inference _or_ discovery, it is important to know a model's accuracy under the two domains.\nTo simplify the process of partitioning chemical data, `astartes` implements a pre-built featurizer for common chemistry data formats.\nAfter installing with `pip install astartes[molecules]` one can import the new train/test splitting function like this: `from astartes.molecules import train_test_split_molecules`\n\nThe usage of this function is identical to `train_test_split` but with the addition of new arguments to control how the molecules are featurized:\n\n```python\ntrain_test_split_molecules(\n    molecules=smiles,\n    y=y,\n    test_size=0.2,\n    train_size=0.8,\n    fingerprint=\"daylight_fingerprint\",\n    fprints_hopts={\n        \"fpSize\": 200,\n        \"numBitsPerFeature\": 4,\n        \"useHs\": True,\n    },\n    sampler=\"random\",\n    random_state=42,\n    hopts={\n        \"shuffle\": True,\n    },\n)\n```\n\nTo see a complete example of using `train_test_split_molecules` with actual chemical data, take a look in the `examples` directory and the brief [companion paper](https://github.com/JacksonBurns/astartes/raw/joss-paper/Burns-Spiekermann-Bhattacharjee_astartes.pdf).\n\nConfiguration options for the featurization scheme can be found in the documentation for [AIMSim](https://vlachosgroup.github.io/AIMSim/README.html#currently-implemented-fingerprints) though most of the critical configuration options are shown above.\n\n## Reproducibility\n`astartes` aims to be completely reproducible across different platforms, Python versions, and dependency configurations - any version of `astartes` v1.x should result in the _exact_ same splits, always.\nTo that end, the default behavior of `astartes` is to use `42` as the random seed and _always_ set it.\nRunning `astartes` with the default settings will always produce the exact same results.\nWe have verified this behavior on Debian Ubuntu, Windows, and Intel Macs from Python versions 3.7 through 3.11 (with appropriate dependencies for each version).\n\n### Known Reproducibility Limitations\nInevitably external dependencies of `astartes` will introduce backwards-incompatible changes.\nWe continually run regression tests to catch these, and will list all _known_ limitations here:\n - `sklearn` v1.3.0 introduced backwards-incompatible changes in the `KMeans` sampler that changed how the random initialization affects the results, even given the same random seed. Different version of `sklearn` will affect the performance of `astartes` and we recommend including the exact version of `scikit-learn` and `astartes` used, when applicable.\n\n> **Note**\n> We are limited in our ability to test on M1 Macs, but from our limited manual testing we achieve perfect reproducbility in all cases _except occasionally_ with `KMeans` on Apple silicon.\n`astartes` is still consistent between runs on the same platform in all cases, and other samplers are not impacted by this apparent bug.\n\n## How to Cite\nIf you use `astartes` in your work please follow the link below to our (Open Access!) paper in the Journal of Open Source Software or use the \"Cite this repository\" button on GitHub.\n\n[Machine Learning Validation via Rational Dataset Sampling with astartes](https://joss.theoj.org/papers/10.21105/joss.05996)\n\n## Contributing & Developer Notes\nSee [CONTRIBUTING.md](./CONTRIBUTING.md) for instructions on installing `astartes` for development, making a contribution, and general guidance on the design of `astartes`.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": null, "license": "MIT", "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "astartes", "package_url": "https://pypi.org/project/astartes/", "platform": null, "project_url": "https://pypi.org/project/astartes/", "project_urls": {"Homepage": "https://github.com/JacksonBurns/astartes"}, "provides_extra": ["molecules", "dev", "demos"], "release_url": "https://pypi.org/project/astartes/1.3.2/", "requires_dist": ["scikit_learn", "tabulate", "numpy", "scipy", "pandas", "aimsim_core; extra == \"molecules\"", "black; extra == \"dev\"", "isort; extra == \"dev\"", "pytest; extra == \"dev\"", "plotly; extra == \"demos\"", "tabulate; extra == \"demos\"", "py2opsin; extra == \"demos\"", "kaleido; extra == \"demos\""], "requires_python": ">=3.9", "summary": "Train:Test Algorithmic Sampling for Molecules and Arbitrary Arrays", "version": "1.3.2", "yanked": false, "yanked_reason": null}, "last_serial": 30394365, "urls": [{"comment_text": null, "digests": {"blake2b_256": "05765545161f3414be43898a6eac98502f5b44324559514729f8834e47249d33", "md5": "9c2788a7741ab18adb42932988e7b50a", "sha256": "da645f600ed9a788facf8416912a684f92abb27acb3754eba256ffc3cb6548cc"}, "downloads": -1, "filename": "astartes-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9c2788a7741ab18adb42932988e7b50a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.9", "size": 38954, "upload_time": "2025-07-29T02:23:58", "upload_time_iso_8601": "2025-07-29T02:23:58.686228Z", "url": "https://files.pythonhosted.org/packages/05/76/5545161f3414be43898a6eac98502f5b44324559514729f8834e47249d33/astartes-1.3.2-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "5a0122d18c303b34688b893ec99d8c0e82030d6d277e398b6de0a07efb873131", "md5": "5542c1855d7cdfde83343818cd8ef8b7", "sha256": "0383a935bbe10dfcf54d62e63cd26f7180c6e81fc278169db4867f54a8db5a02"}, "downloads": -1, "filename": "astartes-1.3.2.tar.gz", "has_sig": false, "md5_digest": "5542c1855d7cdfde83343818cd8ef8b7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 39871, "upload_time": "2025-07-29T02:23:59", "upload_time_iso_8601": "2025-07-29T02:23:59.847754Z", "url": "https://files.pythonhosted.org/packages/5a/01/22d18c303b34688b893ec99d8c0e82030d6d277e398b6de0a07efb873131/astartes-1.3.2.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:23:58 GMT", "package": "narada", "version": "0.1.9", "json": {"info": {"author": null, "author_email": "Narada <support@narada.ai>", "bugtrack_url": null, "classifiers": [], "description": "<p align=\"center\">\n<picture>\n  <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://raw.githubusercontent.com/NaradaAI/narada-python-sdk/main/static/Narada-logo-dark.png\">\n  <source media=\"(prefers-color-scheme: light)\" srcset=\"https://raw.githubusercontent.com/NaradaAI/narada-python-sdk/main/static/Narada-logo.png\">\n  <img alt=\"NARADA AI Logo.\" src=\"https://raw.githubusercontent.com/NaradaAI/narada-python-sdk/main/static/Narada-logo.png\" width=\"300\">\n</picture>\n</p>\n\n<h1 align=\"center\">Computer Use for Agentic Process Automation!</h1>\n\n<p align=\"center\">\n  <a href=\"https://narada.ai\"><img src=\"https://img.shields.io/badge/Sign%20Up-Cloud-blue?logo=cloud\" alt=\"Sign Up\"></a>\n  <a href=\"https://docs.narada.ai\"><img src=\"https://img.shields.io/badge/Documentation-Docs-blue?logo=gitbook\" alt=\"Documentation\"></a>\n  <a href=\"https://x.com/intent/user?screen_name=Narada_AI\"><img src=\"https://img.shields.io/badge/Follow-Twitter-1DA1F2?logo=twitter&logoColor=white\" alt=\"Twitter Follow\"></a>\n  <a href=\"https://www.linkedin.com/company/97417492/\"><img src=\"https://img.shields.io/badge/Follow-LinkedIn-0077B5?logo=linkedin&logoColor=white\" alt=\"LinkedIn Follow\"></a>\n</p>\n\nThe official Narada Python SDK that helps you launch browsers and run tasks with Narada UI agents.\n\n## Installation\n\n```bash\npip install narada\n```\n\n## Quick Start\n\n**Important**: The first time Narada opens the automated browser, you will need to manually install the [Narada Enterprise extension](https://chromewebstore.google.com/detail/enterprise-narada-ai-assi/bhioaidlggjdkheaajakomifblpjmokn) and log in to your Narada account.\n\nAfter installation and login, create a Narada API Key (see [this link](https://docs.narada.ai/documentation/authentication#api-key) for instructions) and set the following environment variable:\n\n```bash\nexport NARADA_API_KEY=<YOUR KEY>\n```\n\nThat's it. Now you can run the following code to spin up Narada to go and download a file for you from arxiv:\n\n```python\nimport asyncio\n\nfrom narada import Narada\n\n\nasync def main() -> None:\n    # Initialize the Narada client.\n    async with Narada() as narada:\n        # Open a new browser window and initialize the Narada UI agent.\n        window = await narada.open_and_initialize_browser_window()\n\n        # Run a task in this browser window.\n        response = await window.dispatch_request(\n            prompt='/Operator Search for \"LLM Compiler\" on Google and open the first arXiv paper on the results page, then open the PDF. Then download the PDF of the paper.',\n            # Optionally generate a GIF of the agent's actions.\n            generate_gif=True,\n        )\n        print(\"Response:\", response[\"response\"][\"text\"])\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\nThis would then result in the following trajectory:\n\n<p align=\"center\">\n  <a href=\"https://youtu.be/bpy-xnSeboY\">\n    <img src=\"https://i.imgur.com/TyEuD5d.gif\" alt=\"File Download Example\" width=\"600\">\n  </a>\n</p>\n\nYou can use the SDK to launch browsers and run automated tasks using natural language instructions. For more examples and code samples, please explore the [`examples/`](examples/) folder in this repository.\n\n## Features\n\n- **Natural Language Control**: Send instructions in plain English to control browser actions\n- **Parallel Execution**: Run multiple browser tasks simultaneously across different windows\n- **Error Handling**: Built-in timeout handling and retry mechanisms\n- **Action Recording**: Generate GIFs of agent actions for debugging and documentation\n- **Async Support**: Full async/await support for efficient operations\n\n## Key Capabilities\n\n- **Web Search & Navigation**: Automatically search, click links, and navigate websites\n- **Data Extraction**: Extract information from web pages using AI understanding\n- **Form Interaction**: Fill out forms and interact with web elements\n- **File Operations**: Download files and handle web-based documents\n- **Multi-window Management**: Coordinate tasks across multiple browser instances\n\n## License\n\nThis project is licensed under the Apache 2.0 License.\n\n## Support\n\nFor questions, issues, or support, please contact: support@narada.ai\n\n## Citation\n\nWe appreciate it if you could cite Narada if you found it useful for your project.\n\n```bibtex\n@software{narada_ai2025,\n  author = {Narada AI},\n  title = {Narada AI: Agentic Process Automation for Enterprise},\n  year = {2025},\n  publisher = {GitHub},\n  url = {https://github.com/NaradaAI/narada-python-sdk}\n}\n```\n\n<div align=\"center\">\nMade with \u2764\ufe0f in Berkeley, CA.\n</div>\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": "Apache-2.0", "license_files": null, "maintainer": null, "maintainer_email": null, "name": "narada", "package_url": "https://pypi.org/project/narada/", "platform": null, "project_url": "https://pypi.org/project/narada/", "project_urls": {"Homepage": "https://github.com/NaradaAI/narada-python-sdk", "Issues": "https://github.com/NaradaAI/narada-python-sdk/issues", "Repository": "https://github.com/NaradaAI/narada-python-sdk"}, "provides_extra": null, "release_url": "https://pypi.org/project/narada/0.1.9/", "requires_dist": ["aiohttp>=3.12.13", "playwright>=1.53.0", "pydantic>=2.11.7", "rich>=14.0.0"], "requires_python": ">=3.11", "summary": "Python client SDK for Narada", "version": "0.1.9", "yanked": false, "yanked_reason": null}, "last_serial": 30394364, "urls": [{"comment_text": null, "digests": {"blake2b_256": "264613c5788b45850769f1655cdbaa4b22342ce6eaa0fb6f2f8750fb84177097", "md5": "3e30a1638e71deadb11522f4e4d86e32", "sha256": "4dedb5cccf49fb2584621a680507777e17ee64610554248bee50d72f45fae090"}, "downloads": -1, "filename": "narada-0.1.9-py3-none-any.whl", "has_sig": false, "md5_digest": "3e30a1638e71deadb11522f4e4d86e32", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.11", "size": 10954, "upload_time": "2025-07-29T02:23:58", "upload_time_iso_8601": "2025-07-29T02:23:58.292377Z", "url": "https://files.pythonhosted.org/packages/26/46/13c5788b45850769f1655cdbaa4b22342ce6eaa0fb6f2f8750fb84177097/narada-0.1.9-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "a9ccb88e46dc0c274aa983c1c0845cdd9da718e8bf3f9d48ce0ca4d023383b54", "md5": "d6af4234d37582f0bf2dbeb2d0eedc4c", "sha256": "84b70d63c687b31a9c2c5ce3466d8af843ecd258a5c5921c6dd0409a55efe618"}, "downloads": -1, "filename": "narada-0.1.9.tar.gz", "has_sig": false, "md5_digest": "d6af4234d37582f0bf2dbeb2d0eedc4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.11", "size": 390979, "upload_time": "2025-07-29T02:23:59", "upload_time_iso_8601": "2025-07-29T02:23:59.591193Z", "url": "https://files.pythonhosted.org/packages/a9/cc/b88e46dc0c274aa983c1c0845cdd9da718e8bf3f9d48ce0ca4d023383b54/narada-0.1.9.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:23:51 GMT", "package": "pywayne", "version": "1.0.1.4.6", "json": {"info": {"author": "Wayne", "author_email": "wang121ye@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# pywayne: \u5f3a\u5927\u7684 Python \u5de5\u5177\u5e93 \u2728\n\npywayne \u662f\u4e00\u6b3e\u96c6\u6210\u591a\u79cd\u5b9e\u7528\u529f\u80fd\u7684\u5de5\u5177\u5e93\uff0c\u65e8\u5728\u4e3a Python \u4e0e C++ \u5f00\u53d1\u63d0\u4f9b\u5168\u9762\u652f\u6301\u3002\u65e0\u8bba\u4f60\u5728\u5904\u7406\u4fe1\u53f7\u3001\u6570\u636e\u7ed3\u6784\u3001\u6570\u5b66\u8fd0\u7b97\u3001\u56fe\u5f62\u53ef\u89c6\u5316\uff0c\u8fd8\u662f\u5728\u4e0e\u98de\u4e66\u673a\u5668\u4eba\u3001\u963f\u91cc\u4e91 OSS \u6216\u6587\u672c\u8f6c\u8bed\u97f3(TTS)\u7b49\u9886\u57df\u5de5\u4f5c\uff0cpywayne \u90fd\u80fd\u63d0\u4f9b\u4e00\u7ad9\u5f0f\u89e3\u51b3\u65b9\u6848\u3002\n\n## \u76ee\u5f55\n- [\u5feb\u901f\u5f00\u59cb](#\u5feb\u901f-\u5f00\u59cb)\n- [\u6838\u5fc3\u529f\u80fd](#\u6838\u5fc3\u529f\u80fd)\n- [\u6a21\u5757\u8be6\u60c5](#\u6a21\u5757\u8be6\u60c5)\n- [\u5b89\u88c5\u8bf4\u660e](#\u5b89\u88c5\u8bf4\u660e)\n- [\u6587\u6863](#\u6587\u6863)\n- [\u8054\u7cfb\u65b9\u5f0f](#\u8054\u7cfb\u65b9\u5f0f)\n- [\u8d21\u732e\u8bf4\u660e](#\u8d21\u732e\u8bf4\u660e)\n\n## \u5feb\u901f \u5f00\u59cb \ud83d\ude80\n1. \u5b89\u88c5 pywayne\uff1a\n   ```bash\n   pip install -U pywayne\n   ```\n2. \u5feb\u901f\u793a\u4f8b\uff1a\n   ```python\n   from pywayne.tools import list_all_files\n   files = list_all_files(\".\")\n   print(files)\n   ```\n\n## \u6838\u5fc3\u529f\u80fd \u2728\n- **\u5de5\u5177\u51fd\u6570**\uff1a\u63d0\u4f9b\u6587\u4ef6\u5904\u7406\u3001\u65e5\u5fd7\u8bb0\u5f55\u3001\u8ba1\u65f6\u5668\u3001\u5355\u4f8b\u6a21\u5f0f\u7b49\u5e38\u7528\u5de5\u5177\u3002\n- **\u4fe1\u53f7\u5904\u7406\uff08dsp\uff09**\uff1a\u5185\u7f6e Butterworth \u6ee4\u6ce2\u5668\u3001\u5c40\u90e8\u6781\u503c\u68c0\u6d4b\u3001DTW \u7b49\u591a\u79cd\u6570\u5b57\u4fe1\u53f7\u5904\u7406\u7b97\u6cd5\u3002\n- **\u56fe\u5f62\u7528\u6237\u754c\u9762\uff08gui\uff09**\uff1a\u652f\u6301\u70ed\u952e\u6ce8\u518c\u3001\u7a97\u53e3\u64cd\u4f5c\u3001\u9f20\u6807\u952e\u76d8\u81ea\u52a8\u5316\u64cd\u4f5c\uff0c\u52a9\u4f60\u8f7b\u677e\u5b9e\u73b0 GUI \u4ea4\u4e92\u3002\n- **\u6570\u5b66\u5de5\u5177\uff08maths\uff09**\uff1a\u5b9e\u73b0\u56e0\u6570\u5206\u89e3\u3001\u5feb\u901f\u4e58\u6cd5\uff08Karatsuba\uff09\u53ca\u5176\u4ed6\u6570\u5b66\u5b9e\u7528\u5de5\u5177\u3002\n- **\u6570\u636e\u7ed3\u6784**\uff1a\u5305\u62ec\u6761\u4ef6\u6811\u548c\u5e76\u67e5\u96c6\u5b9e\u73b0\uff0c\u4f18\u5316\u6570\u636e\u5b58\u50a8\u548c\u67e5\u8be2\u3002\n- **\u7ed8\u56fe\u5de5\u5177\uff08plot\uff09**\uff1a\u652f\u6301\u9891\u8c31\u56fe\u3001\u5b9a\u5236 Colormap \u7ed8\u56fe\u548c\u5176\u4ed6\u6570\u636e\u53ef\u89c6\u5316\u529f\u80fd\u3002\n- **\u59ff\u6001\u4e0e\u6821\u51c6\uff08ahrs, calibration\uff09**\uff1a\u5b9e\u73b0 SE3 \u8f6c\u6362\u3001\u56db\u5143\u6570\u5904\u7406\uff0c\u4ee5\u53ca\u65f6\u7a7a\u6570\u636e\u6821\u51c6\u3002\n- **\u98de\u4e66\u673a\u5668\u4eba\u53ca\u76d1\u542c**\uff1a\u6574\u5408 lark_custom_bot\u3001lark_bot \u548c lark_bot_listener \u6a21\u5757\uff0c\u5b9e\u73b0\u6587\u672c\u3001\u56fe\u7247\u3001\u6587\u4ef6\u7b49\u591a\u79cd\u6d88\u606f\u4ea4\u4e92\u3002\n- **\u6587\u672c\u8f6c\u8bed\u97f3\uff08tts\uff09**\uff1a\u751f\u6210 opus \u6216 MP3 \u683c\u5f0f\u8bed\u97f3\u6587\u4ef6\uff0c\u4e3a\u9879\u76ee\u589e\u6dfb\u8bed\u97f3\u64ad\u62a5\u529f\u80fd\u3002\n- **\u4e91\u5b58\u50a8\u652f\u6301\uff08aliyun_oss\uff09**\uff1a\u4e0e\u963f\u91cc\u4e91 OSS \u96c6\u6210\uff0c\u63d0\u4f9b\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u548c\u6279\u91cf\u64cd\u4f5c\u3002\n- **\u8f85\u52a9\u6a21\u5757\uff08helper\uff09**\uff1a\u5305\u542b\u914d\u7f6e\u7ba1\u7406\u4e0e\u5e38\u7528\u8f85\u52a9\u51fd\u6570\uff0c\u52a9\u529b\u9879\u76ee\u5f00\u53d1\u3002\n\n## \u6a21\u5757\u8be6\u60c5 \ud83d\udcda\n\n| \u6a21\u5757\u540d\u79f0             | \u4e3b\u8981\u529f\u80fd\u63cf\u8ff0                                                                   | Emoji  |\n| -------------------- | ------------------------------------------------------------------------------ | ------ |\n| **tools**            | \u5e38\u7528\u5de5\u5177\u51fd\u6570\uff1a\u6587\u4ef6\u64cd\u4f5c\u3001\u65e5\u5fd7\u8bb0\u5f55\u3001\u8ba1\u65f6\u5668\u3001\u5355\u4f8b\u6a21\u5f0f\u7b49                            | \ud83d\udee0\ufe0f     |\n| **dsp**              | \u4fe1\u53f7\u5904\u7406\u5de5\u5177\uff1a\u6ee4\u6ce2\u5668\u3001\u5c40\u90e8\u6781\u503c\u68c0\u6d4b\u3001\u52a8\u6001\u65f6\u95f4\u89c4\u6574 (DTW) \u7b49                        | \ud83d\udd0a     |\n| **gui**              | \u56fe\u5f62\u7528\u6237\u754c\u9762\u81ea\u52a8\u5316\uff1a\u70ed\u952e\u7ed1\u5b9a\u3001\u7a97\u53e3\u64cd\u4f5c\u3001\u9f20\u6807\u952e\u76d8\u63a7\u5236                               | \ud83d\udda5\ufe0f     |\n| **maths**            | \u6570\u5b66\u5de5\u5177\uff1a\u56e0\u6570\u5206\u89e3\u3001\u5361\u62c9\u695a\u5df4\u4e58\u6cd5\u3001\u5feb\u901f\u8ba1\u7b97\u7b49                                      | \u2795\u2796    |\n| **data_structure**   | \u6570\u636e\u7ed3\u6784\u5b9e\u73b0\uff1a\u6761\u4ef6\u6811\u3001\u5e76\u67e5\u96c6\u7b49                                                   | \ud83c\udf32     |\n| **plot**             | \u7ed8\u56fe\u5de5\u5177\uff1a\u9891\u8c31\u56fe\u3001\u5b9a\u5236 Colormap \u7ed8\u5236\u3001\u6570\u636e\u53ef\u89c6\u5316                                  | \ud83d\udcca     |\n| **ahrs**             | \u59ff\u6001\u4f30\u8ba1\uff1aSE3 \u4e0e pose \u8f6c\u6362\u3001\u59ff\u6001\u53ef\u89c6\u5316                                           | \ud83e\udded     |\n| **calibration**      | \u6821\u51c6\u5de5\u5177\uff1a\u65f6\u7a7a\u6570\u636e\u6821\u51c6\u4e0e\u5904\u7406                                                    | \ud83d\udd27     |\n| **lark_custom_bot**  | \u98de\u4e66\u81ea\u5b9a\u4e49\u673a\u5668\u4eba\uff1a\u652f\u6301\u591a\u79cd\u6d88\u606f\u7c7b\u578b\uff08\u6587\u672c\u3001\u56fe\u7247\u3001\u6587\u4ef6\uff09                             | \ud83e\udd16     |\n| **lark_bot**         | \u98de\u4e66\u673a\u5668\u4eba\u4ea4\u4e92\uff1a\u6587\u672c\u3001\u56fe\u7247\u3001\u6587\u4ef6\u6d88\u606f\u53d1\u9001                                         | \ud83d\udcac     |\n| **lark_bot_listener**| \u98de\u4e66\u6d88\u606f\u76d1\u542c\uff1a\u5b9e\u65f6\u76d1\u542c\u6587\u672c\u3001\u56fe\u7247\u3001\u6587\u4ef6\u6d88\u606f\u5e76\u5904\u7406                                   | \ud83d\udc42     |\n| **tts**              | \u6587\u672c\u8f6c\u8bed\u97f3\u5de5\u5177\uff1a\u751f\u6210 Opus \u6216 MP3 \u683c\u5f0f\u97f3\u9891                                       | \ud83d\udd08     |\n| **aliyun_oss**       | \u963f\u91cc\u4e91 OSS \u6587\u4ef6\u7ba1\u7406\uff1a\u6587\u4ef6\u4e0a\u4f20\u3001\u4e0b\u8f7d\u3001\u5220\u9664\u53ca\u76ee\u5f55\u64cd\u4f5c                                | \u2601\ufe0f     |\n| **helper**           | \u8f85\u52a9\u6a21\u5757\uff1a\u914d\u7f6e\u7ba1\u7406\u3001\u5e38\u7528\u8f85\u52a9\u51fd\u6570                                                 | \ud83e\uddf0     |\n\n## \u5b89\u88c5\u8bf4\u660e \ud83d\udd27\n\n\u5b89\u88c5\u65b9\u6cd5\u975e\u5e38\u7b80\u5355\uff1a\n\n```bash\npip install -U pywayne\n```\n\n\u82e5\u9700\u4e86\u89e3\u66f4\u591a\u5b89\u88c5\u7ec6\u8282\u53ca\u4f9d\u8d56\uff0c\u8bf7\u53c2\u9605 [requirements.txt](./requirements.txt) \u548c [setup.py](./setup.py)\u3002\n\n## \u6587\u6863 \ud83d\udcd6\n\n\u8be6\u7ec6\u6587\u6863\u8bf7\u8bbf\u95ee\uff1a\n\n[pywayne \u6587\u6863](https://wayne-algorithm-lib.readthedocs.io/)\n\n## \u8054\u7cfb\u65b9\u5f0f \ud83d\udcec\n\n\u5982\u679c\u5728\u4f7f\u7528\u8fc7\u7a0b\u4e2d\u9047\u5230\u95ee\u9898\uff0c\u6b22\u8fce\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u8054\u7cfb\uff1a\n\n- **\u90ae\u7bb1**\uff1a\n  - wang121ye@hotmail.com\n  - y-w22@mails.tsinghua.edu.cn\n- **\u4e2a\u4eba\u7f51\u7ad9**\uff1a\n  - [http://wangye.xin](http://wangye.xin)\n  - [http://cvllm.com](http://cvllm.com)\n- **LeetCode**\uff1a[http://leetcode.com/wangyehope](http://leetcode.com/wangyehope)\n- **GitHub**\uff1a[http://github.com/wangyendt](http://github.com/wangyendt)\n\n## \u8d21\u732e\u8bf4\u660e \ud83e\udd1d\n\n\u6b22\u8fce\u4f7f\u7528 pywayne\uff0c\u5e76\u63d0\u51fa Pull Request \u548c issue\uff01\n\u65e0\u8bba\u4f60\u662f\u5bf9\u73b0\u6709\u529f\u80fd\u7684\u6539\u8fdb\u5efa\u8bae\uff0c\u8fd8\u662f\u5e0c\u671b\u589e\u52a0\u65b0\u7684\u6a21\u5757\uff0c\u6211\u4eec\u90fd\u975e\u5e38\u6b22\u8fce\u4f60\u7684\u8d21\u732e\u3002\n\n---\n\n\u6211\u4eec\u5e0c\u671b pywayne \u80fd\u5728\u4f60\u7684\u9879\u76ee\u4e2d\u53d1\u6325\u91cd\u8981\u4f5c\u7528\uff0c\u5e26\u6765\u9ad8\u6548\u4e0e\u4fbf\u5229\uff01\n\nHappy coding! \ud83d\ude04\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "License-File", "Provides-Extra", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/wangyendt/wangye_algorithm_lib", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "pywayne", "package_url": "https://pypi.org/project/pywayne/", "platform": null, "project_url": "https://pypi.org/project/pywayne/", "project_urls": {"Homepage": "https://github.com/wangyendt/wangye_algorithm_lib"}, "provides_extra": ["full", "gui", "image", "aws", "data", "geo", "bot"], "release_url": "https://pypi.org/project/pywayne/1.0.1.4.6/", "requires_dist": ["ipdb", "natsort", "sortedcontainers", "tqdm", "numpy", "pandas", "matplotlib", "scipy", "configparser", "setuptools", "filelock", "pyyaml", "requests", "websockets", "python-dotenv", "easygui; extra == \"full\"", "h5py; extra == \"full\"", "pynput; extra == \"full\"", "pyperclip; extra == \"full\"", "seaborn; extra == \"full\"", "pillow; extra == \"full\"", "boto3; extra == \"full\"", "botocore; extra == \"full\"", "oss2; extra == \"full\"", "concave_hull; extra == \"full\"", "alphashape; extra == \"full\"", "shapely; extra == \"full\"", "gtts; extra == \"full\"", "lark_oapi; extra == \"full\"", "statsmodels; extra == \"full\"", "easygui; extra == \"gui\"", "pynput; extra == \"gui\"", "pillow; extra == \"image\"", "boto3; extra == \"aws\"", "botocore; extra == \"aws\"", "oss2; extra == \"aws\"", "h5py; extra == \"data\"", "seaborn; extra == \"data\"", "pyperclip; extra == \"data\"", "statsmodels; extra == \"data\"", "concave_hull; extra == \"geo\"", "alphashape; extra == \"geo\"", "shapely; extra == \"geo\"", "lark-oapi; extra == \"bot\"", "gtts; extra == \"bot\""], "requires_python": ">=3", "summary": "Some useful tools", "version": "1.0.1.4.6", "yanked": false, "yanked_reason": null}, "last_serial": 30394358, "urls": [{"comment_text": "", "digests": {"blake2b_256": "130b5743ef149bd1139d041c8b5e5675082a260b7930d1d9c054730b4b879859", "md5": "12e1acf3643ef70ed16ec1f95e9f2487", "sha256": "787586823a1949a474405e3dc2102c3276a3e28084e7b72287dd20cbc5ec5f02"}, "downloads": -1, "filename": "pywayne-1.0.1.4.6-py3-none-any.whl", "has_sig": false, "md5_digest": "12e1acf3643ef70ed16ec1f95e9f2487", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 162310, "upload_time": "2025-07-29T02:23:51", "upload_time_iso_8601": "2025-07-29T02:23:51.665837Z", "url": "https://files.pythonhosted.org/packages/13/0b/5743ef149bd1139d041c8b5e5675082a260b7930d1d9c054730b4b879859/pywayne-1.0.1.4.6-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "f535586bc08950d9eb8aa3018e81bf254e3489f2c12ef944a015208a9211938a", "md5": "25ea7ec315fa6672d7c19bfb6e7c48eb", "sha256": "fd97bf1125ca5fc16d27ae01e494a9366e1f35e37c6920530ad4238ce17e530f"}, "downloads": -1, "filename": "pywayne-1.0.1.4.6.tar.gz", "has_sig": false, "md5_digest": "25ea7ec315fa6672d7c19bfb6e7c48eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 143174, "upload_time": "2025-07-29T02:23:53", "upload_time_iso_8601": "2025-07-29T02:23:53.721453Z", "url": "https://files.pythonhosted.org/packages/f5/35/586bc08950d9eb8aa3018e81bf254e3489f2c12ef944a015208a9211938a/pywayne-1.0.1.4.6.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:23:08 GMT", "package": "phis-bin", "version": "2025.7.29.0", "json": {"info": {"author": null, "author_email": null, "bugtrack_url": null, "classifiers": [], "description": "# phis_bin\nbrowser binary files\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "phis-bin", "package_url": "https://pypi.org/project/phis-bin/", "platform": null, "project_url": "https://pypi.org/project/phis-bin/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/phis-bin/2025.7.29.0/", "requires_dist": null, "requires_python": ">=3.10", "summary": "browser binary files", "version": "2025.7.29.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394351, "urls": [{"comment_text": null, "digests": {"blake2b_256": "52c6dd63452a7373e358f36684bafbc79ec4100cd3331b383a588f77e4b0b31e", "md5": "8f2d8a16ba6f3e0250394db8af5cd648", "sha256": "32d6d43ff37f607a412b615e035ceb87996758b502f2f87ddc936d1866fffeff"}, "downloads": -1, "filename": "phis_bin-2025.7.29.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8f2d8a16ba6f3e0250394db8af5cd648", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.10", "size": 14894, "upload_time": "2025-07-29T02:23:08", "upload_time_iso_8601": "2025-07-29T02:23:08.479155Z", "url": "https://files.pythonhosted.org/packages/52/c6/dd63452a7373e358f36684bafbc79ec4100cd3331b383a588f77e4b0b31e/phis_bin-2025.7.29.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "95324afe10fe876d403c4380360aac6826ded002e2e063b1291d95fffa1b8eff", "md5": "de8817652de6091691bd7503f3280c16", "sha256": "cfe4c0612ca14976f8029d0cb501c062bd1cd639cd716245279951ba810d22ad"}, "downloads": -1, "filename": "phis_bin-2025.7.29.0.tar.gz", "has_sig": false, "md5_digest": "de8817652de6091691bd7503f3280c16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.10", "size": 15924, "upload_time": "2025-07-29T02:23:09", "upload_time_iso_8601": "2025-07-29T02:23:09.663540Z", "url": "https://files.pythonhosted.org/packages/95/32/4afe10fe876d403c4380360aac6826ded002e2e063b1291d95fffa1b8eff/phis_bin-2025.7.29.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:23:04 GMT", "package": "beta-cynosure", "version": "0.1.1", "json": {"info": {"author": null, "author_email": "Diego Silva Pinto <diegosilva@engineer.com>", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# beta-Cynosure\r\nAplica\u00e7\u00e3o para extrair dados Anuais e Trimestrais da CVM de todas as empresas\r\n\r\nEste projeto realiza o download e processamento automatizado das demonstra\u00e7\u00f5es financeiras da CVM (DFP e ITR) para companhias abertas no Brasil. \r\n\r\nEle foi o rascunho para a aplica\u00e7\u00e3o com AI para obten\u00e7\u00e3o, processamento, armazenamento, atualiza\u00e7\u00e3o e an\u00e1lise de dados.\r\n\r\n## Funcionalidade\r\nBaixa os dados anuais (DFP) e trimestrais (ITR) diretamente do portal da CVM.\r\n\r\nCalcula o n\u00famero de trimestre com base nas datas.\r\n\r\nGera dois arquivos CSV: um com dados anuais e outro com dados trimestrais.\r\n\r\n## Como usar\r\nInstalle a lib, use o comando b-cynosure acompanhado do ano de in\u00edcio - ano fim do per\u00edodo, exemplo:\r\n\r\n```\r\nb-cynosure 2020-2024\r\n```\r\n\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": null, "license": null, "license_expression": "MIT", "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "beta-cynosure", "package_url": "https://pypi.org/project/beta-cynosure/", "platform": null, "project_url": "https://pypi.org/project/beta-cynosure/", "project_urls": {"Source": "https://github.com/diehgosp/beta-cynosure"}, "provides_extra": null, "release_url": "https://pypi.org/project/beta-cynosure/0.1.1/", "requires_dist": ["pandas>=2.0.0", "requests>=2.25.0"], "requires_python": ">=3.8", "summary": "Extrator de dados financeiros da CVM (DFP e ITR) para todas as empresas", "version": "0.1.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394348, "urls": [{"comment_text": null, "digests": {"blake2b_256": "06f83159ad34b53e54cc8aa44a5eaf795250b97861df53e4cd4b320ee069c7ad", "md5": "1a2b14d5f72db74e859de583a26bce59", "sha256": "0e62ac15fd225b8e59231e4b7caecf96715658421e5df33389380e1d36e4b7e5"}, "downloads": -1, "filename": "beta_cynosure-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1a2b14d5f72db74e859de583a26bce59", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 6818, "upload_time": "2025-07-29T02:23:04", "upload_time_iso_8601": "2025-07-29T02:23:04.000295Z", "url": "https://files.pythonhosted.org/packages/06/f8/3159ad34b53e54cc8aa44a5eaf795250b97861df53e4cd4b320ee069c7ad/beta_cynosure-0.1.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "21e13e19d95dc502d2f42797cad1b788153fe0660403fba764cc5f99070944f6", "md5": "b3394db26f23c8348b1db6f8795f846a", "sha256": "02c321af917b2eef42d6dfe3fca297dd47f960ad52fdfc1f3ef7e78731e32ed3"}, "downloads": -1, "filename": "beta_cynosure-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b3394db26f23c8348b1db6f8795f846a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 4927, "upload_time": "2025-07-29T02:23:06", "upload_time_iso_8601": "2025-07-29T02:23:06.278003Z", "url": "https://files.pythonhosted.org/packages/21/e1/3e19d95dc502d2f42797cad1b788153fe0660403fba764cc5f99070944f6/beta_cynosure-0.1.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:23:00 GMT", "package": "wp-forge", "version": "1.1.1", "json": {"info": {"author": null, "author_email": "pizzalover125 <chessthinker600@gmail.com>", "bugtrack_url": null, "classifiers": [], "description": "# Wallpaper Forge\n\nWallpapers are boring. Not anymore.\n\nFeatures:\n\n- Weather, Time, and Quote widgets\n- Image filters\n- Available on Windows, macOS, and Linux\n- Gallery with awesome images\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "wp-forge", "package_url": "https://pypi.org/project/wp-forge/", "platform": null, "project_url": "https://pypi.org/project/wp-forge/", "project_urls": {"github": "https://github.com/pizzalover125/wallpaper-forge"}, "provides_extra": null, "release_url": "https://pypi.org/project/wp-forge/1.1.1/", "requires_dist": ["aiohappyeyeballs==2.6.1", "aiohttp==3.12.13", "aiosignal==1.3.2", "alembic==1.14.1", "altgraph==0.17.4", "annotated-types==0.7.0", "anyio==4.9.0", "appdirs==1.4.4", "attrs==25.3.0", "beautifulsoup4==4.13.4", "blinker==1.9.0", "bs4==0.0.2", "build==1.2.2.post1", "cachelib==0.13.0", "certifi==2025.1.31", "cffi==1.17.1", "charset-normalizer==3.4.1", "circup==2.2.2", "click==8.1.8", "cryptography==44.0.2", "Deprecated==1.2.18", "deprecation==2.1.0", "docutils==0.21.2", "easyeda2kicad==0.8.0", "Flask==3.0.0", "Flask-Assets==2.1.0", "flask-cors==6.0.1", "Flask-Login==0.6.3", "Flask-Migrate==4.1.0", "Flask-Session==0.8.0", "Flask-SQLAlchemy==3.1.1", "frozenlist==1.7.0", "glyph_media==0.0.1", "glyphsh==1.2.0", "gotrue==2.12.2", "gunicorn==23.0.0", "h11==0.16.0", "h2==4.2.0", "hpack==4.1.0", "httpcore==1.0.9", "httpx==0.28.1", "hyperframe==6.1.0", "id==1.5.0", "idna==3.10", "iniconfig==2.1.0", "itsdangerous==2.2.0", "jaraco.classes==3.4.0", "jaraco.context==6.0.1", "jaraco.functools==4.2.1", "Jinja2==3.1.5", "keyring==25.6.0", "linkify-it-py==2.0.3", "macholib==1.16.3", "Mako==1.3.9", "markdown-it-py==3.0.0", "MarkupSafe==3.0.2", "mdit-py-plugins==0.4.2", "mdurl==0.1.2", "modulegraph==0.19.6", "more-itertools==10.7.0", "msgspec==0.19.0", "multidict==6.5.1", "nh3==0.2.21", "numpy==2.3.2", "packaging==25.0", "pillow==11.3.0", "platformdirs==4.3.8", "pluggy==1.6.0", "postgrest==1.1.1", "prompt_toolkit==3.0.51", "propcache==0.3.2", "psycopg2-binary==2.9.9", "py2app==0.28.8", "pycparser==2.22", "pydantic==2.11.5", "pydantic_core==2.33.2", "PyGithub==2.1.1", "Pygments==2.19.2", "PyJWT==2.10.1", "PyNaCl==1.5.0", "pyproject_hooks==1.2.0", "PyQt6==6.9.1", "PyQt6-Qt6==6.9.1", "PyQt6_sip==13.10.2", "pytest==8.4.1", "pytest-mock==3.14.1", "python-dateutil==2.9.0.post0", "python-dotenv==1.0.0", "questionary==2.1.0", "readme_renderer==44.0", "realtime==2.5.2", "requests==2.31.0", "requests-toolbelt==1.0.0", "rfc3986==2.0.0", "rich==14.0.0", "semver==3.0.4", "setuptools==80.9.0", "six==1.17.0", "slack-sdk==3.26.1", "slugify==0.0.1", "sniffio==1.3.1", "soupsieve==2.7", "SQLAlchemy==2.0.38", "storage3==0.12.0", "StrEnum==0.4.15", "supabase==2.16.0", "supafunc==0.10.1", "textual==3.5.0", "textualize==0.1", "toml==0.10.2", "twine==6.1.0", "typing-inspection==0.4.1", "typing_extensions==4.14.0", "uc-micro-py==1.0.3", "update-checker==0.18.0", "urllib3==2.3.0", "wcwidth==0.2.13", "webassets==2.0", "websockets==15.0.1", "Werkzeug==3.1.3", "wheel==0.45.1", "wrapt==1.17.2", "yarl==1.20.1"], "requires_python": "<3.13,>=3.10", "summary": "Wallpapers are boring. Not anymore.", "version": "1.1.1", "yanked": false, "yanked_reason": null}, "last_serial": 30394345, "urls": [{"comment_text": null, "digests": {"blake2b_256": "04a893b2e835e567f5d5e42bfdb36a7f82eef53a66e040d535f5c7ce58918846", "md5": "5f5fdd2d95724d9cdf974ef03699434f", "sha256": "321a7870d29c9bdbd20914319ba11dafbfededc56c3ecf0254f65b61fda9cdda"}, "downloads": -1, "filename": "wp_forge-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5f5fdd2d95724d9cdf974ef03699434f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "<3.13,>=3.10", "size": 27379, "upload_time": "2025-07-29T02:23:00", "upload_time_iso_8601": "2025-07-29T02:23:00.053360Z", "url": "https://files.pythonhosted.org/packages/04/a8/93b2e835e567f5d5e42bfdb36a7f82eef53a66e040d535f5c7ce58918846/wp_forge-1.1.1-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "663d585392c566666faea7e444526e4253a8ff4cfe7b847841da7db9c7080c31", "md5": "be5e186ce58381a34b8e81a0c259f930", "sha256": "919d3cb11ed6412c4536e47ac3e06ddee111bf39ad813ba6d96e2b3832c62279"}, "downloads": -1, "filename": "wp_forge-1.1.1.tar.gz", "has_sig": false, "md5_digest": "be5e186ce58381a34b8e81a0c259f930", "packagetype": "sdist", "python_version": "source", "requires_python": "<3.13,>=3.10", "size": 30570, "upload_time": "2025-07-29T02:23:01", "upload_time_iso_8601": "2025-07-29T02:23:01.609078Z", "url": "https://files.pythonhosted.org/packages/66/3d/585392c566666faea7e444526e4253a8ff4cfe7b847841da7db9c7080c31/wp_forge-1.1.1.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:22:46 GMT", "package": "pyAgrum-nightly", "version": "2.2.0.9.dev202507291753652324", "json": {"info": {"author": "Pierre-Henri Wuillemin and Christophe Gonzales", "author_email": "info@agrum.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: C++", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "\npyAgrum\n=======\n\n``pyAgrum`` is a scientific C++ and Python library dedicated to Bayesian Networks and other Probabilistic Graphical Models. It provides a high-level interface to the part of aGrUM allowing to create, model, learn, use, calculate with and embed Bayesian Networks and other graphical models. Some specific (python and C++) codes are added in order to simplify and extend the ``aGrUM`` API.\n\nImportant\n=========\n\nSince pyAgrum 2.0.0, the package name follows PEP8 rules and is now ``pyagrum`` (lowercase). \nPlease use ``import pyagrum`` instead of ``import pyAgrum`` in your code.\n\nSee the `CHANGELOG <https://gitlab.com/agrumery/aGrUM/-/blob/master/CHANGELOG.md?ref_type=heads#changelog-for-200>`_  for more details.\n\nExample\n=======\n\n.. code:: python\n\n    import pyagrum as gum\n\n    # Creating BayesNet with 4 variables\n    bn=gum.BayesNet('WaterSprinkler')\n    print(bn)\n\n    # Adding nodes the long way\n    c=bn.add(gum.LabelizedVariable('c','cloudy ?',[\"Yes\",\"No\"]))\n    print(c)\n\n    # Adding nodes the short way\n    s, r, w = [ bn.add(name, 2) for name in \"srw\" ]\n    print (s,r,w)\n    print (bn)\n\n    # Addings arcs c -> s, c -> r, s -> w, r -> w\n    bn.addArc(c,s)\n    for link in [(c,r),(s,w),(r,w)]:\n    bn.addArc(*link)\n    print(bn)\n\n    # or, equivalenlty, creating the BN with 4 variables, and the arcs in one line\n    bn=gum.fastBN(\"w<-r<-c{Yes|No}->s->w\")\n\n    # Filling CPTs\n    bn.cpt(\"c\").fillWith([0.5,0.5])\n    bn.cpt(\"s\")[0,:]=0.5 # equivalent to [0.5,0.5]\n    bn.cpt(\"s\")[{\"c\":1}]=[0.9,0.1]\n    bn.cpt(\"w\")[0,0,:] = [1, 0] # r=0,s=0\n    bn.cpt(\"w\")[0,1,:] = [0.1, 0.9] # r=0,s=1\n    bn.cpt(\"w\")[{\"r\":1,\"s\":0}] = [0.1, 0.9] # r=1,s=0\n    bn.cpt(\"w\")[1,1,:] = [0.01, 0.99] # r=1,s=1\n    bn.cpt(\"r\")[{\"c\":0}]=[0.8,0.2]\n    bn.cpt(\"r\")[{\"c\":1}]=[0.2,0.8]\n\n    # Saving BN as a BIF file\n    gum.saveBN(bn,\"WaterSprinkler.bif\")\n\n    # Loading BN from a BIF file\n    bn2=gum.loadBN(\"WaterSprinkler.bif\")\n\n    # Inference\n    ie=gum.LazyPropagation(bn)\n    ie.makeInference()\n    print (ie.posterior(\"w\"))\n\n    # Adding hard evidence\n    ie.setEvidence({\"s\": 1, \"c\": 0})\n    ie.makeInference()\n    print(ie.posterior(\"w\"))\n\n    # Adding soft and hard evidence\n    ie.setEvidence({\"s\": [0.5, 1], \"c\": 0})\n    ie.makeInference()\n    print(ie.posterior(\"w\"))\n\nLICENSE\n=======\n\nCopyright (C) 2005-2024 by Pierre-Henri WUILLEMIN et Christophe GONZALES\n{prenom.nom}_at_lip6.fr\n\nThe aGrUM/pyAgrum library and all its derivatives are distributed under the dual LGPLv3+MIT license, see LICENSE.LGPL and LICENSE.MIT.\n\nYou can therefore integrate this library into your software solution but it will remain covered by either the LGPL v.3 license or the MIT license or, as aGrUM itself, by the dual LGPLv3+MIT license at your convenience.\nIf you wish to integrate the aGrUM library into your product without being affected by this license, please contact us (info@agrum.org).\n\nThis library depends on different third-party codes. See src/aGrUM/tools/externals for specific COPYING and explicit permission of\nthe authors, if needed.\n\nIf you use aGrUM/pyAgrum as a dependency of your own project, you are not contaminated by the GPL license of some of these third-party\ncodes as long as you use only their aGrUM/pyAgrum interfaces and not their native interfaces.\n\nAuthors\n=======\n\n-  Pierre-Henri Wuillemin\n-  Christophe Gonzales\n\nMaintainers\n===========\n\n- Lionel Torti\n- Gaspard Ducamp\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://agrum.gitlab.io/", "keywords": "probabilities probabilistic-graphical-models inference diagnosis", "license": null, "license_expression": "LGPL-3.0-only OR MIT", "license_files": null, "maintainer": null, "maintainer_email": null, "name": "pyAgrum-nightly", "package_url": "https://pypi.org/project/pyAgrum-nightly/", "platform": "any", "project_url": "https://pypi.org/project/pyAgrum-nightly/", "project_urls": {"Bug Tracker": "https://gitlab.com/agrumery/aGrUM/-/issues", "Documentation": "https://pyagrum.readthedocs.io/", "Homepage": "https://agrum.gitlab.io/", "Source Code": "https://gitlab.com/agrumery/aGrUM"}, "provides_extra": null, "release_url": "https://pypi.org/project/pyAgrum-nightly/2.2.0.9.dev202507291753652324/", "requires_dist": ["numpy", "matplotlib", "pydot"], "requires_python": ">=3.10", "summary": "Bayesian networks and other Probabilistic Graphical Models.", "version": "2.2.0.9.dev202507291753652324", "yanked": false, "yanked_reason": null}, "last_serial": 30394342, "urls": [{"comment_text": null, "digests": {"blake2b_256": "c6ca641e238d0b68b1fde49dae732eb9b20ea77ed03dc73cf81cb7152d5c56d2", "md5": "d601413efd4a29e91319360c108a316b", "sha256": "8a6afd156f6613ec2cd850cc3603ba6f46a9952539f9f5f77752c00c05b9aa34"}, "downloads": -1, "filename": "pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "d601413efd4a29e91319360c108a316b", "packagetype": "bdist_wheel", "python_version": "cp310", "requires_python": ">=3.10", "size": 4837553, "upload_time": "2025-07-29T02:22:46", "upload_time_iso_8601": "2025-07-29T02:22:46.452278Z", "url": "https://files.pythonhosted.org/packages/c6/ca/641e238d0b68b1fde49dae732eb9b20ea77ed03dc73cf81cb7152d5c56d2/pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-macosx_10_15_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "ae7b9845ec3240eac974be3dfcc8b6306949c8da4c4881434f91b3c80bc9db66", "md5": "0fe625aa325497bc6ccfdc0827a83bd9", "sha256": "6785cf388ccd0182637ed4ee5f5ae04506f0a7f8ab82eec551343ebfcc911bcf"}, "downloads": -1, "filename": "pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-macosx_11_0_arm64.whl", "has_sig": false, "md5_digest": "0fe625aa325497bc6ccfdc0827a83bd9", "packagetype": "bdist_wheel", "python_version": "cp310", "requires_python": ">=3.10", "size": 4331410, "upload_time": "2025-07-29T02:22:49", "upload_time_iso_8601": "2025-07-29T02:22:49.786162Z", "url": "https://files.pythonhosted.org/packages/ae/7b/9845ec3240eac974be3dfcc8b6306949c8da4c4881434f91b3c80bc9db66/pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-macosx_11_0_arm64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "69d2573b9a05989e27688d01a00ef4f930f8223de2d8070f2787b14dd247a5ab", "md5": "540879c2c62cdef99d78afba66ded161", "sha256": "8b44e2c3bb72cc41facaa6a964cfaf0791d7ea73b4accfe820f06ac5991f0f21"}, "downloads": -1, "filename": "pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-manylinux2014_aarch64.whl", "has_sig": false, "md5_digest": "540879c2c62cdef99d78afba66ded161", "packagetype": "bdist_wheel", "python_version": "cp310", "requires_python": ">=3.10", "size": 5711927, "upload_time": "2025-07-29T02:22:51", "upload_time_iso_8601": "2025-07-29T02:22:51.785946Z", "url": "https://files.pythonhosted.org/packages/69/d2/573b9a05989e27688d01a00ef4f930f8223de2d8070f2787b14dd247a5ab/pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-manylinux2014_aarch64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "09d2e0442b48e28371a9babeaf759aeb0630a805665ed1e45aa9fa2fa418d4ab", "md5": "9cee991cd2af205fe76e60b97d7d7343", "sha256": "4f5ebe8d7e553edec3f358dc56efbf6cda3bfe0a73fecd6cb6eeb0e06f0576b7"}, "downloads": -1, "filename": "pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-manylinux2014_x86_64.whl", "has_sig": false, "md5_digest": "9cee991cd2af205fe76e60b97d7d7343", "packagetype": "bdist_wheel", "python_version": "cp310", "requires_python": ">=3.10", "size": 6172247, "upload_time": "2025-07-29T02:22:53", "upload_time_iso_8601": "2025-07-29T02:22:53.846077Z", "url": "https://files.pythonhosted.org/packages/09/d2/e0442b48e28371a9babeaf759aeb0630a805665ed1e45aa9fa2fa418d4ab/pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-manylinux2014_x86_64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "02d00cabdb4062fc9ed0ff68f77e4f1064665c4fbbc2879ab74ba8f651ff731e", "md5": "29cf37bd6a10d00bf72616ec02374fe0", "sha256": "2705c46abee0b8a3b3ce7da17609f053e539f555e6e6d369cf2d983cdbce7188"}, "downloads": -1, "filename": "pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-win_amd64.whl", "has_sig": false, "md5_digest": "29cf37bd6a10d00bf72616ec02374fe0", "packagetype": "bdist_wheel", "python_version": "cp310", "requires_python": ">=3.10", "size": 2931801, "upload_time": "2025-07-29T02:22:55", "upload_time_iso_8601": "2025-07-29T02:22:55.429239Z", "url": "https://files.pythonhosted.org/packages/02/d0/0cabdb4062fc9ed0ff68f77e4f1064665c4fbbc2879ab74ba8f651ff731e/pyagrum_nightly-2.2.0.9.dev202507291753652324-cp310-abi3-win_amd64.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:22:22 GMT", "package": "maxim-py", "version": "3.9.13", "json": {"info": {"author": null, "author_email": "Maxim Engineering <eng@getmaxim.ai>", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python :: 3"], "description": "# Maxim SDK\n\n<div style=\"display: flex; justify-content: center; align-items: center;margin-bottom:20px;\">\n<img src=\"https://cdn.getmaxim.ai/third-party/sdk.png\">\n</div>\n\nThis is Python SDK for enabling Maxim observability. [Maxim](https://www.getmaxim.ai?ref=npm) is an enterprise grade evaluation and observability platform.\n\n## How to integrate\n\n### Install\n\n```\npip install maxim-py\n```\n\n### Documentation\n\nYou can find detailed documentation and available integrations [here](https://www.getmaxim.ai/docs/sdk/python/overview).\n\n### Cookbook\n\nSee [cookbook/agno_agent.py](cookbook/agno_agent.py) for an example of tracing an Agno agent.\n\n#### Langchain module compatibility\n\n|                                                             | Anthropic | Bedrock Anthropic | Bedrock Meta | OpenAI | Azure                                        |\n| ----------------------------------------------------------- | --------- | ----------------- | ------------ | ------ | -------------------------------------------- |\n| Chat (0.3.x)                                                | \u2705        | \u2705                | \u2705           | \u2705     | \u2705                                           |\n| Chat (0.1.x)                                                | \u2705        | \u2705                | \u2705           | \u2705     | \u2705                                           |\n| Tool call (0.3.x)                                           | \u2705        | \u2705                | \u2753           | \u2705     | \u2705                                           |\n| Tool call (0.1.x)                                           | \u2705        | \u2705                | \u2705           | \u2705     | \u2705                                           |\n| Chain (via LLM) (0.3.x)                                     | \u2705        | \u2705                | \u2705           | \u2705     | \u2705                                           |\n| Chain (via LLM) (0.1.x)                                     | \u2705        | \u2705                | \u2705           | \u2705     | \u2705                                           |\n| Streaming (0.3.x)                                           | \u2705        | \u2705                | \u2705           | \u2705     | \u2733\ufe0f Token usage is not supported by Langchain |\n| Streaming (0.1.x) Token usage is not supported by Langchain | \u2733\ufe0f        | \u2733\ufe0f                | \u2733\ufe0f           | \u2733\ufe0f     | \u2733\ufe0f                                           |\n| Agent (0.3.x)                                               | \u26d4\ufe0f       | \u26d4\ufe0f               | \u26d4\ufe0f          | \u26d4\ufe0f    | \u26d4\ufe0f                                          |\n| Agent (0.1.x)                                               | \u26d4\ufe0f       | \u26d4\ufe0f               | \u26d4\ufe0f          | \u26d4\ufe0f    | \u26d4\ufe0f                                          |\n\n> Please reach out to us if you need support for any other package + provider + classes.\n\n### Litellm\n\n| completion | acompletion | fallback | Prompt Management |\n| ---------- | ----------- | -------- | ----------------- |\n| \u2705         | \u2705          | \u26d4\ufe0f      | \u26d4\ufe0f               |\n\n\n### LiveKit (Alpha)\n\n| Provider | Audio | ToolCalls | Video | \n| ---------- | ---------- | ----------- | -------- \n| OpenAI (RealtimeAPI)  | \u2705         | \u26d4\ufe0f          | \u26d4\ufe0f      \n| Gemini (RealtimeAPI)  | \u2705         | \u26d4\ufe0f          | \u26d4\ufe0f      \n\n\n# Setting up this repository\n\n1. Clone [this](https://github.com/maximhq/maxim-py) repository.\n2. Make sure you have installed [uv](https://docs.astral.sh/uv/) on your computer.\n3. Run `uv sync`.\n\n## Version changelog\n\n### 3.9.13\n\n- fix: Fixes tool call parsing for streaming\n- fix: Some minor fixes in OpenAI, Fireworks wrappers.\n\n### 3.9.12\n\n- feat: Adds one line integration for Fireworks Build SDK\n\n### 3.9.11\n\n- feat: Adds support for PROMPT_TYPE_CUSTOM for langchain\n\n### 3.9.10\n\n- fix: removes signal handlers from the package.\n\n### 3.9.9\n\n- feat: Adds one line integration for Together AI SDK\n- feat: Adds one line integration for Groq SDK\n- feat: Adds sink support for logger to write to multiple repos.\n\n### 3.9.8\n\n- feat: Adds one line integration for tracing Agno agents.\n\n### 3.9.7\n\n- improvement: Adds support for uploading large payloads as part of logs.\n\n### 3.9.6\n\n- improvement: Increased connection pool max size to 20 for more connections at high throughput. \n- improvement: Moves network stack from requests to httpx for better stability\n\n### 3.9.5\n\n- feat: Adds new query type for querying prompts, prompt chains and folders called mutli-select. [Learn more](https://www.getmaxim.ai/docs/offline-evals/via-sdk/prompts/querying-prompts#querying-a-single-prompt).\n\n### 3.9.4\n\n- chore: Changed scribe (Maxim Logger) default level to warning.\n\n### 3.9.3\n\n- improvement: Adds try except for all LiveKit callbacks call and gracefully moves forward with tracing.\n\n### 3.9.2\n\n- improvement: Improves the network connection error handling for connection pool.\n\n### 3.9.1\n\n- fix: Fixes `enable_prompt_management` method bug. \n\n### 3.9.0\n\n- fix: Some minor fixes in Maxim log repo checks, Anthropic client and Gemini client\n- feat: Improved memory management and better interrupt detection for LiveKit + Gemini.\n- feat: LiveKit + Tool call support is live.\n- feat: LiveKit support is now in beta (up from Alpha).\n\n### 3.8.5\n\n- chore: Adds session_id and room_id \n\n### 3.8.4\n\n- fix: Fixes gemini + langchain integration to capture None finish_reason and usage_metadata\n\n### 3.8.3\n\n- fix: Fixes chunk and chat auto-tracing for gemini client\n\n### 3.8.2\n\n- feat: Adds one line integration for Portkey AI\n- fix: Fixes tool call parsing for OpenAI one line integration.\n- feat: Adds auto attachment parsing for vision models\n- fix: Exposes YieldedOutputTokens and YieldedOutputCost classes\n\n### 3.8.1\n\n- feat: Adds files support for test_runs\n- feat: Adds mistral tracing support\n\n### 3.8.0\n\n- breaking change: We have renamed a few entities used in test runs.\n\n### 3.7.3\n\n- chore: Updates default log level of scribe to debug\n\n### 3.7.2\n\n- feat: LiveKit support for Google and OpenAI\n- chore: improvements in crewai logging integration\n- chore: deprecated span.output() method removed\n- feat: LiveKit one line integration (alpha)\n\n### 3.7.1\n- fix: Signal registration only happens if the current thread is main thread\n\n### 3.7.0\n\n- feat: Prompt, PromptVersionConfig, and RunnablePrompt now expose a `provider` field to indicate the LLM provider (e.g., 'openai', 'anthropic').\n- improvement: Maxim SDK listens for `atexit` and termination signals, and triggers cleanup automatically\n\n### 3.6.4\n\n- chore: crewai python 3.9+ support\n\n### 3.6.3\n\n- fix: now reports metadata errors silently\n- fix: minor fixes to crew-ai instrumentation\n\n### 3.6.2\n\n- fix: minor version check fixes.\n\n### 3.6.1\n\n- feat: crew-ai intercept\n- fix: trace tag fixes for langchain\n\n### 3.6.0\n\n- feat: Adds attachment support (beta): [Read more](https://www.getmaxim.ai/docs/observe/how-to/log-your-application/add-attachments)\n\n### 3.5.8\n\n- fix: Fixes anthropic one line integration\n- chore: Fixes anthropic messages parsing for streaming client\n\n### 3.5.7\n\n- chore: Added extra guards for lang-graph evaluation config.\n\n### 3.5.6\n\n- chore: Adds new Maxim SDK level logger. You can set specific level for Maxim SDK by `logging.getLogger('maxim').setLevel(logging.DEBUG)`\n- fix: minor cleanups on Langchain tracer.\n\n### 3.5.5\n\n- feat: adds special handling for apps running on AWS lambda. As runtime execution is unpredictable, logger.flush() now pushes logs immediately vs submitting to a thread pool worker.\n- chore: all logs emitted form the SDK now has [MaximSDK] prefix.\n\n### 3.5.4\n\n- fix: adds special handling when langchain streaming response handler raises an exception in user-land.\n\n### 3.5.3\n\n- fix: fixes empty cache issue for prompt management\n\n### 3.5.2 (\ud83d\udca5 Yanked)\n\n- chore: adds max limit to the commit log queue size\n- chore: auto flush when the writer level max in memory message size reaches\n- chore: adds global container list for langchain tracer to use it across multiple instances\n\n### 3.5.1 (\ud83d\udca5 Yanked)\n\n- chore: adds custom trace-id support for MaximOpenAIClient\n\n### 3.5.0 (\ud83d\udca5 Yanked)\n\n- feat: adds error component\n- deprecate: old Config classes - now all logging constructs support TypedDict\n- feat: adds one line integration for OpenAI\n- fix: fixes agents import in OpenAI SDK\n\n### 3.4.17\n\n- fix: fixes langchain callback tracer\n\n### 3.4.16\n\n- chore: adds support to wrap LiteLLMProxy tracer for docker deployments\n\n### 3.4.15\n\n- feat: adds new MaximLiteLLMProxyTracer file for LitellmProxy logger\n\n### 3.4.14 (\ud83d\udca5 Yanked)\n\n- feat: adds new MaximLiteLLMProxyTracer file for LitellmProxy logger\n\n### 3.4.13\n\n- chore: adds ID validation on client side.\n\n### 3.4.12\n\n- feat: adds support for bedrock client\n\n### 3.4.11\n\n- chore: Some minor bugfixes for langhchain handler (its them not us)\n- fix: handles some network level exceptions during connection resets.\n\n### 3.4.10\n\n- feat: OpenAI agents tracing out of beta. And we are also on OpenAI docs -\n\n### 3.4.9\n\n- feat: adds support for running test runs using prompt chains\n\n### 3.4.8\n\n- fix: fixes testruns using dataset, and runs using local workflows.\n\n### 3.4.7 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- fix: fixes incorrect import for TypedDict\n\n### 3.4.6 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- feat: openai-agents adds session support, adds error support for llm calls\n\n### 3.4.5 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- feat: OpenAI agents tracing support (beta)\n\n### 3.4.4 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- feat: Generation messages adds support for dicts\n\n### 3.4.3 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- fix: Handles optional PromptResponse fields gracefully.\n\n### 3.4.2 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- feat: Adds support for prompt and prompt chain run\n\n### 3.4.1 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- fix: Resolved duplicate serialization of metadata entries\n\n### 3.4.0 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- Breaking change: Prompt and Prompt chain object properties are now with snake cases\n- fix: Prompt chain nodes are properly parsed in all cases\n\n### 3.3.9 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- fix: fixes litellm pre_api_call message parsing\n\n### v3.3.8 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- fix: updates create test run api to use v2 api\n\n### v3.3.7 (\ud83d\udea7 Yanked: In favor of broken test-runs via SDK)\n\n- fix: handles marking test run as failed if the test run raises error at any point after creating it on the platform.\n- feat: adds support for `context_to_evaluate` in `with_prompt_version_id` and `with_workflow_id` (by passing it as the second parameter) to be able to choose whichever variable or dataset column to use as context to evaluate, as opposed to only having the dataset column as context through the `CONTEXT_TO_EVALUATE` datastructure mapping.\n\n### v3.3.6\n\n- fix: fixes garbled message formatting when invalid testrun config is passed to the TestRunBuilder\n\n### v3.3.5\n\n- chore: now sdk propagates system errors in formatted structures (specifically for test runs)\n\n### v3.3.4\n\n- fix: add missing deps in the requirement\n\n### v3.3.3\n\n- chore: minor bug fixes\n\n### v3.3.2\n\n- feat: adds support for gemini outputs\n- feat: adds local evaluator support for test runs\n\n### v3.3.1\n\n- chore: Litellm failure exceptions will be sent to the default logger.\n\n### v3.3.0\n\n- feat: Adds litellm support (Beta)\n\n### v3.2.3\n\n- fix: Fixes duplicate container ids for langchain tracer\n\n### v3.2.2\n\n- fix: Langgraph capture fixes\n- chore: Adds missing docstrings\n\n### v3.2.1\n\n- fix: Adds support for dict as an output to yields_output function during test runs.\n\n### v3.2.0\n\n- fix: Fixed dependency issues\n\n### v3.1.0 (\ud83d\udea7 Yanked)\n\n- feat: Adds new flow to trigger test runs via Python SDK\n- fix: Minor bug fixes\n\n### v3.0.1 [Breaking changes](https://www.getmaxim.ai/docs/sdk/upgrading-to-v3)\n\n- beta release\n- feat: New decorators support for tracing, langchain and langgraph\n\n### v3.0.0rc6\n\n- feat: Adds new decorator for langgraph. @langgraph_agent\n- feat: Adds support for chains in langchain tracer\n- fix: Some minor bug fixes\n\n### v3.0.0rc5\n\n- chore: Keeps logger till function call context is present\n\n### v3.0.0rc4\n\n- fix: Fixes automatic retrieval capture from vector dbs\n\n### v3.0.0rc3\n\n- fix: Fixes langchain_llm_call to handle chat models\n\n### v3.0.0rc2\n\n- fix: Minor bug fixes\n\n### v3.0.0rc1\n\n- Check [upgrade steps](https://www.getmaxim.ai/docs/sdk/upgrading-to-v3)\n- feat: Adds new decorators flow to simplify tracing\n- chore: apiKey and baseUrl parameters in MaximConfig are now api_key and base_url respectively.\n\n### v2.0.0 (Breaking changes)\n\n- feat: Jinja 2.0 variables support\n\n### v1.5.13\n\n- fix: Fixes issue where model was None for some prompt versions.\n\n### v1.5.12\n\n- fix: Fixes edge case of race condition while fetching prompts, prompt chains and folders.\n\n### v1.5.11\n\n- fix: Fixes import of dataclasse\n\n### v1.5.10\n\n- feat: Adds new config called `raise_exceptions`. Unless this is set to `True`, the SDK will not raise any exceptions.\n\n### v1.5.9\n\n- Chore - Removes raising alert when repo not found\n\n### v1.5.8\n\n- fix - Removes a no-op command for retrieval\n- fix - Fixes retrieval output command\n\n### v1.5.7\n\n- feat - Supports 0.1.x langchain\n\n### v1.5.6\n\n- chore - Improved langchain support\n\n### v1.5.5\n\n- chore - Improves cleanups for log writer for quick returns.\n\n### v1.5.4\n\n- chore - Improved fs access checks.\n- chore - Fixes threading locks for periodic syncs in Python3.9\n\n### v1.5.3\n\n- chore - Adds lambda env support for SDK with no access to filesystem.\n\n### v1.5.2\n\n- feat - Adds support to new langchain_openai.AzureChatOpenAI class in langchain tracer\n\n### v1.5.1\n\n- fix - Adds Python 3.9 compatibility\n\n### v1.5.0\n\n- chore - Updates connection pool to use session that enforces re-connects before making API calls.\n\n### v1.4.5\n\n- chore - Adds backoff retries to failed REST calls.\n\n### v1.4.4\n\n- chore - langchain becomes optional dependency\n\n### v1.4.3\n\n- fix - connection pooling for network calls.\n- fix - connection close issue.\n\n### v1.4.2 (\ud83d\udea7 Yanked)\n\n- fix - connection close issue\n\n### v1.4.1\n\n- Adds validation for provider in generation\n\n### v1.4.0\n\n- Now generation.result accepts\n  - OpenAI chat completion object\n  - Azure OpenAI chat completion object\n  - Langchain LLMResult, AIMessage object\n\n### v1.3.4\n\n- fix: Fixes message_parser\n\n### v1.3.2\n\n- fix: Fixes utility function for langchain to parse AIMessage into Maxim logger completion result\n\n### v1.3.1\n\n- feat: Adds tool call parsing support for Langchain tracer\n\n### v1.3.0\n\n- feat: Adds support for ChatCompletion in generations\n- feat: Adds type safety for retrieval results\n\n### v1.2.7\n\n- fix: Bug fix where input sent with trace.config was getting overridden with None\n\n### v1.2.6\n\n- chore: Adds `trace.set_input` and `trace.set_output` methods to control what to show in logs dashboard\n\n### v1.2.5\n\n- chore: Removes one no_op command while creating spans\n- fix: Minor bug fixes\n\n### v1.2.1\n\n- fix: Fixed MaximLangchainTracer error logging flow.\n\n### v1.2.0\n\n- feat: Adds langchain support\n- chore: Adds local parsers to validate payloads on client side\n\n### v1.1.0\n\n- fix: Minor bug fixes around log writer cleanup\n\n### v1.0.0\n\n- Public release\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": "python, prompts, logs, workflow, testing", "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "maxim-py", "package_url": "https://pypi.org/project/maxim-py/", "platform": null, "project_url": "https://pypi.org/project/maxim-py/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/maxim-py/3.9.13/", "requires_dist": ["typing-extensions", "filetype", "httpx>=0.28.1"], "requires_python": ">=3.9.20", "summary": "A package that allows you to use the Maxim Python Library to interact with the Maxim Platform.", "version": "3.9.13", "yanked": false, "yanked_reason": null}, "last_serial": 30394335, "urls": [{"comment_text": "", "digests": {"blake2b_256": "8b1ab5192527402b19fea15304563f2f2664271eff7cae02d714ea093946811f", "md5": "5087479eb89c60de59d4d6b3d6e1a482", "sha256": "27887c90c814615b4a0852d201f425aebf14c89cfa05153fbb3194c0bad2009a"}, "downloads": -1, "filename": "maxim_py-3.9.13-py3-none-any.whl", "has_sig": false, "md5_digest": "5087479eb89c60de59d4d6b3d6e1a482", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.9.20", "size": 234481, "upload_time": "2025-07-29T02:22:22", "upload_time_iso_8601": "2025-07-29T02:22:22.297434Z", "url": "https://files.pythonhosted.org/packages/8b/1a/b5192527402b19fea15304563f2f2664271eff7cae02d714ea093946811f/maxim_py-3.9.13-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "39ab0d26bee3bf8a3ad1768b5599e9a012e866bc7a4dd669393b735275674c83", "md5": "d40563865122b49608ee7a28ebf68253", "sha256": "8185707ebfff8a9f784e8eef02d69c8fd1d3d63b38652be86a8bb1942661fb0d"}, "downloads": -1, "filename": "maxim_py-3.9.13.tar.gz", "has_sig": false, "md5_digest": "d40563865122b49608ee7a28ebf68253", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9.20", "size": 182857, "upload_time": "2025-07-29T02:22:24", "upload_time_iso_8601": "2025-07-29T02:22:24.146011Z", "url": "https://files.pythonhosted.org/packages/39/ab/0d26bee3bf8a3ad1768b5599e9a012e866bc7a4dd669393b735275674c83/maxim_py-3.9.13.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:22:21 GMT", "package": "instaspy-pip", "version": "1.0", "json": {"info": {"author": "spyboy", "author_email": "spyboy.co@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/IM-SPYBOY/instaspy", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "instaspy-pip", "package_url": "https://pypi.org/project/instaspy-pip/", "platform": null, "project_url": "https://pypi.org/project/instaspy-pip/", "project_urls": {"Homepage": "https://github.com/IM-SPYBOY/instaspy"}, "provides_extra": null, "release_url": "https://pypi.org/project/instaspy-pip/1.0/", "requires_dist": ["requests", "instagrapi", "googlesearch-python", "colorama", "termcolor"], "requires_python": ">=3.6", "summary": "A tool to fetch Instagram user data and media.", "version": "1.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394334, "urls": [{"comment_text": null, "digests": {"blake2b_256": "fba08d70aacae62a591258c85cf24f9b0fea2babf5a4e12b9aab01c8311efd74", "md5": "2a385b393970e9034378613799b3e214", "sha256": "7ff8a9e8a7e4d066bd38fe657369fa7d312c21d4ea41658a5cae14df223a2e98"}, "downloads": -1, "filename": "instaspy_pip-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2a385b393970e9034378613799b3e214", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7232, "upload_time": "2025-07-29T02:22:21", "upload_time_iso_8601": "2025-07-29T02:22:21.506927Z", "url": "https://files.pythonhosted.org/packages/fb/a0/8d70aacae62a591258c85cf24f9b0fea2babf5a4e12b9aab01c8311efd74/instaspy_pip-1.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "e14cfb7ab1d101401899ebd8d12964b2319f1540f615d4ce3b0ebc6eb57367a4", "md5": "858c1f2065d4ad1bfb49fbf96ef59501", "sha256": "862d87adfd69ab7ba6ae52e1bb9a7811688a228eac9a3ff3c3377895325f69c0"}, "downloads": -1, "filename": "instaspy-pip-1.0.tar.gz", "has_sig": false, "md5_digest": "858c1f2065d4ad1bfb49fbf96ef59501", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8107, "upload_time": "2025-07-29T02:22:22", "upload_time_iso_8601": "2025-07-29T02:22:22.973030Z", "url": "https://files.pythonhosted.org/packages/e1/4c/fb7ab1d101401899ebd8d12964b2319f1540f615d4ce3b0ebc6eb57367a4/instaspy-pip-1.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:22:16 GMT", "package": "rtta", "version": "0.1.6", "json": {"info": {"author": null, "author_email": "Adam DePrince <adam.deprince@gmail.com>", "bugtrack_url": null, "classifiers": [], "description": "RTTA\n======================\n\nPurpose\n-------\n\nThe purpose of this package is to implement a very low latency\nincremental technical analysis toolkit.  Most technical analysis\ntool-kits work in a \"batch mode\" where you hand them a blob of data and\nin a pandas series and they return a series with the computed data.\nIncremental updates for these require O(n) work.  There is one tool,\n[talipp](https://pypi.org/project/talipp/) that is designed to support\nincremental updates, but it is implemented in pure python and is a\nlittle more than an order of magnitude slower than rtta.  On a 5995WX\ntalipp's exponential moving average requires 465ns; rtta's requires\n36ns.  A bare python function call requires 35ns, so we're about as\nfast as fast can be.\n\nInstallation\n------------\n\n\n```bash\npip install rtta\n```\n\nUsage\n-----\n\nEach operator has a paramater fillna.  If set to false, nan values\nwill be returned until the operation is \"populated\".  If set to true,\nbest guesses will be returned until the operation is populated.\n\nSo for example, our simple moving average `SMAIndicator` works sort of like this:\n\n```python\n>>> import rtta.trend as trend\n>>> sma = trend.SMAIndicator(window=4, fillna=True)\n>>> sma.update(1)\n1\n>>> sma.update(2)\n1.5\n>>> sma.update(3)\n2\n>>> sma.update(2)\n2\n>>> sma.update(2)\n2.25 <- The 1 fell off the end of the sliding window\n```\n\nPerformance\n-----------\n\n|Indicator | Latency |\n|----------|---------|\n| SMA      | 36ns    |\n| EMA      | 36ns    |\n| MACD     | 55ns    |", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "rtta", "package_url": "https://pypi.org/project/rtta/", "platform": null, "project_url": "https://pypi.org/project/rtta/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/rtta/0.1.6/", "requires_dist": ["numpy>=2.0.2"], "requires_python": ">=3.9.8", "summary": "Low latency incremental technical analysis", "version": "0.1.6", "yanked": false, "yanked_reason": null}, "last_serial": 30394456, "urls": [{"comment_text": null, "digests": {"blake2b_256": "ee64e3c8ffae0d978f16fe3e8af5446a9d551f70f4764111fb1e3cdc510d88a2", "md5": "66d850f034debbaf74496de54e7df896", "sha256": "c39c9c348f60244fabc36d8f4bbfb12747d2c23da4bb9465579f8375fb09fdb0"}, "downloads": -1, "filename": "rtta-0.1.6.tar.gz", "has_sig": false, "md5_digest": "66d850f034debbaf74496de54e7df896", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9.8", "size": 32095, "upload_time": "2025-07-29T02:22:16", "upload_time_iso_8601": "2025-07-29T02:22:16.088527Z", "url": "https://files.pythonhosted.org/packages/ee/64/e3c8ffae0d978f16fe3e8af5446a9d551f70f4764111fb1e3cdc510d88a2/rtta-0.1.6.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:22:10 GMT", "package": "maya-zen-tools", "version": "0.1.83", "json": {"info": {"author": null, "author_email": "david@belais.me", "bugtrack_url": null, "classifiers": [], "description": "# ZenTools for Maya\n\n[![test](https://github.com/enorganic/maya-zen-tools/actions/workflows/test.yml/badge.svg?branch=main)](https://github.com/enorganic/maya-zen-tools/actions/workflows/test.yml)\n[![docs](https://github.com/enorganic/maya-zen-tools/actions/workflows/docs.yml/badge.svg?branch=main)](https://github.com/enorganic/maya-zen-tools/actions/workflows/docs.yml)\n[![PyPI version](https://badge.fury.io/py/maya-zen-tools.svg?icon=si%3Apython)](https://badge.fury.io/py/maya-zen-tools)\n\nZenTools for Maya is a set of modeling tools for manipulating a polygon mesh\nusing dynamically created NURBS curves and surfaces to distribute vertices\nand/or UVs, plus some selection tools to complement the workflow.\n\n- [Documentation](https://maya-zen-tools.enorganic.org)\n- [Contributing](https://maya-zen-tools.enorganic.org/contributing) (to the development of this package)\n\n![ZenTools for Maya Demo](https://maya-zen-tools.enorganic.org/assets/images/maya-zen-tools-demo.gif)\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": "autodesk, maya, zen-tools", "license": null, "license_expression": "MIT", "license_files": null, "maintainer": null, "maintainer_email": null, "name": "maya-zen-tools", "package_url": "https://pypi.org/project/maya-zen-tools/", "platform": null, "project_url": "https://pypi.org/project/maya-zen-tools/", "project_urls": {"Repository": "https://github.com/enorganic/maya-zen-tools"}, "provides_extra": null, "release_url": "https://pypi.org/project/maya-zen-tools/0.1.83/", "requires_dist": ["more-itertools~=10.7", "platformdirs~=4.3"], "requires_python": "~=3.8", "summary": "Zen Tools for Maya", "version": "0.1.83", "yanked": false, "yanked_reason": null}, "last_serial": 30394327, "urls": [{"comment_text": null, "digests": {"blake2b_256": "2e3594fb0b246f7c0b34e25755f8d338711584621742db3c202f692c3cffe1da", "md5": "bee747391b920bd2dc4545e88606165b", "sha256": "bbdfa5f29a78134ea1cc8c232a22a030748076d953a86779d96edc6f7b52b18c"}, "downloads": -1, "filename": "maya_zen_tools-0.1.83-py3-none-any.whl", "has_sig": false, "md5_digest": "bee747391b920bd2dc4545e88606165b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.8", "size": 38140, "upload_time": "2025-07-29T02:22:10", "upload_time_iso_8601": "2025-07-29T02:22:10.474011Z", "url": "https://files.pythonhosted.org/packages/2e/35/94fb0b246f7c0b34e25755f8d338711584621742db3c202f692c3cffe1da/maya_zen_tools-0.1.83-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "0c22b9ecdb05aa01ce185f9f0a1c29f563f90756811fba25408e6121907c9939", "md5": "04d9770eacb53d48806d85e565b219eb", "sha256": "e70c07f8d575b7138785265a02760014ab40eee2bc284341f03060b1c3d753dd"}, "downloads": -1, "filename": "maya_zen_tools-0.1.83.tar.gz", "has_sig": false, "md5_digest": "04d9770eacb53d48806d85e565b219eb", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.8", "size": 31311, "upload_time": "2025-07-29T02:22:11", "upload_time_iso_8601": "2025-07-29T02:22:11.374646Z", "url": "https://files.pythonhosted.org/packages/0c/22/b9ecdb05aa01ce185f9f0a1c29f563f90756811fba25408e6121907c9939/maya_zen_tools-0.1.83.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:20:49 GMT", "package": "marinholab-working-needlemanipulation", "version": "25.6.0.61", "json": {"info": {"author": null, "author_email": "\"Murilo M. Marinho\" <murilomarinho@ieee.org>", "bugtrack_url": null, "classifiers": [], "description": "# Working Project: Needle Manipulation\r\n\r\nUoM-UTokyo collaboration.\r\n\r\n## Installation\r\n\r\n```\r\npip install marinholab-working-needlemanipulation\r\n```\r\n\r\n## Example\r\n\r\n```\r\nneedlemanipulation_example\r\n```\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": null, "keywords": null, "license": "MIT", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": "\"Murilo M. Marinho\" <murilomarinho@ieee.org>", "name": "marinholab-working-needlemanipulation", "package_url": "https://pypi.org/project/marinholab-working-needlemanipulation/", "platform": null, "project_url": "https://pypi.org/project/marinholab-working-needlemanipulation/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/marinholab-working-needlemanipulation/25.6.0.61/", "requires_dist": ["dqrobotics>=23.4.0a49", "quadprog", "termcolor"], "requires_python": ">=3.9", "summary": "Ongoing work on needle manipulation in a collaboration between UTokyo and UoM.", "version": "25.6.0.61", "yanked": false, "yanked_reason": null}, "last_serial": 30394323, "urls": [{"comment_text": null, "digests": {"blake2b_256": "b46db9e1ef643061ae0d72af7c10b55020275548151deb17827f6652fe4b8873", "md5": "bd9127a68a2cebf7d0808fb30b889b9e", "sha256": "eb18ca80c8c373af37de9f9307300a15f9f94e5d492a82d740df104e08f44473"}, "downloads": -1, "filename": "marinholab_working_needlemanipulation-25.6.0.61-cp310-cp310-win_amd64.whl", "has_sig": false, "md5_digest": "bd9127a68a2cebf7d0808fb30b889b9e", "packagetype": "bdist_wheel", "python_version": "cp310", "requires_python": ">=3.9", "size": 142987, "upload_time": "2025-07-29T02:21:01", "upload_time_iso_8601": "2025-07-29T02:21:01.497461Z", "url": "https://files.pythonhosted.org/packages/b4/6d/b9e1ef643061ae0d72af7c10b55020275548151deb17827f6652fe4b8873/marinholab_working_needlemanipulation-25.6.0.61-cp310-cp310-win_amd64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "62bef25702cb2e57697e98596ad7822feedd64d2b10e27605688f6e06523e7b3", "md5": "cb0bbf39170015d9718d5a68d776a869", "sha256": "334a52968039564fef3ac1a3dac51fa59048ace6f6e31d7b4b67bfc4885c4e53"}, "downloads": -1, "filename": "marinholab_working_needlemanipulation-25.6.0.61-cp311-cp311-win_amd64.whl", "has_sig": false, "md5_digest": "cb0bbf39170015d9718d5a68d776a869", "packagetype": "bdist_wheel", "python_version": "cp311", "requires_python": ">=3.9", "size": 143683, "upload_time": "2025-07-29T02:20:49", "upload_time_iso_8601": "2025-07-29T02:20:49.435412Z", "url": "https://files.pythonhosted.org/packages/62/be/f25702cb2e57697e98596ad7822feedd64d2b10e27605688f6e06523e7b3/marinholab_working_needlemanipulation-25.6.0.61-cp311-cp311-win_amd64.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "a4394a9b0328772df662d86a469f5114fda3c50d4b809f9bad6d5bc37e873a3e", "md5": "f7586afd453984e0233646098b69c8f2", "sha256": "f74eb4fec6cbe8b85aae77827ae20f7ed119419c8e6ef1d8590db709a174fe6f"}, "downloads": -1, "filename": "marinholab_working_needlemanipulation-25.6.0.61-cp312-cp312-win_amd64.whl", "has_sig": false, "md5_digest": "f7586afd453984e0233646098b69c8f2", "packagetype": "bdist_wheel", "python_version": "cp312", "requires_python": ">=3.9", "size": 151985, "upload_time": "2025-07-29T02:21:30", "upload_time_iso_8601": "2025-07-29T02:21:30.955123Z", "url": "https://files.pythonhosted.org/packages/a4/39/4a9b0328772df662d86a469f5114fda3c50d4b809f9bad6d5bc37e873a3e/marinholab_working_needlemanipulation-25.6.0.61-cp312-cp312-win_amd64.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:20:25 GMT", "package": "MLAMA", "version": "0.1.113", "json": {"info": {"author": "Johra Moosa", "author_email": "your_email@example.com", "bugtrack_url": null, "classifiers": [], "description": "# Test by Johra\r\n\r\nThis package provides a simple function to add a signature to a given string.\r\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Description", "Description-Content-Type", "Home-Page", "Requires-Python", "Summary"], "home_page": "https://github.com/yourusername/testbyjohra", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "MLAMA", "package_url": "https://pypi.org/project/MLAMA/", "platform": null, "project_url": "https://pypi.org/project/MLAMA/", "project_urls": {"Homepage": "https://github.com/yourusername/testbyjohra"}, "provides_extra": null, "release_url": "https://pypi.org/project/MLAMA/0.1.113/", "requires_dist": null, "requires_python": ">=3.6", "summary": "MLAMA test package by Johra Moosa", "version": "0.1.113", "yanked": false, "yanked_reason": null}, "last_serial": 30394318, "urls": [{"comment_text": "", "digests": {"blake2b_256": "cb3cf1fa0e1e115223964c9c0cd57ead0051548c1c6dcf5725687919a78d75a2", "md5": "50ec83b1db25d286d0996f9b70e9c960", "sha256": "0571862fad61ce7d6bb23cbf5c375715a7988bbc3db1aa116a39a860e0b6ad32"}, "downloads": -1, "filename": "mlama-0.1.113-py3-none-any.whl", "has_sig": false, "md5_digest": "50ec83b1db25d286d0996f9b70e9c960", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 57064, "upload_time": "2025-07-29T02:20:25", "upload_time_iso_8601": "2025-07-29T02:20:25.062469Z", "url": "https://files.pythonhosted.org/packages/cb/3c/f1fa0e1e115223964c9c0cd57ead0051548c1c6dcf5725687919a78d75a2/mlama-0.1.113-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": "", "digests": {"blake2b_256": "59e8a37ff3b9631e41cbf55b506d97bd6bf19fcaafb8ac997a0a6c82896288f6", "md5": "ed58b504bf47d4f52cde4f11ae05a3e9", "sha256": "9fa71f0c6b18938cced7ea93229dad922b053d5694f496f3db71146e860ab9d9"}, "downloads": -1, "filename": "mlama-0.1.113.tar.gz", "has_sig": false, "md5_digest": "ed58b504bf47d4f52cde4f11ae05a3e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 51860, "upload_time": "2025-07-29T02:20:26", "upload_time_iso_8601": "2025-07-29T02:20:26.462035Z", "url": "https://files.pythonhosted.org/packages/59/e8/a37ff3b9631e41cbf55b506d97bd6bf19fcaafb8ac997a0a6c82896288f6/mlama-0.1.113.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:19:57 GMT", "package": "tree-shaking", "version": "0.1.4", "json": {"info": {"author": "Likianta", "author_email": "likianta@foxmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.12", "Programming Language :: Python :: 3.13"], "description": "# Python Tree Shaking\n\n[\u4e2d\u6587\u7248](./README.zh.md)\n\n*English README is under construction.*\n\n## Install\n\n```sh\npip install tree-shaking\n```\n\nBe noted `tree-shaking` requires Python >= 3.12.\n\n## Usage\n\nProject tree (before):\n\n```sh\n# my example project\n/workspace/hello-world\n|= .venv\n|= hello_world\n   |- __init__.py\n   |- __main__.py\n   |- ...\n|= dist\n|- pyprojet.toml\n|- tree_shaking.yaml\n|- ...\n```\n\n\"tree_shaking.yaml\" content:\n\n```yaml\nroot: .\nsearch_paths:\n  - <root>/.venv/Lib/site-packages\n  - <root>\nentries:\n  - <root>/hello_world/__main__.py\n```\n\nCreate a temporary script (e.g. \"build.py\"), code like this:\n\n```python\nimport tree_shaking\ntree_shaking.build_graph_modules(\"./tree_shaking.yaml\")\ntree_shaking.dump_tree(\"./tree_shaking.yaml\", \"./dist/minified_libs\")\n```\n\nAfter running, the project tree changes:\n\n```sh\n# my example project\n/workspace/hello-world\n|= .venv\n|= hello_world\n   |- __init__.py\n   |- __main__.py\n   |- ...\n|= dist\n   |= minified_libs  # updated\n      |= ...\n|- pyprojet.toml\n|- tree_shaking.yaml\n|- ...\n```\n\nYou can temporarily exclude \".venv/Lib/site-packages\", and add \"dist/minified_libs\" to Python's `sys.path` (put it at the first place) to test if worked.\n\nAfter testing, compress \"dist/minified_libs\" to zip, and compare its size with \".venv/Lib/site-packages\" -- the more heavy dependencies you have, the more notable changes on size reduction.\n\n## Incremental Updates\n\nJust rerun \"build.py\", outputs results to the same path as last time, `tree-shaking` will find the changed parts and do only necessary adding/deleting operations to the target directory.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/likianta/python-tree-shaking", "keywords": null, "license": null, "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "tree-shaking", "package_url": "https://pypi.org/project/tree-shaking/", "platform": null, "project_url": "https://pypi.org/project/tree-shaking/", "project_urls": {"Homepage": "https://github.com/likianta/python-tree-shaking"}, "provides_extra": null, "release_url": "https://pypi.org/project/tree-shaking/0.1.4/", "requires_dist": ["argsense<2.0.0,>=1.0.0", "lk-utils<4.0.0,>=3.2.0"], "requires_python": ">=3.12", "summary": "Python tree-shaking for dependencies to reduce the size of packaging.", "version": "0.1.4", "yanked": false, "yanked_reason": null}, "last_serial": 30394314, "urls": [{"comment_text": "", "digests": {"blake2b_256": "a9421c7be56ce69cbffe542c393fae8bda97f9de8eb2966ac06d8626e771b684", "md5": "8a3fe9f3ea23acf763595a538078a958", "sha256": "711ad835323561f5517aff932e13371f844baa7e9650428209c1aaf64c247539"}, "downloads": -1, "filename": "tree_shaking-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8a3fe9f3ea23acf763595a538078a958", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.12", "size": 23010, "upload_time": "2025-07-29T02:19:57", "upload_time_iso_8601": "2025-07-29T02:19:57.160806Z", "url": "https://files.pythonhosted.org/packages/a9/42/1c7be56ce69cbffe542c393fae8bda97f9de8eb2966ac06d8626e771b684/tree_shaking-0.1.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:18:49 GMT", "package": "sdgp", "version": "0.91.0", "json": {"info": {"author": "Twinkle Computing", "author_email": "Twinkle Computing <twinkle@twinkle.work>", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent"], "description": "[[Installation()](#Installation)] [[sd-get-prompt (Native C Version)](https://github.com/ScrapWare/sd-get-prompt)]\n---\n# SDGP(Stable-Diffusion-Get-Prompt)\n\nEasy display for Stable Diffusion tEXt(Meitu iTXt) Exif data. Anyone can copy and paste from GTK+ dialog.\n\nSample picture is Japanese language but everybod\u306f can understanding through SD(Stable Diffusion) icon picture on right click menu.\n\nShowing Creation AI Configuration Info.\n\n-----\n# Usage (Python Module)\n\n1. Use as Library\n\n```markdown\nfrom sdgp import sdgp\n\n# return dict of iTXt contents\ndict = sdgp(path)\n```\n\n2. commandline\n\n```markdown\npython -m sdgp -i PATH\n```\n-----\n# Usage (Right Clickable)\n\nHow to use?\n\n1. Run to python -m sdgp -i *PATH*\n\n-----\n## KDE\n\n1. create .desktop file.\n2. place to .kde/share/kde4/services/ServiceMenus/\n\n````markdown\n[Desktop Entry]  \nVersion=1.0  \nType=Application  \nName=sd-get-prompt  \nComment=Get tEXt parametor  \nExec=python -m sdgp -i %f\nServiceTypes=KonqPopupMenu/Plugin  \nMimeType=image/png  \nIcon=applications-graphics  \nPath=  \nTerminal=false  \nStartupNotify=true  \n````\n\n& Apply to KDE Dolphin service dir and good changes.\n\n-----\n## XFce\n\n1. Add right-click action for thunar(python -m sdgp -i %f)\n\n![sample](https://raw.githubusercontent.com/ScrapWareOrg/sdgp/refs/heads/main/xfce-sample.png)\n\n-----\n## Others\n\nfor Other wm(window Manager) and file manager.\n\n1. Should be reading your file manager manpages. May be could under run Linux Mint and other Cinnamon distribution and Gnome Nautilus, measure file manager too.\n\n-----\n## Microsoft Windows\n\nGLib and GTK+ needed(MingW, CYgwin, Others).\n\n-----\n# <a id=\"Installation\" name=\"Installation\">Installation</a>\n\nThis package includes C extensions that require compilation during installation. Therefore, your system needs to have the necessary development environment set up.\n\n---\n## Prerequisites for Compilation\n\nBefore installing the package, ensure the following development tools and libraries are installed on your system:\n\n * C/C++ Compiler: Such as GCC on Linux, Clang on macOS, or MinGW-w64 on Windows.\n * pkg-config: A utility used to find compiler and linker flags for installed libraries.\n * GTK 3 Development Files: The development headers and libraries for GTK 3.\n * libpng Development Files: The development headers and libraries for libpng.\n\n---\n## Installation Steps\n\nOnce the prerequisites are met, you can install the package using pip:\npip install your_package_name\n\n(Replace your_package_name with the actual name of your package on PyPI.)\nDetailed Setup Instructions by OS\n\n---\n### Linux (Debian/Ubuntu-based)\n\n```\nsudo apt update\nsudo apt install build-essential pkg-config libgtk-2-dev\n```\n\n### Linux (Fedora/RHEL-based)\n```\nsudo dnf install @development-tools pkg-config gtk2-devel\n```\n\n### macOS\n\nYou can install the prerequisites using Homebrew:\n\n```\nbrew install pkg-config gtk+2\n```\n\n### Windows\n\nOn Windows, we recommend using the MSYS2 environment with the MinGW-w64 toolchain.\n\n * Download and install MSYS2 from the official MSYS2 website.\n * Open the \"MSYS2 MinGW 64-bit\" terminal (from your Start Menu).\n * Inside the MSYS2 terminal, update the package lists and install the necessary development packages:\n   pacman -Syu\n\n```\npacman -S mingw-w64-x86_64-gcc mingw-w64-x86_64-pkg-config mingw-w64-x86_64-gtk2\n```\n\n * After installing the prerequisites, you can then run the pip install command from the same MSYS2 MinGW 64-bit terminal.\nThis README.md content should clearly guide users through the installation process for your package.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": null, "license": null, "license_expression": "GPL-3.0-or-later AND LicenseRef-ResistPsychiatricTerror-1.0-or-later", "license_files": ["LICENSE", "LICENSE.GPLv3", "LICENSE.RPTv1"], "maintainer": null, "maintainer_email": null, "name": "sdgp", "package_url": "https://pypi.org/project/sdgp/", "platform": null, "project_url": "https://pypi.org/project/sdgp/", "project_urls": {"Homepage": "https://github.com/ScrapWareOrg/sdgp", "Issues": "https://github.com/ScrapWareOrg/sdgp"}, "provides_extra": null, "release_url": "https://pypi.org/project/sdgp/0.91.0/", "requires_dist": null, "requires_python": ">=3.9", "summary": "sdgp - Stable Diffusion Get Prompt", "version": "0.91.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394311, "urls": [{"comment_text": null, "digests": {"blake2b_256": "57e65f2dcfb3cc9d412ff73535a56a1d8bb01811c2c216b08abdd37a013e6104", "md5": "6c6461846f2687936654f913366ffe70", "sha256": "d7ec26d1077496f7660af299f9c0c6f94a07355be5d5c560ee451c2b1f757e5c"}, "downloads": -1, "filename": "sdgp-0.91.0.tar.gz", "has_sig": false, "md5_digest": "6c6461846f2687936654f913366ffe70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.9", "size": 23777, "upload_time": "2025-07-29T02:18:49", "upload_time_iso_8601": "2025-07-29T02:18:49.295636Z", "url": "https://files.pythonhosted.org/packages/57/e6/5f2dcfb3cc9d412ff73535a56a1d8bb01811c2c216b08abdd37a013e6104/sdgp-0.91.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:18:15 GMT", "package": "projen-modules", "version": "1.0.97", "json": {"info": {"author": "Dave Shepherd<dave.shepherd@endor.me.uk>", "author_email": null, "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved", "Operating System :: OS Independent", "Programming Language :: JavaScript", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.9", "Typing :: Typed"], "description": "# projen-modules\n\nA collection of custom projen modules, that can be used to bootstrap and maintain consistent project configuration, tooling, dependencies, and builds.\n\n## Getting Started\n\n```sh\nyarn install\nnpx projen build\n```\n\nThis will:\n\n* Install the dependencies\n* Apply any projen changes\n* Run tests\n* Package project locally\n\nAny files changed by projen should be committed to git.\n\nRunning the tests like this will update any snapshot files, this should be reviewed and committed to git.\n\n## Testing\n\nTypes of testing:\n\n* Snapshot - projen project outputs are stored as a snapshot in the corresponding `__snapshots__` directory. When the project changes then it is expected that these snapshots change too and should be reviewed committed alongside the project.\n* Unit tests - these assert on specific functionality of the project and should be written for any new functionality added.\n\n## Creating a New Project\n\n```\nnpx projen new {project} --from projen-modules\n```\n\nSome projects may have required fields that need to be specified as part of this command, review any errors for details what needs to be specified.\n\n### Project Types\n\n| Project type                                   | Description                |\n| ---------------------------------------------- | -------------------------- |\n| [cdk-typescript-app](API.md#cdktypescriptapp-) | A typescript CDK app |\n| [npm-package](API.md#npmpackage-)              | A typescript npm package   |\n| [python-package](API.md#pythonpackage-)        | A python package           |\n| [jsii-package](API.md#jsiiproject-)            | A typescript JSII package  |\n\n## Project Structure\n\nAll source is located in `src` and is grouped by:\n\n* `components` - these are common building blocks that can be used by projects to implement specific project functionality.\n* `projects` - these are projects that can be built from this project (see #something)\n* `utils` - these are helper functions that are often reused\n\n`test` contains tests, and mirrors the `src` directory structure. Within here there are `__snapshots__` which contain snapshots of project tests (see #section).\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": null, "home_page": "https://github.com/daveshepherd/projen-modules.git", "keywords": null, "license": "Apache-2.0", "license_expression": null, "license_files": null, "maintainer": null, "maintainer_email": null, "name": "projen-modules", "package_url": "https://pypi.org/project/projen-modules/", "platform": null, "project_url": "https://pypi.org/project/projen-modules/", "project_urls": {"Homepage": "https://github.com/daveshepherd/projen-modules.git", "Source": "https://github.com/daveshepherd/projen-modules.git"}, "provides_extra": null, "release_url": "https://pypi.org/project/projen-modules/1.0.97/", "requires_dist": ["constructs==10.4.2", "jsii<2.0.0,>=1.112.0", "projen<0.93.0,>=0.92.0", "publication>=0.0.3", "typeguard<4.3.0,>=2.13.3"], "requires_python": "~=3.9", "summary": "A collection of projen modules", "version": "1.0.97", "yanked": false, "yanked_reason": null}, "last_serial": 30394306, "urls": [{"comment_text": null, "digests": {"blake2b_256": "b6465e8f016579c9e3e0a60bca55b389b71558b9d2ab805f458311c2d90060a6", "md5": "755c4728b8692a35e88dfabd2dfa58f1", "sha256": "38944ea5a8127822d9d204cfc159010a6dd8a67b57704e019b23805abb86a972"}, "downloads": -1, "filename": "projen_modules-1.0.97-py3-none-any.whl", "has_sig": false, "md5_digest": "755c4728b8692a35e88dfabd2dfa58f1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.9", "size": 337641, "upload_time": "2025-07-29T02:18:15", "upload_time_iso_8601": "2025-07-29T02:18:15.379368Z", "url": "https://files.pythonhosted.org/packages/b6/46/5e8f016579c9e3e0a60bca55b389b71558b9d2ab805f458311c2d90060a6/projen_modules-1.0.97-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "acd60af7685267151a7cdec4330889b08c759d1aeee2799433b66bbf6d762e8c", "md5": "7bfa2835e4ca92a5b468963c71a05dc7", "sha256": "bc9d7e37a25617c7be820ad42b2bbc258f91cecefc7f560a85133afa742a473b"}, "downloads": -1, "filename": "projen_modules-1.0.97.tar.gz", "has_sig": false, "md5_digest": "7bfa2835e4ca92a5b468963c71a05dc7", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.9", "size": 339182, "upload_time": "2025-07-29T02:18:17", "upload_time_iso_8601": "2025-07-29T02:18:17.319328Z", "url": "https://files.pythonhosted.org/packages/ac/d6/0af7685267151a7cdec4330889b08c759d1aeee2799433b66bbf6d762e8c/projen_modules-1.0.97.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:36Z", "published": "Tue, 29 Jul 2025 02:17:57 GMT", "package": "ethspecify", "version": "0.2.4", "json": {"info": {"author": "Justin Traglia", "author_email": "jtraglia@pm.me", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ethspecify\n\nA tool for referencing the Ethereum specifications in clients.\n\nThe idea is that ethspecify will help developers keep track of when the specification changes. It\nwill also help auditors verify that the client implementations match the specifications. Ideally,\nthis is configured as a CI check which notifies client developers when the specification changes.\nWhen that happens, they can update the implementations appropriately.\n\n## Getting Started\n\n### Installation\n\n```\npython3 -mpip install ethspecify\n```\n\n### Adding Spec Tags\n\nIn your client, add HTML tags like this:\n\n```\n/*\n * <spec fn=\"is_fully_withdrawable_validator\" fork=\"deneb\" />\n */\n```\n\n```\n/*\n * <spec ssz_object=\"BeaconState\" fork=\"electra\" style=\"diff\" />\n */\n```\n\n### Populating Spec Tags\n\nThen, navigate to your codebase and run `ethspecify`:\n\n```\nethspecify\n```\n\n## Specification Options\n\n### Version\n\nThis attribute specifies which version of the consensus specifications to use. Default is `nightly`.\n\n- `nightly` (default) - Uses the latest nightly build from the master branch\n- `v1.6.0-alpha.2`, `v1.6.0-alpha.3`, etc. - Uses a specific tagged release version\n\nExample:\n```\n/*\n * <spec fn=\"apply_deposit\" fork=\"electra\" version=\"v1.6.0-alpha.3\" />\n */\n```\n\n### Fork\n\nThis attribute can be any of the [executable\nspecifications](https://github.com/ethereum/consensus-specs/blob/e6bddd966214a19d2b97199bbe3c02577a22a8b4/Makefile#L3-L15)\nin the consensus-specs. At the time of writing, these are: phase0, altair, bellatrix, capella,\ndeneb, electra, fulu, whisk, eip6800, and eip7732.\n\n### Style\n\nThis attribute can be used to change how the specification content is shown.\n\n#### `hash` (default)\n\nThis style adds a hash of the specification content to the spec tag, without showing the content.\n\n```\n/*\n * <spec fn=\"apply_deposit\" fork=\"electra\" hash=\"c723ce7b\" />\n */\n```\n\n> [!NOTE]\n> The hash is the first 8 characters of the specification content's SHA256 digest.\n\n#### `full`\n\nThis style displays the whole content of this specification item, including comments.\n\n```\n/*\n * <spec fn=\"is_fully_withdrawable_validator\" fork=\"deneb\" style=\"full\">\n * def is_fully_withdrawable_validator(validator: Validator, balance: Gwei, epoch: Epoch) -> bool:\n *     \"\"\"\n *     Check if ``validator`` is fully withdrawable.\n *     \"\"\"\n *     return (\n *         has_eth1_withdrawal_credential(validator)\n *         and validator.withdrawable_epoch <= epoch\n *         and balance > 0\n *     )\n * </spec>\n */\n```\n\n#### `link`\n\nThis style displays a GitHub link to the specification item.\n\n```\n/*\n * <spec fn=\"apply_pending_deposit\" fork=\"electra\" style=\"link\" hash=\"83ee9126\">\n * https://github.com/ethereum/consensus-specs/blob/dev/specs/electra/beacon-chain.md#new-apply_pending_deposit\n * </spec>\n */\n```\n\n#### `diff`\n\nThis style displays a diff with the previous fork's version of the specification.\n\n```\n/*\n * <spec ssz_object=\"BeaconState\" fork=\"electra\" style=\"diff\">\n * --- deneb\n * +++ electra\n * @@ -27,3 +27,12 @@\n *      next_withdrawal_index: WithdrawalIndex\n *      next_withdrawal_validator_index: ValidatorIndex\n *      historical_summaries: List[HistoricalSummary, HISTORICAL_ROOTS_LIMIT]\n * +    deposit_requests_start_index: uint64\n * +    deposit_balance_to_consume: Gwei\n * +    exit_balance_to_consume: Gwei\n * +    earliest_exit_epoch: Epoch\n * +    consolidation_balance_to_consume: Gwei\n * +    earliest_consolidation_epoch: Epoch\n * +    pending_deposits: List[PendingDeposit, PENDING_DEPOSITS_LIMIT]\n * +    pending_partial_withdrawals: List[PendingPartialWithdrawal, PENDING_PARTIAL_WITHDRAWALS_LIMIT]\n * +    pending_consolidations: List[PendingConsolidation, PENDING_CONSOLIDATIONS_LIMIT]\n * </spec>\n */\n```\n\n> [!NOTE]\n> Comments are stripped from the specifications when the `diff` style is used. We do this because\n> these complicate the diff; the \"[Modified in Fork]\" comments aren't valuable here.\n\nThis can be used with any specification item, like functions too:\n\n```\n/*\n * <spec fn=\"is_eligible_for_activation_queue\" fork=\"electra\" style=\"diff\">\n * --- phase0\n * +++ electra\n * @@ -4,5 +4,5 @@\n *      \"\"\"\n *      return (\n *          validator.activation_eligibility_epoch == FAR_FUTURE_EPOCH\n * -        and validator.effective_balance == MAX_EFFECTIVE_BALANCE\n * +        and validator.effective_balance >= MIN_ACTIVATION_BALANCE\n *      )\n * </spec>\n */\n```\n\n## Supported Specification Items\n\n### Constants\n\nThese are items found in the `Constants` section of the specifications.\n\n```\n/*\n * <spec constant_var=\"COMPOUNDING_WITHDRAWAL_PREFIX\" fork=\"electra\" style=\"full\">\n * COMPOUNDING_WITHDRAWAL_PREFIX: Bytes1 = '0x02'\n * </spec>\n */\n```\n\n### Custom Types\n\nThese are items found in the `Custom types` section of the specifications.\n\n```\n/*\n * <spec custom_type=\"Blob\" fork=\"electra\" style=\"full\">\n * Blob = ByteVector[BYTES_PER_FIELD_ELEMENT * FIELD_ELEMENTS_PER_BLOB]\n * </spec>\n */\n```\n\n### Preset Variables\n\nThese are items found in the\n[`presets`](https://github.com/ethereum/consensus-specs/tree/dev/presets) directory.\n\nFor preset variables, in addition to the `preset_var` attribute, you can specify a `preset`\nattribute: minimal or mainnet.\n\n```\n/*\n * <spec preset=\"minimal\" preset_var=\"PENDING_CONSOLIDATIONS_LIMIT\" fork=\"electra\" style=\"full\">\n * PENDING_CONSOLIDATIONS_LIMIT: uint64 = 64\n * </spec>\n *\n * <spec preset=\"mainnet\" preset_var=\"PENDING_CONSOLIDATIONS_LIMIT\" fork=\"electra\" style=\"full\">\n * PENDING_CONSOLIDATIONS_LIMIT: uint64 = 262144\n * </spec>\n */\n```\n\nIt's not strictly necessary to specify the preset attribute. The default preset is mainnet.\n\n```\n/*\n * <spec preset_var=\"FIELD_ELEMENTS_PER_BLOB\" fork=\"electra\" style=\"full\">\n * FIELD_ELEMENTS_PER_BLOB: uint64 = 4096\n * </spec>\n */\n```\n\n### Config Variables\n\nThese are items found in the\n[`configs`](https://github.com/ethereum/consensus-specs/tree/dev/presets) directory.\n\n```\n/*\n * <spec config_var=\"MAX_REQUEST_BLOB_SIDECARS\" fork=\"electra\" style=\"full\">\n * MAX_REQUEST_BLOB_SIDECARS = 768\n * </spec>\n */\n```\n\n### SSZ Objects\n\nThese are items found in the `Containers` section of the specifications.\n\n```\n/*\n * <spec ssz_object=\"ConsolidationRequest\" fork=\"electra\" style=\"full\">\n * class ConsolidationRequest(Container):\n *     source_address: ExecutionAddress\n *     source_pubkey: BLSPubkey\n *     target_pubkey: BLSPubkey\n * </spec>\n */\n```\n\n### Dataclasses\n\nThese are classes with the `@dataclass` decorator.\n\n```\n/*\n * <spec dataclass=\"PayloadAttributes\" fork=\"electra\" style=\"full\">\n * class PayloadAttributes(object):\n *     timestamp: uint64\n *     prev_randao: Bytes32\n *     suggested_fee_recipient: ExecutionAddress\n *     withdrawals: Sequence[Withdrawal]\n *     parent_beacon_block_root: Root  # [New in Deneb:EIP4788]\n * </spec>\n */\n```\n\n### Functions\n\nThese are all the functions found in the specifications.\n\nFor example, two versions of the same function:\n\n```\n/*\n * <spec fn=\"is_fully_withdrawable_validator\" fork=\"deneb\" style=\"full\">\n * def is_fully_withdrawable_validator(validator: Validator, balance: Gwei, epoch: Epoch) -> bool:\n *     \"\"\"\n *     Check if ``validator`` is fully withdrawable.\n *     \"\"\"\n *     return (\n *         has_eth1_withdrawal_credential(validator)\n *         and validator.withdrawable_epoch <= epoch\n *         and balance > 0\n *     )\n * </spec>\n */\n```\n\n```\n/*\n * <spec fn=\"is_fully_withdrawable_validator\" fork=\"electra\" style=\"full\">\n * def is_fully_withdrawable_validator(validator: Validator, balance: Gwei, epoch: Epoch) -> bool:\n *     \"\"\"\n *     Check if ``validator`` is fully withdrawable.\n *     \"\"\"\n *     return (\n *         has_execution_withdrawal_credential(validator)  # [Modified in Electra:EIP7251]\n *         and validator.withdrawable_epoch <= epoch\n *         and balance > 0\n *     )\n * </spec>\n */\n```\n\nWith functions, it's possible to specify which line/lines should be displayed. For example:\n\n```\n/*\n * <spec fn=\"is_fully_withdrawable_validator\" fork=\"electra\" style=\"full\" lines=\"5-9\">\n * return (\n *     has_execution_withdrawal_credential(validator)  # [Modified in Electra:EIP7251]\n *     and validator.withdrawable_epoch <= epoch\n *     and balance > 0\n * )\n * </spec>\n */\n```\n\nNote that the content is automatically dedented.\n\nOr, to display just a single line, only specify a single number. For example:\n\n```\n/*\n * <spec fn=\"is_fully_withdrawable_validator\" fork=\"electra\" style=\"full\" lines=\"6\">\n * has_execution_withdrawal_credential(validator)  # [Modified in Electra:EIP7251]\n * </spec>\n */\n ```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["Author", "Author-Email", "Classifier", "Description", "Description-Content-Type", "Home-Page", "License-File", "Requires-Dist", "Requires-Python", "Summary"], "home_page": "https://github.com/jtraglia/ethspecify", "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "ethspecify", "package_url": "https://pypi.org/project/ethspecify/", "platform": null, "project_url": "https://pypi.org/project/ethspecify/", "project_urls": {"Homepage": "https://github.com/jtraglia/ethspecify"}, "provides_extra": null, "release_url": "https://pypi.org/project/ethspecify/0.2.4/", "requires_dist": ["requests==2.32.3", "PyYAML>=6.0"], "requires_python": ">=3.6", "summary": "A utility for processing Ethereum specification tags.", "version": "0.2.4", "yanked": false, "yanked_reason": null}, "last_serial": 30394303, "urls": [{"comment_text": null, "digests": {"blake2b_256": "07041fc1653659b6dd0d0f3b496d0213b90387b96f2f38c8d464e2c37623a2e8", "md5": "703eed925353ee61516ee3ae621cc094", "sha256": "1f047b7b383dd695d72acfe5556833352953b6a19f50c9fae1e9361f17305419"}, "downloads": -1, "filename": "ethspecify-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "703eed925353ee61516ee3ae621cc094", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16526, "upload_time": "2025-07-29T02:17:57", "upload_time_iso_8601": "2025-07-29T02:17:57.575235Z", "url": "https://files.pythonhosted.org/packages/07/04/1fc1653659b6dd0d0f3b496d0213b90387b96f2f38c8d464e2c37623a2e8/ethspecify-0.2.4-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "1f4dfc4f91a807ef443d4ee18661608181c58fab30b49f849fb0d18a34b072db", "md5": "715ea1fc0b1f60d4794d74f12aeb60bc", "sha256": "38b64120ba607369d010e37c60f9acc3b322e331bee44e6f7ee08e4540ed18d6"}, "downloads": -1, "filename": "ethspecify-0.2.4.tar.gz", "has_sig": false, "md5_digest": "715ea1fc0b1f60d4794d74f12aeb60bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18417, "upload_time": "2025-07-29T02:17:58", "upload_time_iso_8601": "2025-07-29T02:17:58.361769Z", "url": "https://files.pythonhosted.org/packages/1f/4d/fc4f91a807ef443d4ee18661608181c58fab30b49f849fb0d18a34b072db/ethspecify-0.2.4.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
{"fetched_at": "2025-07-29T03:00:37Z", "published": "Tue, 29 Jul 2025 02:17:26 GMT", "package": "Kea2-python", "version": "0.3.0", "json": {"info": {"author": null, "author_email": "Xixian Liang <xixian@stu.ecnu.edu.cn>", "bugtrack_url": null, "classifiers": [], "description": "\n\n[![PyPI](https://img.shields.io/pypi/v/kea2-python.svg)](https://pypi.python.org/pypi/kea2-python)\n[![PyPI Downloads](https://static.pepy.tech/badge/kea2-python)](https://pepy.tech/projects/kea2-python)\n![Python](https://img.shields.io/badge/python-3.8%2B-blue)\n\n<div>\n    <img src=\"https://github.com/user-attachments/assets/84e47b87-2dd2-4d7e-91d1-e8c1d1db0cf4\" style=\"border-radius: 14px; width: 20%; height: 20%;\"/> \n</div>\n\nThe group has reached its capacity. Please contact Xixian Liang at [xixian@stu.ecnu.edu.cn](xixian@stu.ecnu.edu.cn) with your Wechat ID / QR code to be invited to the WeChat group.\n\n### Github repo link\n[https://github.com/ecnusse/Kea2](https://github.com/ecnusse/Kea2)\n\n### [\u70b9\u51fb\u6b64\u5904\uff1a\u67e5\u770b\u4e2d\u6587\u6587\u6863](README_cn.md) \n\n## About \n\nKea2 is an easy-to-use tool for fuzzing mobile apps. Its key *novelty* is able to fuse automated UI testing with scripts (usually written by human), thus empowering automated UI testing with human intelligence for effectively finding *crashing bugs* as well as *non-crashing functional (logic) bugs*. \n\nKea2 is currently built on top of [Fastbot](https://github.com/bytedance/Fastbot_Android), *an industrial-strength automated UI testing tool*, and [uiautomator2](https://github.com/openatx/uiautomator2), *an easy-to-use and stable Android automation library*.\nKea2 currently targets [Android](https://en.wikipedia.org/wiki/Android_(operating_system)) apps. \n\n## Novelty & Important features\n\n<div align=\"center\">\n    <div style=\"max-width:80%; max-height:80%\">\n    <img src=\"docs/intro.png\" style=\"border-radius: 14px; width: 80%; height: 80%;\"/> \n    </div>\n</div>\n\n- **Feature 1**(\u67e5\u627e\u7a33\u5b9a\u6027\u95ee\u9898): coming with the full capability of [Fastbot](https://github.com/bytedance/Fastbot_Android) for stress testing and finding *stability problems* (i.e., *crashing bugs*); \n\n- **Feature 2**(\u81ea\u5b9a\u4e49\u6d4b\u8bd5\u573a\u666f\\\u4e8b\u4ef6\u5e8f\u5217\\\u9ed1\u767d\u540d\u5355\\\u9ed1\u767d\u63a7\u4ef6[^1]): customizing testing scenarios when running Fastbot (e.g., testing specific app functionalities, executing specific event traces, entering specifc UI pages, reaching specific app states, blacklisting specific activities/UI widgets/UI regions) with the full capability and flexibility powered by *python* language and [uiautomator2](https://github.com/openatx/uiautomator2);\n\n- **Feature 3**(\u652f\u6301\u65ad\u8a00\u673a\u5236[^2]): supporting auto-assertions when running Fastbot, based on the idea of [property-based testing](https://en.wikipedia.org/wiki/Software_testing#Property_testing) inheritted from [Kea](https://github.com/ecnusse/Kea), for finding *logic bugs* (i.e., *non-crashing functional bugs*).\n\n    For **Feature 2 and 3**, Kea2 allows you to focus on what app functionalities to be tested. You do not need to worry about how to reach these app functionalities. Just let Fastbot help. As a result, your scripts are usually short, robust and easy to maintain, and the corresponding app functionalities are much more stress-tested!\n\n**The ability of the three features in Kea2**\n\n|  | **Feature 1** | **Feature 2** | **Feature 3** |\n| --- | --- | --- | ---- |\n| **Finding crashes** | :+1: | :+1: | :+1: |\n| **Finding crashes in deep states** |  | :+1: | :+1: |\n| **Finding non-crashing functional (logic) bugs** |  |  | :+1: |\n\n## Kea2's Known Users\n\n[OPay Business](https://play.google.com/store/apps/details?id=team.opay.pay.merchant.service) --- a financial & payment app\n\nWe are glad to hear if you are using Kea2 for your app.\n\n## Design & Roadmap\nKea2 currently works with:\n- [unittest](https://docs.python.org/3/library/unittest.html) as the testing framework to manage the scripts;\n- [uiautomator2](https://github.com/openatx/uiautomator2) as the UI test driver; \n- [Fastbot](https://github.com/bytedance/Fastbot_Android) as the backend automated UI testing tool.\n\nIn the future, Kea2 will be extended to support\n- [pytest](https://docs.pytest.org/en/stable/), another popular python testing framework;\n- [Appium](https://github.com/appium/appium), [Hypium](https://developer.huawei.com/consumer/cn/doc/harmonyos-guides/hypium-python-guidelines) (for HarmonyOS/Open Harmony);\n- any other automated UI testing tools (not limited to Fastbot)\n\n\n## Installation\n\nRunning environment:\n- support Windows, MacOS and Linux\n- python 3.8+, Android 5.0+ (Android SDK installed)\n- **VPN closed** (Features 2 and 3 required)\n\nInstall Kea2 by `pip`:\n```bash\npython3 -m pip install kea2-python\n```\n\nFind Kea2's options by running \n```bash\nkea2 -h\n```\n\n## Quick Test\n\nKea2 connects to and runs on Android devices. We recommend you to do a quick test to ensure that Kea2 is compatible with your devices.\n\n1. Connect to a real Android device or an Android emulator (only one device is enough) and make sure you can see the connected device by running `adb devices`. \n\n2. Run `quicktest.py` to test a sample app `omninotes` (released as `omninotes.apk` in Kea2's repository). The script `quicktest.py` will automatically install and test this sample app for a short time.\n\nInitialize Kea2 under your preferred working directory:\n```python\nkea2 init\n```\n\n> This step is always needed if it is your first time to run Kea2.\n\nRun the quick test:\n```python\npython3 quicktest.py\n```\n\nIf you can see the app `omninotes` is successfully running and tested, Kea2 works!\nOtherwise, please help [file a bug report](https://github.com/ecnusse/Kea2/issues) with the error message to us. Thank you!\n\n\n\n## Feature 1(\u8fd0\u884c\u57fa\u7840\u7248Fastbot\uff1a\u67e5\u627e\u7a33\u5b9a\u6027\u9519\u8bef)\n\nTest your app with the full capability of Fastbot for stress testing and finding *stability problems* (i.e., *crashing bugs*); \n\n\n```bash\nkea2 run -s \"emulator-5554\" -p it.feio.android.omninotes.alpha --agent native --running-minutes 10 --throttle 200\n```\n\nTo understand the meanings of the options, you can see our [manual](docs/manual_en.md#launching-kea2).\n\n> The usage is similar to the the original Fastbot's [shell commands](https://github.com/bytedance/Fastbot_Android?tab=readme-ov-file#run-fastbot-with-shell-command). \n\nSee more options by \n```bash\nkea2 run -h\n```\n\n## Feature 2(\u8fd0\u884c\u589e\u5f3a\u7248Fastbot\uff1a\u81ea\u5b9a\u4e49\u6d4b\u8bd5\u573a\u666f\\\u4e8b\u4ef6\u5e8f\u5217\\\u9ed1\u767d\u63a7\u4ef6)\n\nWhen running any automated UI testing tools like Fastbot to test your apps, you may find that some specifc UI pages or functionalities are difficult to reach or cover. The reason is that Fastbot lacks knowledge of your apps. Fortunately, this is the strength of script testing. In Feature 2, Kea2 can support writing small scripts to guide Fastbot to explore wherever we want. You can also use such small scripts to block specific widgets during UI testing.\n\nIn Kea2, a script is composed of two elements:\n-  **Precondition:** When to execute the script.\n- **Interaction scenario:** The interaction logic (specified in the script's test method) to reach where we want.\n\n### Simple Example\n\nAssuming `Privacy` is a hard-to-reach UI page during automated UI testing. Kea2 can easily guide Fastbot to reach this page.\n\n```python\n    @prob(0.5)\n    # precondition: when we are at the page `Home`\n    @precondition(lambda self: \n        self.d(text=\"Home\").exists\n    )\n    def test_goToPrivacy(self):\n        \"\"\"\n        Guide Fastbot to the page `Privacy` by opening `Drawer`, \n        clicking the option `Setting` and clicking `Privacy`.\n        \"\"\"\n        self.d(description=\"Drawer\").click()\n        self.d(text=\"Settings\").click()\n        self.d(text=\"Privacy\").click()\n```\n\n- By the decorator `@precondition`, we specify the precondition --- when we are at the `Home` page. \nIn this case, the `Home` page is the entry page of the `Privacy` page and the `Home` page can be easily reached by Fastbot. Thus, the script will be activated when we are at `Home` page by checking whether a unique widget `Home` exists. \n- In script's test method `test_goToPrivacy`, we specify the interaction logic (i.e., opening `Drawer`, clicking the option `Setting` and clicking `Privacy`) to guide Fastbot to reach the `Privacy` page.\n- By the decorator `@prob`, we specify the probability (50% in this example) to do the guidance when we are at the `Home` page. As a result, Kea2 still allows Fastbot to explore other pages.\n\nYou can find the full example in script `quicktest.py`, and run this script with Fastbot by the command `kea2 run`:\n\n```bash\n# Launch Kea2 and load one single script quicktest.py.\nkea2 run -s \"emulator-5554\" -p it.feio.android.omninotes.alpha --agent u2 --running-minutes 10 --throttle 200 --driver-name d unittest discover -p quicktest.py\n```\n\n## Feature 3(\u8fd0\u884c\u589e\u5f3a\u7248Fastbot\uff1a\u52a0\u5165\u81ea\u52a8\u65ad\u8a00)\n\nKea2 supports auto-assertions when running Fastbot for finding *logic bugs* (i.e., *non-crashing bugs*). To achieve this, you can add assertions in the scripts. When an assertion fails during automated UI testing, we find a likely functional bug. \n\nIn Feature 3, a script is composed of three elements:\n\n- **Precondition:** When to execute the script.\n- **Interaction scenario:** The interaction logic (specified in the script's test method).\n- **Assertion:** The expected app behaviour.\n\n### Example\n\nIn a social media app, message sending is a common feature. On the message sending page, the `send` button should always appears when the input box is not empty (i.e., has some message).\n\n<div align=\"center\">\n    <img src=\"docs/socialAppBug.png\" style=\"border-radius: 14px; width:30%; height:40%;\"/>\n</div>\n\n<div align=\"center\">\n    The expected behavior (the upper figure) and the buggy behavior (the lower figure).\n</div>\n    \n\nFor the preceding always-holding property, we can write the following script to validate the functional correctness: when there is an `input_box` widget on the message sending page, we can type any non-empty string text into the input box and assert `send_button` should always exists.\n\n\n```python\n    @precondition(\n        lambda self: self.d(description=\"input_box\").exists\n    )\n    def test_input_box(self):\n        from hypothesis.strategies import text, ascii_letters\n        random_str = text(alphabet=ascii_letters).example()\n        self.d(description=\"input_box\").set_text(random_str)\n        assert self.d(description=\"send_button\").exist\n\n        # we can even do more assertions, e.g.,\n        #       the input string should exist on the message sending page\n        assert self.d(text=random_str).exist\n```\n>  We use [hypothesis](https://github.com/HypothesisWorks/hypothesis) to generate random texts.\n\nYou can run this example by using the similar command line in Feature 2. \n\n## Documentations\uff08\u66f4\u591a\u6587\u6863\uff09\n\nYou can find the [user manual](docs/manual_en.md), which includes:\n- Examples of using Kea2 on WeChat (in Chinese);\n- How to define Kea2's scripts and use the decorators (e.g., `@precondition`\u3001`@prob`\u3001`@max_tries`);\n- How to run Kea2 and Kea2's command line options\n- How to find and understand Kea2's testing results\n- How to [whitelist or blacklist](docs/blacklisting.md) specific activities, UI widgets and UI regions during fuzzing\n- [Common Q&A for PBT and Kea2](https://sy8pzmhmun.feishu.cn/wiki/SLGwwqgzIiEuC3kwmV8cSZY0nTg?from=from_copylink)\n\n## Open-source projects used by Kea2\n\n- [Fastbot](https://github.com/bytedance/Fastbot_Android)\n- [uiautomator2](https://github.com/openatx/uiautomator2)\n- [hypothesis](https://github.com/HypothesisWorks/hypothesis)\n\n## Relevant papers of Kea2\n\n> General and Practical Property-based Testing for Android Apps. ASE 2024. [pdf](https://dl.acm.org/doi/10.1145/3691620.3694986)\n\n> An Empirical Study of Functional Bugs in Android Apps. ISSTA 2023. [pdf](https://dl.acm.org/doi/10.1145/3597926.3598138)\n\n> Fastbot2: Reusable Automated Model-based GUI Testing for Android Enhanced by Reinforcement Learning. ASE 2022. [pdf](https://dl.acm.org/doi/10.1145/3551349.3559505)\n\n> Guided, Stochastic Model-Based GUI Testing of Android Apps. ESEC/FSE 2017.  [pdf](https://dl.acm.org/doi/10.1145/3106237.3106298)\n\n### Maintainers/Contributors\n\nKea2 has been actively developed and maintained by the people in [ecnusse](https://github.com/ecnusse):\n\n- [Xixian Liang](https://xixianliang.github.io/resume/) ([@XixianLiang][])\n- [Bo Ma](https://github.com/majuzi123) ([@majuzi123][])\n- [Cheng Peng](https://github.com/Drifterpc) ([@Drifterpc][])\n- [Ting Su](https://tingsu.github.io/) ([@tingsu][])\n\n[@XixianLiang]: https://github.com/XixianLiang\n[@majuzi123]: https://github.com/majuzi123\n[@Drifterpc]: https://github.com/Drifterpc\n[@tingsu]: https://github.com/tingsu\n\n[Zhendong Su](https://people.inf.ethz.ch/suz/), [Yiheng Xiong](https://xyiheng.github.io/), [Xiangchen Shen](https://xiangchenshen.github.io/), [Mengqian Xu](https://mengqianx.github.io/), [Haiying Sun](https://faculty.ecnu.edu.cn/_s43/shy/main.psp), [Jingling Sun](https://jinglingsun.github.io/), [Jue Wang](https://cv.juewang.info/) have also been actively participated in this project and contributed a lot!\n\nKea2 has also received many valuable insights, advices, feedbacks and lessons shared by several industrial people from Bytedance ([Zhao Zhang](https://github.com/zhangzhao4444), Yuhui Su from the Fastbot team), OPay (Tiesong Liu), WeChat (Haochuan Lu, Yuetang Deng), Huawei, Xiaomi and etc. Kudos!\n\n[^1]: \u4e0d\u5c11UI\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u63d0\u4f9b\u4e86\u201c\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5e8f\u5217\u201d\u80fd\u529b\uff08\u5982[Fastbot](https://github.com/bytedance/Fastbot_Android/blob/main/handbook-cn.md#%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BA%8B%E4%BB%B6%E5%BA%8F%E5%88%97) \u548c[AppCrawler](https://github.com/seveniruby/AppCrawler)\uff09\uff0c\u4f46\u5728\u5b9e\u9645\u4f7f\u7528\u4e2d\u5b58\u5728\u4e0d\u5c11\u95ee\u9898\uff0c\u5982\u81ea\u5b9a\u4e49\u80fd\u529b\u6709\u9650\u3001\u4f7f\u7528\u4e0d\u7075\u6d3b\u7b49\u3002\u6b64\u524d\u4e0d\u5c11Fastbot\u7528\u6237\u62b1\u6028\u8fc7\u5176\u201c\u81ea\u5b9a\u4e49\u4e8b\u4ef6\u5e8f\u5217\u201d\u5728\u4f7f\u7528\u4e2d\u7684\u95ee\u9898\uff0c\u5982[#209](https://github.com/bytedance/Fastbot_Android/issues/209), [#225](https://github.com/bytedance/Fastbot_Android/issues/225), [#286](https://github.com/bytedance/Fastbot_Android/issues/286)\u7b49\u3002\n\n[^2]: \u5728UI\u81ea\u52a8\u5316\u6d4b\u8bd5\u8fc7\u7a0b\u4e2d\u652f\u6301\u81ea\u52a8\u65ad\u8a00\u662f\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u80fd\u529b\uff0c\u4f46\u51e0\u4e4e\u6ca1\u6709\u6d4b\u8bd5\u5de5\u5177\u63d0\u4f9b\u8fd9\u6837\u7684\u80fd\u529b\u3002\u6211\u4eec\u6ce8\u610f\u5230[AppCrawler](https://ceshiren.com/t/topic/15801/5)\u7684\u5f00\u53d1\u8005\u66fe\u7ecf\u5e0c\u671b\u63d0\u4f9b\u4e00\u79cd\u65ad\u8a00\u673a\u5236\uff0c\u5f97\u5230\u4e86\u7528\u6237\u7684\u70ed\u5207\u54cd\u5e94\uff0c\u4e0d\u5c11\u7528\u6237\u4ece21\u5e74\u5c31\u5f00\u59cb\u50ac\u66f4\uff0c\u4f46\u59cb\u7ec8\u672a\u80fd\u5b9e\u73b0\u3002 \n", "description_content_type": "text/markdown", "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "dynamic": ["License-File"], "home_page": null, "keywords": null, "license": null, "license_expression": null, "license_files": ["LICENSE"], "maintainer": null, "maintainer_email": null, "name": "Kea2-python", "package_url": "https://pypi.org/project/Kea2-python/", "platform": null, "project_url": "https://pypi.org/project/Kea2-python/", "project_urls": null, "provides_extra": null, "release_url": "https://pypi.org/project/Kea2-python/0.3.0/", "requires_dist": ["rtree>=1.3.0", "jinja2>=3.0.0", "uiautomator2>=3.3.3", "adbutils>=2.9.3"], "requires_python": ">=3.8", "summary": "A python library for supporting and customizing automated UI testing for mobile apps", "version": "0.3.0", "yanked": false, "yanked_reason": null}, "last_serial": 30394300, "urls": [{"comment_text": null, "digests": {"blake2b_256": "46ef4eed7ab63c06506160a25d9fb6223615d625c12a34061beb73dd305c8849", "md5": "75467bb114ca5a3790f1ecd427952d73", "sha256": "1a452f588f6081d55eb24995ece359746cbf39db0bdea83e6b8ed75fa46e07ac"}, "downloads": -1, "filename": "kea2_python-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "75467bb114ca5a3790f1ecd427952d73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 3605534, "upload_time": "2025-07-29T02:17:26", "upload_time_iso_8601": "2025-07-29T02:17:26.672286Z", "url": "https://files.pythonhosted.org/packages/46/ef/4eed7ab63c06506160a25d9fb6223615d625c12a34061beb73dd305c8849/kea2_python-0.3.0-py3-none-any.whl", "yanked": false, "yanked_reason": null}, {"comment_text": null, "digests": {"blake2b_256": "7e22d5c264b32dafa60da7eb500f61485a0b156c92a1c0c195bed19c9ab7484b", "md5": "3f3b16703e2598c6ef8e886ed87bafe1", "sha256": "6ae51f7b6ee102f47a69ac9fd3b7517d197ee3d8a46c0c8a33cf76d9d9fc3360"}, "downloads": -1, "filename": "kea2_python-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3f3b16703e2598c6ef8e886ed87bafe1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 3591301, "upload_time": "2025-07-29T02:17:29", "upload_time_iso_8601": "2025-07-29T02:17:29.078374Z", "url": "https://files.pythonhosted.org/packages/7e/22/d5c264b32dafa60da7eb500f61485a0b156c92a1c0c195bed19c9ab7484b/kea2_python-0.3.0.tar.gz", "yanked": false, "yanked_reason": null}], "vulnerabilities": []}}
